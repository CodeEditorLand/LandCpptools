{
	"activationEvents": [
		"onLanguage:c",
		"onLanguage:cpp",
		"onLanguage:cuda-cpp",
		"onCommand:extension.pickNativeProcess",
		"onCommand:extension.pickRemoteNativeProcess",
		"onDebugResolve:cppdbg",
		"onDebugResolve:cppvsdbg",
		"workspaceContains:/.vscode/c_cpp_properties.json",
		"onFileSystem:cpptools-schema"
	],
	"capabilities": {
		"untrustedWorkspaces": {
			"description": "%c_cpp.capabilities.untrustedWorkspaces.description%",
			"supported": false
		},
		"virtualWorkspaces": false
	},
	"contributes": {
		"breakpoints": [
			{
				"language": "ada"
			},
			{
				"language": "c"
			},
			{
				"language": "cpp"
			},
			{
				"language": "cuda-cpp"
			},
			{
				"language": "cuda"
			},
			{
				"language": "rust"
			}
		],
		"codeActions": [
			{
				"actions": {
					"description": "%c_cpp.codeActions.refactor.inline.macro.description%",
					"kind": "refactor.inline.macro",
					"title": "%c_cpp.codeActions.refactor.inline.macro.title%"
				},
				"languages": [
					"c",
					"cpp",
					"cuda-cpp"
				]
			},
			{
				"actions": {
					"description": "%c_cpp.codeActions.refactor.extract.function.description%",
					"kind": "refactor.extract.function",
					"title": "%c_cpp.codeActions.refactor.extract.function.title%"
				},
				"languages": [
					"c",
					"cpp",
					"cuda-cpp"
				]
			}
		],
		"commands": [
			{
				"category": "C/C++",
				"command": "C_Cpp.ConfigurationSelect",
				"title": "%c_cpp.command.configurationSelect.title%"
			},
			{
				"category": "C/C++",
				"command": "C_Cpp.ConfigurationProviderSelect",
				"title": "%c_cpp.command.configurationProviderSelect.title%"
			},
			{
				"category": "C/C++",
				"command": "C_Cpp.ConfigurationEditJSON",
				"title": "%c_cpp.command.configurationEditJSON.title%"
			},
			{
				"category": "C/C++",
				"command": "C_Cpp.ConfigurationEditUI",
				"title": "%c_cpp.command.configurationEditUI.title%"
			},
			{
				"category": "C/C++",
				"command": "C_Cpp.SelectIntelliSenseConfiguration",
				"title": "%c_cpp.command.selectIntelliSenseConfiguration.title%"
			},
			{
				"category": "C/C++",
				"command": "C_Cpp.InstallCompiler",
				"title": "%c_cpp.command.installCompiler.title%"
			},
			{
				"category": "C/C++",
				"command": "C_Cpp.RescanCompilers",
				"title": "%c_cpp.command.rescanCompilers.title%"
			},
			{
				"category": "C/C++",
				"command": "C_Cpp.SwitchHeaderSource",
				"title": "%c_cpp.command.switchHeaderSource.title%"
			},
			{
				"category": "C/C++",
				"command": "C_Cpp.EnableErrorSquiggles",
				"title": "%c_cpp.command.enableErrorSquiggles.title%"
			},
			{
				"category": "C/C++",
				"command": "C_Cpp.DisableErrorSquiggles",
				"title": "%c_cpp.command.disableErrorSquiggles.title%"
			},
			{
				"category": "C/C++",
				"command": "C_Cpp.ToggleDimInactiveRegions",
				"title": "%c_cpp.command.toggleDimInactiveRegions.title%"
			},
			{
				"category": "C/C++",
				"command": "C_Cpp.ResetDatabase",
				"title": "%c_cpp.command.resetDatabase.title%"
			},
			{
				"category": "C/C++",
				"command": "C_Cpp.TakeSurvey",
				"title": "%c_cpp.command.takeSurvey.title%"
			},
			{
				"category": "C/C++",
				"command": "C_Cpp.RestartIntelliSenseForFile",
				"title": "%c_cpp.command.restartIntelliSenseForFile.title%"
			},
			{
				"category": "C/C++",
				"command": "C_Cpp.LogDiagnostics",
				"title": "%c_cpp.command.logDiagnostics.title%"
			},
			{
				"category": "C/C++",
				"command": "C_Cpp.RescanWorkspace",
				"title": "%c_cpp.command.rescanWorkspace.title%"
			},
			{
				"category": "C/C++",
				"command": "C_Cpp.VcpkgClipboardInstallSuggested",
				"title": "%c_cpp.command.vcpkgClipboardInstallSuggested.title%"
			},
			{
				"category": "C/C++",
				"command": "C_Cpp.VcpkgOnlineHelpSuggested",
				"title": "%c_cpp.command.vcpkgOnlineHelpSuggested.title%"
			},
			{
				"category": "C/C++",
				"command": "C_Cpp.GenerateEditorConfig",
				"title": "%c_cpp.command.generateEditorConfig.title%"
			},
			{
				"category": "C/C++",
				"command": "C_Cpp.referencesViewGroupByType",
				"icon": {
					"dark": "assets/ref-group-by-type-dark.svg",
					"light": "assets/ref-group-by-type-light.svg"
				},
				"title": "%c_cpp.command.referencesViewGroupByType.title%"
			},
			{
				"category": "C/C++",
				"command": "C_Cpp.referencesViewUngroupByType",
				"icon": {
					"dark": "assets/ref-ungroup-by-type-dark.svg",
					"light": "assets/ref-ungroup-by-type-light.svg"
				},
				"title": "%c_cpp.command.referencesViewUngroupByType.title%"
			},
			{
				"category": "C/C++",
				"command": "C_Cpp.GoToNextDirectiveInGroup",
				"title": "%c_cpp.command.GoToNextDirectiveInGroup.title%"
			},
			{
				"category": "C/C++",
				"command": "C_Cpp.GoToPrevDirectiveInGroup",
				"title": "%c_cpp.command.GoToPrevDirectiveInGroup.title%"
			},
			{
				"category": "C/C++",
				"command": "C_Cpp.CreateDeclarationOrDefinition",
				"title": "%c_cpp.command.CreateDeclarationOrDefinition.title%"
			},
			{
				"category": "C/C++",
				"command": "C_Cpp.RunCodeAnalysisOnActiveFile",
				"title": "%c_cpp.command.RunCodeAnalysisOnActiveFile.title%"
			},
			{
				"category": "C/C++",
				"command": "C_Cpp.RunCodeAnalysisOnOpenFiles",
				"title": "%c_cpp.command.RunCodeAnalysisOnOpenFiles.title%"
			},
			{
				"category": "C/C++",
				"command": "C_Cpp.RunCodeAnalysisOnAllFiles",
				"title": "%c_cpp.command.RunCodeAnalysisOnAllFiles.title%"
			},
			{
				"category": "C/C++",
				"command": "C_Cpp.RemoveAllCodeAnalysisProblems",
				"title": "%c_cpp.command.RemoveAllCodeAnalysisProblems.title%"
			},
			{
				"category": "C/C++",
				"command": "C_Cpp.BuildAndDebugFile",
				"icon": "$(debug-alt)",
				"title": "%c_cpp.command.BuildAndDebugFile.title%"
			},
			{
				"category": "C/C++",
				"command": "C_Cpp.BuildAndRunFile",
				"icon": "$(run)",
				"title": "%c_cpp.command.BuildAndRunFile.title%"
			},
			{
				"category": "C/C++",
				"command": "C_Cpp.AddDebugConfiguration",
				"icon": "$(debug-configure)",
				"title": "%c_cpp.command.AddDebugConfiguration.title%"
			},
			{
				"category": "C/C++",
				"command": "C_Cpp.GenerateDoxygenComment",
				"title": "%c_cpp.command.GenerateDoxygenComment.title%"
			},
			{
				"category": "C/C++",
				"command": "C_Cpp.addSshTarget",
				"icon": "$(plus)",
				"title": "%c_cpp.command.addSshTarget.title%"
			},
			{
				"category": "C/C++",
				"command": "C_Cpp.removeSshTarget",
				"icon": "$(remove)",
				"title": "%c_cpp.command.removeSshTarget.title%"
			},
			{
				"category": "C/C++",
				"command": "C_Cpp.setActiveSshTarget",
				"icon": "$(check)",
				"title": "%c_cpp.command.setActiveSshTarget.title%"
			},
			{
				"category": "C/C++",
				"command": "C_Cpp.selectActiveSshTarget",
				"title": "%c_cpp.command.selectActiveSshTarget.title%"
			},
			{
				"category": "C/C++",
				"command": "C_Cpp.selectSshTarget",
				"title": "%c_cpp.command.selectSshTarget.title%"
			},
			{
				"category": "C/C++",
				"command": "C_Cpp.activeSshTarget",
				"title": "%c_cpp.command.activeSshTarget.title%"
			},
			{
				"category": "C/C++",
				"command": "C_Cpp.refreshCppSshTargetsView",
				"icon": "$(refresh)",
				"title": "%c_cpp.command.refreshCppSshTargetsView.title%"
			},
			{
				"category": "C/C++",
				"command": "C_Cpp.sshTerminal",
				"icon": "$(terminal)",
				"title": "%c_cpp.command.sshTerminal.title%"
			}
		],
		"configuration": [
			{
				"properties": {
					"C_Cpp.autocomplete": {
						"default": "default",
						"enum": [
							"default",
							"disabled"
						],
						"enumDescriptions": [
							"%c_cpp.configuration.autocomplete.default.description%",
							"%c_cpp.configuration.autocomplete.disabled.description%"
						],
						"markdownDescription": "%c_cpp.configuration.autocomplete.markdownDescription%",
						"scope": "resource",
						"type": "string"
					},
					"C_Cpp.autocompleteAddParentheses": {
						"default": false,
						"markdownDescription": "%c_cpp.configuration.autocompleteAddParentheses.markdownDescription%",
						"scope": "resource",
						"type": "boolean"
					},
					"C_Cpp.codeFolding": {
						"default": "enabled",
						"description": "%c_cpp.configuration.codeFolding.description%",
						"enum": [
							"enabled",
							"disabled"
						],
						"scope": "window",
						"type": "string"
					},
					"C_Cpp.configurationWarnings": {
						"default": "enabled",
						"description": "%c_cpp.configuration.configurationWarnings.description%",
						"enum": [
							"enabled",
							"disabled"
						],
						"scope": "resource",
						"type": "string"
					},
					"C_Cpp.default.browse.databaseFilename": {
						"markdownDescription": "%c_cpp.configuration.default.browse.databaseFilename.markdownDescription%",
						"scope": "machine-overridable",
						"type": "string"
					},
					"C_Cpp.default.browse.limitSymbolsToIncludedHeaders": {
						"default": true,
						"markdownDescription": "%c_cpp.configuration.default.browse.limitSymbolsToIncludedHeaders.markdownDescription%",
						"scope": "resource",
						"type": "boolean"
					},
					"C_Cpp.default.browse.path": {
						"default": null,
						"items": {
							"type": "string"
						},
						"markdownDescription": "%c_cpp.configuration.default.browse.path.markdownDescription%",
						"scope": "machine-overridable",
						"type": "array",
						"uniqueItems": true
					},
					"C_Cpp.default.cStandard": {
						"enum": [
							"",
							"c89",
							"c99",
							"c11",
							"c17",
							"c23",
							"gnu89",
							"gnu99",
							"gnu11",
							"gnu17",
							"gnu23"
						],
						"markdownDescription": "%c_cpp.configuration.default.cStandard.markdownDescription%",
						"scope": "resource",
						"type": "string"
					},
					"C_Cpp.default.compileCommands": {
						"markdownDescription": "%c_cpp.configuration.default.compileCommands.markdownDescription%",
						"scope": "machine-overridable",
						"type": "string"
					},
					"C_Cpp.default.compilerArgs": {
						"items": {
							"type": "string"
						},
						"markdownDescription": "%c_cpp.configuration.default.compilerArgs.markdownDescription%",
						"scope": "machine-overridable",
						"type": "array",
						"uniqueItems": true
					},
					"C_Cpp.default.compilerPath": {
						"default": null,
						"markdownDescription": "%c_cpp.configuration.default.compilerPath.markdownDescription%",
						"scope": "machine-overridable",
						"type": [
							"string",
							"null"
						]
					},
					"C_Cpp.default.configurationProvider": {
						"markdownDescription": "%c_cpp.configuration.default.configurationProvider.markdownDescription%",
						"scope": "resource",
						"type": "string"
					},
					"C_Cpp.default.cppStandard": {
						"enum": [
							"",
							"c++98",
							"c++03",
							"c++11",
							"c++14",
							"c++17",
							"c++20",
							"c++23",
							"gnu++98",
							"gnu++03",
							"gnu++11",
							"gnu++14",
							"gnu++17",
							"gnu++20",
							"gnu++23"
						],
						"markdownDescription": "%c_cpp.configuration.default.cppStandard.markdownDescription%",
						"scope": "resource",
						"type": "string"
					},
					"C_Cpp.default.customConfigurationVariables": {
						"default": null,
						"markdownDescription": "%c_cpp.configuration.default.customConfigurationVariables.markdownDescription%",
						"patternProperties": {
							"(^.+$)": {
								"type": "string"
							}
						},
						"scope": "machine-overridable",
						"type": [
							"object",
							"null"
						]
					},
					"C_Cpp.default.defines": {
						"items": {
							"type": "string"
						},
						"markdownDescription": "%c_cpp.configuration.default.defines.markdownDescription%",
						"scope": "machine-overridable",
						"type": "array",
						"uniqueItems": true
					},
					"C_Cpp.default.dotConfig": {
						"markdownDescription": "%c_cpp.configuration.default.dotConfig.markdownDescription%",
						"scope": "resource",
						"type": "string"
					},
					"C_Cpp.default.enableConfigurationSquiggles": {
						"default": true,
						"markdownDescription": "%c_cpp.configuration.default.enableConfigurationSquiggles.markdownDescription%",
						"scope": "resource",
						"type": "boolean"
					},
					"C_Cpp.default.forcedInclude": {
						"items": {
							"type": "string"
						},
						"markdownDescription": "%c_cpp.configuration.default.forcedInclude.markdownDescription%",
						"scope": "machine-overridable",
						"type": "array",
						"uniqueItems": true
					},
					"C_Cpp.default.includePath": {
						"items": {
							"type": "string"
						},
						"markdownDescription": "%c_cpp.configuration.default.includePath.markdownDescription%",
						"scope": "machine-overridable",
						"type": "array",
						"uniqueItems": true
					},
					"C_Cpp.default.intelliSenseMode": {
						"enum": [
							"",
							"macos-clang-x86",
							"macos-clang-x64",
							"macos-clang-arm",
							"macos-clang-arm64",
							"macos-gcc-x86",
							"macos-gcc-x64",
							"macos-gcc-arm",
							"macos-gcc-arm64",
							"linux-clang-x86",
							"linux-clang-x64",
							"linux-clang-arm",
							"linux-clang-arm64",
							"linux-gcc-x86",
							"linux-gcc-x64",
							"linux-gcc-arm",
							"linux-gcc-arm64",
							"windows-clang-x86",
							"windows-clang-x64",
							"windows-clang-arm",
							"windows-clang-arm64",
							"windows-gcc-x86",
							"windows-gcc-x64",
							"windows-gcc-arm",
							"windows-gcc-arm64",
							"windows-msvc-x86",
							"windows-msvc-x64",
							"windows-msvc-arm",
							"windows-msvc-arm64",
							"clang-x86",
							"clang-x64",
							"clang-arm",
							"clang-arm64",
							"gcc-x86",
							"gcc-x64",
							"gcc-arm",
							"gcc-arm64",
							"msvc-x86",
							"msvc-x64",
							"msvc-arm",
							"msvc-arm64"
						],
						"markdownDescription": "%c_cpp.configuration.default.intelliSenseMode.markdownDescription%",
						"scope": "machine-overridable",
						"type": "string"
					},
					"C_Cpp.default.macFrameworkPath": {
						"items": {
							"type": "string"
						},
						"markdownDescription": "%c_cpp.configuration.default.macFrameworkPath.markdownDescription%",
						"scope": "machine-overridable",
						"type": "array",
						"uniqueItems": true
					},
					"C_Cpp.default.mergeConfigurations": {
						"markdownDescription": "%c_cpp.configuration.default.mergeConfigurations.markdownDescription%",
						"scope": "resource",
						"type": "boolean"
					},
					"C_Cpp.default.systemIncludePath": {
						"items": {
							"type": "string"
						},
						"markdownDescription": "%c_cpp.configuration.default.systemIncludePath.markdownDescription%",
						"scope": "machine-overridable",
						"type": "array",
						"uniqueItems": true
					},
					"C_Cpp.default.windowsSdkVersion": {
						"markdownDescription": "%c_cpp.configuration.default.windowsSdkVersion.markdownDescription%",
						"pattern": "^((\\d{2}\\.\\d{1}\\.\\d{5}\\.\\d{1}$|^8\\.1)|())$",
						"scope": "machine-overridable",
						"type": "string"
					},
					"C_Cpp.dimInactiveRegions": {
						"default": true,
						"description": "%c_cpp.configuration.dimInactiveRegions.description%",
						"scope": "resource",
						"type": "boolean"
					},
					"C_Cpp.enhancedColorization": {
						"default": "enabled",
						"enum": [
							"enabled",
							"disabled"
						],
						"markdownDescription": "%c_cpp.configuration.enhancedColorization.markdownDescription%",
						"scope": "window",
						"type": "string"
					},
					"C_Cpp.errorSquiggles": {
						"default": "enabledIfIncludesResolve",
						"description": "%c_cpp.configuration.errorSquiggles.description%",
						"enum": [
							"enabled",
							"disabled",
							"enabledIfIncludesResolve"
						],
						"scope": "resource",
						"type": "string"
					},
					"C_Cpp.exclusionPolicy": {
						"default": "checkFolders",
						"enum": [
							"checkFolders",
							"checkFilesAndFolders"
						],
						"enumDescriptions": [
							"%c_cpp.configuration.exclusionPolicy.checkFolders.description%",
							"%c_cpp.configuration.exclusionPolicy.checkFilesAndFolders.description%"
						],
						"markdownDescription": "%c_cpp.configuration.exclusionPolicy.markdownDescription%",
						"scope": "resource",
						"type": "string"
					},
					"C_Cpp.files.exclude": {
						"additionalProperties": {
							"anyOf": [
								{
									"markdownDescription": "%c_cpp.configuration.filesExcludeBoolean.markdownDescription%",
									"type": "boolean"
								},
								{
									"properties": {
										"when": {
											"default": "$(basename).ext",
											"markdownDescription": "%c_cpp.configuration.filesExcludeWhen.markdownDescription%",
											"pattern": "\\w*\\$\\(basename\\)\\w*",
											"type": "string"
										}
									},
									"type": "object"
								}
							]
						},
						"default": {
							"**/.vs": true,
							"**/.vscode": true
						},
						"markdownDescription": "%c_cpp.configuration.filesExclude.markdownDescription%",
						"scope": "resource",
						"type": "object"
					},
					"C_Cpp.hover": {
						"default": "default",
						"description": "%c_cpp.configuration.hover.description%",
						"enum": [
							"default",
							"disabled"
						],
						"scope": "resource",
						"type": "string"
					},
					"C_Cpp.inactiveRegionBackgroundColor": {
						"description": "%c_cpp.configuration.inactiveRegionBackgroundColor.description%",
						"scope": "resource",
						"type": "string"
					},
					"C_Cpp.inactiveRegionForegroundColor": {
						"description": "%c_cpp.configuration.inactiveRegionForegroundColor.description%",
						"scope": "resource",
						"type": "string"
					},
					"C_Cpp.inactiveRegionOpacity": {
						"default": 0.55,
						"markdownDescription": "%c_cpp.configuration.inactiveRegionOpacity.markdownDescription%",
						"maximum": 1,
						"minimum": 0.1,
						"scope": "resource",
						"type": "number"
					},
					"C_Cpp.inlayHints.autoDeclarationTypes.enabled": {
						"default": false,
						"markdownDescription": "%c_cpp.configuration.inlayHints.autoDeclarationTypes.enabled.markdownDescription%",
						"scope": "resource",
						"type": "boolean"
					},
					"C_Cpp.inlayHints.autoDeclarationTypes.showOnLeft": {
						"default": false,
						"markdownDescription": "%c_cpp.configuration.inlayHints.autoDeclarationTypes.showOnLeft.markdownDescription%",
						"scope": "resource",
						"type": "boolean"
					},
					"C_Cpp.inlayHints.parameterNames.enabled": {
						"default": false,
						"markdownDescription": "%c_cpp.configuration.inlayHints.parameterNames.enabled.markdownDescription%",
						"scope": "resource",
						"type": "boolean"
					},
					"C_Cpp.inlayHints.parameterNames.hideLeadingUnderscores": {
						"default": true,
						"markdownDescription": "%c_cpp.configuration.inlayHints.parameterNames.hideLeadingUnderscores.markdownDescription%",
						"scope": "resource",
						"type": "boolean"
					},
					"C_Cpp.inlayHints.parameterNames.suppressWhenArgumentContainsName": {
						"default": true,
						"markdownDescription": "%c_cpp.configuration.inlayHints.parameterNames.suppressWhenArgumentContainsName.markdownDescription%",
						"scope": "resource",
						"type": "boolean"
					},
					"C_Cpp.inlayHints.referenceOperator.enabled": {
						"default": false,
						"markdownDescription": "%c_cpp.configuration.inlayHints.referenceOperator.enabled.markdownDescription%",
						"scope": "resource",
						"type": "boolean"
					},
					"C_Cpp.inlayHints.referenceOperator.showSpace": {
						"default": false,
						"markdownDescription": "%c_cpp.configuration.inlayHints.referenceOperator.showSpace.markdownDescription%",
						"scope": "resource",
						"type": "boolean"
					},
					"C_Cpp.intelliSenseEngine": {
						"default": "default",
						"description": "%c_cpp.configuration.intelliSenseEngine.description%",
						"enum": [
							"default",
							"Tag Parser",
							"disabled"
						],
						"enumDescriptions": [
							"%c_cpp.configuration.intelliSenseEngine.default.description%",
							"%c_cpp.configuration.intelliSenseEngine.tagParser.description%",
							"%c_cpp.configuration.intelliSenseEngine.disabled.description%"
						],
						"scope": "resource",
						"type": "string"
					},
					"C_Cpp.intelliSenseUpdateDelay": {
						"default": 1000,
						"description": "%c_cpp.configuration.intelliSenseUpdateDelay.description%",
						"maximum": 3000,
						"minimum": 500,
						"scope": "application",
						"type": "number"
					},
					"C_Cpp.legacyCompilerArgsBehavior": {
						"default": false,
						"markdownDescription": "%c_cpp.configuration.legacyCompilerArgsBehavior.markdownDescription%",
						"scope": "resource",
						"type": "boolean"
					},
					"C_Cpp.refactoring.includeHeader": {
						"default": "always",
						"enum": [
							"always",
							"ifNeeded",
							"never"
						],
						"enumDescriptions": [
							"%c_cpp.configuration.refactoring.includeHeader.always.description%",
							"%c_cpp.configuration.refactoring.includeHeader.ifNeeded.description%",
							"%c_cpp.configuration.refactoring.includeHeader.never.description%"
						],
						"markdownDescription": "%c_cpp.configuration.refactoring.includeHeader.markdownDescription%",
						"scope": "resource",
						"type": "string"
					},
					"C_Cpp.renameRequiresIdentifier": {
						"default": true,
						"markdownDescription": "%c_cpp.configuration.renameRequiresIdentifier.markdownDescription%",
						"scope": "application",
						"type": "boolean"
					},
					"C_Cpp.suggestSnippets": {
						"default": true,
						"markdownDescription": "%c_cpp.configuration.suggestSnippets.markdownDescription%",
						"scope": "resource",
						"type": "boolean"
					},
					"C_Cpp.workspaceParsingPriority": {
						"default": "highest",
						"enum": [
							"highest",
							"high",
							"medium",
							"low"
						],
						"markdownDescription": "%c_cpp.configuration.workspaceParsingPriority.markdownDescription%",
						"scope": "window",
						"type": "string"
					},
					"C_Cpp.workspaceSymbols": {
						"default": "Just My Code",
						"description": "%c_cpp.configuration.workspaceSymbols.description%",
						"enum": [
							"All",
							"Just My Code"
						],
						"scope": "window",
						"type": "string"
					}
				},
				"title": "%c_cpp.subheaders.intelliSense.title%"
			},
			{
				"properties": {
					"C_Cpp.clang_format_fallbackStyle": {
						"default": "Visual Studio",
						"markdownDescription": "%c_cpp.configuration.clang_format_fallbackStyle.markdownDescription%",
						"scope": "resource",
						"type": "string"
					},
					"C_Cpp.clang_format_path": {
						"markdownDescription": "%c_cpp.configuration.clang_format_path.markdownDescription%",
						"scope": "machine-overridable",
						"type": "string"
					},
					"C_Cpp.clang_format_sortIncludes": {
						"default": null,
						"enum": [
							true,
							false,
							null
						],
						"markdownDescription": "%c_cpp.configuration.clang_format_sortIncludes.markdownDescription%",
						"scope": "resource",
						"type": [
							"boolean",
							"null"
						]
					},
					"C_Cpp.clang_format_style": {
						"default": "file",
						"markdownDescription": "%c_cpp.configuration.clang_format_style.markdownDescription%",
						"scope": "resource",
						"type": "string"
					},
					"C_Cpp.formatting": {
						"default": "default",
						"description": "%c_cpp.configuration.formatting.description%",
						"enum": [
							"clangFormat",
							"vcFormat",
							"default",
							"disabled"
						],
						"markdownEnumDescriptions": [
							"%c_cpp.configuration.formatting.clangFormat.markdownDescription%",
							"%c_cpp.configuration.formatting.vcFormat.markdownDescription%",
							"%c_cpp.configuration.formatting.Default.markdownDescription%",
							"%c_cpp.configuration.formatting.Disabled.markdownDescription%"
						],
						"scope": "resource",
						"type": "string"
					},
					"C_Cpp.vcFormat.indent.accessSpecifiers": {
						"default": false,
						"markdownDescription": "%c_cpp.configuration.vcFormat.indent.accessSpecifiers.markdownDescription%",
						"scope": "resource",
						"type": "boolean"
					},
					"C_Cpp.vcFormat.indent.braces": {
						"default": false,
						"markdownDescription": "%c_cpp.configuration.vcFormat.indent.braces.markdownDescription%",
						"scope": "resource",
						"type": "boolean"
					},
					"C_Cpp.vcFormat.indent.caseContents": {
						"default": true,
						"markdownDescription": "%c_cpp.configuration.vcFormat.indent.caseContents.markdownDescription%",
						"scope": "resource",
						"type": "boolean"
					},
					"C_Cpp.vcFormat.indent.caseContentsWhenBlock": {
						"default": false,
						"markdownDescription": "%c_cpp.configuration.vcFormat.indent.caseContentsWhenBlock.markdownDescription%",
						"scope": "resource",
						"type": "boolean"
					},
					"C_Cpp.vcFormat.indent.caseLabels": {
						"default": false,
						"markdownDescription": "%c_cpp.configuration.vcFormat.indent.caseLabels.markdownDescription%",
						"scope": "resource",
						"type": "boolean"
					},
					"C_Cpp.vcFormat.indent.gotoLabels": {
						"default": "oneLeft",
						"description": "%c_cpp.configuration.vcFormat.indent.gotoLabels.description%",
						"enum": [
							"oneLeft",
							"leftmostColumn",
							"none"
						],
						"markdownEnumDescriptions": [
							"%c_cpp.configuration.vcFormat.indent.gotoLabels.oneLeft.markdownDescription%",
							"%c_cpp.configuration.vcFormat.indent.gotoLabels.leftmostColumn.markdownDescription%",
							"%c_cpp.configuration.vcFormat.indent.gotoLabels.none.markdownDescription%"
						],
						"scope": "resource",
						"type": "string"
					},
					"C_Cpp.vcFormat.indent.lambdaBracesWhenParameter": {
						"default": true,
						"markdownDescription": "%c_cpp.configuration.vcFormat.indent.lambdaBracesWhenParameter.markdownDescription%",
						"scope": "resource",
						"type": "boolean"
					},
					"C_Cpp.vcFormat.indent.multiLineRelativeTo": {
						"default": "innermostParenthesis",
						"description": "%c_cpp.configuration.vcFormat.indent.multiLineRelativeTo.description%",
						"enum": [
							"outermostParenthesis",
							"innermostParenthesis",
							"statementBegin"
						],
						"enumDescriptions": [
							"%c_cpp.configuration.vcFormat.indent.multiLineRelativeTo.outermostParenthesis.description%",
							"%c_cpp.configuration.vcFormat.indent.multiLineRelativeTo.innermostParenthesis.description%",
							"%c_cpp.configuration.vcFormat.indent.multiLineRelativeTo.statementBegin.description%"
						],
						"scope": "resource",
						"type": "string"
					},
					"C_Cpp.vcFormat.indent.namespaceContents": {
						"default": true,
						"markdownDescription": "%c_cpp.configuration.vcFormat.indent.namespaceContents.markdownDescription%",
						"scope": "resource",
						"type": "boolean"
					},
					"C_Cpp.vcFormat.indent.preprocessor": {
						"default": "leftmostColumn",
						"description": "%c_cpp.configuration.vcFormat.indent.preprocessor.description%",
						"enum": [
							"oneLeft",
							"leftmostColumn",
							"none"
						],
						"markdownEnumDescriptions": [
							"%c_cpp.configuration.vcFormat.indent.preprocessor.oneLeft.markdownDescription%",
							"%c_cpp.configuration.vcFormat.indent.preprocessor.leftmostColumn.markdownDescription%",
							"%c_cpp.configuration.vcFormat.indent.preprocessor.none.markdownDescription%"
						],
						"scope": "resource",
						"type": "string"
					},
					"C_Cpp.vcFormat.indent.preserveComments": {
						"default": false,
						"description": "%c_cpp.configuration.vcFormat.indent.preserveComments.description%",
						"scope": "resource",
						"type": "boolean"
					},
					"C_Cpp.vcFormat.indent.preserveWithinParentheses": {
						"default": false,
						"description": "%c_cpp.configuration.vcFormat.indent.preserveWithinParentheses.description%",
						"scope": "resource",
						"type": "boolean"
					},
					"C_Cpp.vcFormat.indent.withinParentheses": {
						"default": "indent",
						"enum": [
							"alignToParenthesis",
							"indent"
						],
						"markdownDescription": "%c_cpp.configuration.vcFormat.indent.withinParentheses.markdownDescription%",
						"markdownEnumDescriptions": [
							"%c_cpp.configuration.vcFormat.indent.withinParentheses.alignToParenthesis.markdownDescription%",
							"%c_cpp.configuration.vcFormat.indent.withinParentheses.indent.markdownDescription%"
						],
						"scope": "resource",
						"type": "string"
					},
					"C_Cpp.vcFormat.newLine.beforeCatch": {
						"default": true,
						"markdownDescription": "%c_cpp.configuration.vcFormat.newLine.beforeCatch.markdownDescription%",
						"scope": "resource",
						"type": "boolean"
					},
					"C_Cpp.vcFormat.newLine.beforeElse": {
						"default": true,
						"markdownDescription": "%c_cpp.configuration.vcFormat.newLine.beforeElse.markdownDescription%",
						"scope": "resource",
						"type": "boolean"
					},
					"C_Cpp.vcFormat.newLine.beforeOpenBrace.block": {
						"default": "ignore",
						"description": "%c_cpp.configuration.vcFormat.newLine.beforeOpenBrace.block.description%",
						"enum": [
							"newLine",
							"sameLine",
							"ignore"
						],
						"enumDescriptions": [
							"%c_cpp.configuration.vcFormat.newLine.beforeOpenBrace.newLine.description%",
							"%c_cpp.configuration.vcFormat.newLine.beforeOpenBrace.sameLine.description%",
							"%c_cpp.configuration.vcFormat.newLine.beforeOpenBrace.ignore.description%"
						],
						"scope": "resource",
						"type": "string"
					},
					"C_Cpp.vcFormat.newLine.beforeOpenBrace.function": {
						"default": "ignore",
						"description": "%c_cpp.configuration.vcFormat.newLine.beforeOpenBrace.function.description%",
						"enum": [
							"newLine",
							"sameLine",
							"ignore"
						],
						"enumDescriptions": [
							"%c_cpp.configuration.vcFormat.newLine.beforeOpenBrace.newLine.description%",
							"%c_cpp.configuration.vcFormat.newLine.beforeOpenBrace.sameLine.description%",
							"%c_cpp.configuration.vcFormat.newLine.beforeOpenBrace.ignore.description%"
						],
						"scope": "resource",
						"type": "string"
					},
					"C_Cpp.vcFormat.newLine.beforeOpenBrace.lambda": {
						"default": "ignore",
						"description": "%c_cpp.configuration.vcFormat.newLine.beforeOpenBrace.lambda.description%",
						"enum": [
							"newLine",
							"sameLine",
							"ignore"
						],
						"enumDescriptions": [
							"%c_cpp.configuration.vcFormat.newLine.beforeOpenBrace.newLine.description%",
							"%c_cpp.configuration.vcFormat.newLine.beforeOpenBrace.sameLine.description%",
							"%c_cpp.configuration.vcFormat.newLine.beforeOpenBrace.ignore.description%"
						],
						"scope": "resource",
						"type": "string"
					},
					"C_Cpp.vcFormat.newLine.beforeOpenBrace.namespace": {
						"default": "ignore",
						"description": "%c_cpp.configuration.vcFormat.newLine.beforeOpenBrace.namespace.description%",
						"enum": [
							"newLine",
							"sameLine",
							"ignore"
						],
						"enumDescriptions": [
							"%c_cpp.configuration.vcFormat.newLine.beforeOpenBrace.newLine.description%",
							"%c_cpp.configuration.vcFormat.newLine.beforeOpenBrace.sameLine.description%",
							"%c_cpp.configuration.vcFormat.newLine.beforeOpenBrace.ignore.description%"
						],
						"scope": "resource",
						"type": "string"
					},
					"C_Cpp.vcFormat.newLine.beforeOpenBrace.type": {
						"default": "ignore",
						"description": "%c_cpp.configuration.vcFormat.newLine.beforeOpenBrace.type.description%",
						"enum": [
							"newLine",
							"sameLine",
							"ignore"
						],
						"enumDescriptions": [
							"%c_cpp.configuration.vcFormat.newLine.beforeOpenBrace.newLine.description%",
							"%c_cpp.configuration.vcFormat.newLine.beforeOpenBrace.sameLine.description%",
							"%c_cpp.configuration.vcFormat.newLine.beforeOpenBrace.ignore.description%"
						],
						"scope": "resource",
						"type": "string"
					},
					"C_Cpp.vcFormat.newLine.beforeWhileInDoWhile": {
						"default": false,
						"markdownDescription": "%c_cpp.configuration.vcFormat.newLine.beforeWhileInDoWhile.markdownDescription%",
						"scope": "resource",
						"type": "boolean"
					},
					"C_Cpp.vcFormat.newLine.closeBraceSameLine.emptyFunction": {
						"default": false,
						"description": "%c_cpp.configuration.vcFormat.newLine.closeBraceSameLine.emptyFunction.description%",
						"scope": "resource",
						"type": "boolean"
					},
					"C_Cpp.vcFormat.newLine.closeBraceSameLine.emptyType": {
						"default": false,
						"description": "%c_cpp.configuration.vcFormat.newLine.closeBraceSameLine.emptyType.description%",
						"scope": "resource",
						"type": "boolean"
					},
					"C_Cpp.vcFormat.newLine.scopeBracesOnSeparateLines": {
						"default": false,
						"description": "%c_cpp.configuration.vcFormat.newLine.scopeBracesOnSeparateLines.description%",
						"scope": "resource",
						"type": "boolean"
					},
					"C_Cpp.vcFormat.space.afterCastCloseParenthesis": {
						"default": false,
						"description": "%c_cpp.configuration.vcFormat.space.afterCastCloseParenthesis.description%",
						"scope": "resource",
						"type": "boolean"
					},
					"C_Cpp.vcFormat.space.afterComma": {
						"default": true,
						"description": "%c_cpp.configuration.vcFormat.space.afterComma.description%",
						"scope": "resource",
						"type": "boolean"
					},
					"C_Cpp.vcFormat.space.afterKeywordsInControlFlowStatements": {
						"default": true,
						"description": "%c_cpp.configuration.vcFormat.space.afterKeywordsInControlFlowStatements.description%",
						"scope": "resource",
						"type": "boolean"
					},
					"C_Cpp.vcFormat.space.aroundAssignmentOperator": {
						"default": "insert",
						"description": "%c_cpp.configuration.vcFormat.space.aroundAssignmentOperator.description%",
						"enum": [
							"insert",
							"remove",
							"ignore"
						],
						"enumDescriptions": [
							"%c_cpp.configuration.vcFormat.space.aroundOperators.insert.description%",
							"%c_cpp.configuration.vcFormat.space.aroundOperators.remove.description%",
							"%c_cpp.configuration.vcFormat.space.aroundOperators.ignore.description%"
						],
						"scope": "resource",
						"type": "string"
					},
					"C_Cpp.vcFormat.space.aroundBinaryOperator": {
						"default": "insert",
						"description": "%c_cpp.configuration.vcFormat.space.aroundBinaryOperator.description%",
						"enum": [
							"insert",
							"remove",
							"ignore"
						],
						"enumDescriptions": [
							"%c_cpp.configuration.vcFormat.space.aroundOperators.insert.description%",
							"%c_cpp.configuration.vcFormat.space.aroundOperators.remove.description%",
							"%c_cpp.configuration.vcFormat.space.aroundOperators.ignore.description%"
						],
						"scope": "resource",
						"type": "string"
					},
					"C_Cpp.vcFormat.space.aroundTernaryOperator": {
						"default": "insert",
						"description": "%c_cpp.configuration.vcFormat.space.aroundTernaryOperator.description%",
						"enum": [
							"insert",
							"remove",
							"ignore"
						],
						"enumDescriptions": [
							"%c_cpp.configuration.vcFormat.space.aroundOperators.insert.description%",
							"%c_cpp.configuration.vcFormat.space.aroundOperators.remove.description%",
							"%c_cpp.configuration.vcFormat.space.aroundOperators.ignore.description%"
						],
						"scope": "resource",
						"type": "string"
					},
					"C_Cpp.vcFormat.space.beforeBlockOpenBrace": {
						"default": true,
						"description": "%c_cpp.configuration.vcFormat.space.beforeBlockOpenBrace.description%",
						"scope": "resource",
						"type": "boolean"
					},
					"C_Cpp.vcFormat.space.beforeComma": {
						"default": false,
						"description": "%c_cpp.configuration.vcFormat.space.beforeComma.description%",
						"scope": "resource",
						"type": "boolean"
					},
					"C_Cpp.vcFormat.space.beforeConstructorColon": {
						"default": true,
						"description": "%c_cpp.configuration.vcFormat.space.beforeConstructorColon.description%",
						"scope": "resource",
						"type": "boolean"
					},
					"C_Cpp.vcFormat.space.beforeEmptySquareBrackets": {
						"default": false,
						"description": "%c_cpp.configuration.vcFormat.space.beforeEmptySquareBrackets.description%",
						"scope": "resource",
						"type": "boolean"
					},
					"C_Cpp.vcFormat.space.beforeFunctionOpenParenthesis": {
						"default": "remove",
						"description": "%c_cpp.configuration.vcFormat.space.beforeFunctionOpenParenthesis.description%",
						"enum": [
							"insert",
							"remove",
							"ignore"
						],
						"enumDescriptions": [
							"%c_cpp.configuration.vcFormat.space.beforeFunctionOpenParenthesis.insert.description%",
							"%c_cpp.configuration.vcFormat.space.beforeFunctionOpenParenthesis.remove.description%",
							"%c_cpp.configuration.vcFormat.space.beforeFunctionOpenParenthesis.ignore.description%"
						],
						"scope": "resource",
						"type": "string"
					},
					"C_Cpp.vcFormat.space.beforeInheritanceColon": {
						"default": true,
						"description": "%c_cpp.configuration.vcFormat.space.beforeInheritanceColon.description%",
						"scope": "resource",
						"type": "boolean"
					},
					"C_Cpp.vcFormat.space.beforeInitializerListOpenBrace": {
						"default": false,
						"description": "%c_cpp.configuration.vcFormat.space.beforeInitializerListOpenBrace.description%",
						"scope": "resource",
						"type": "boolean"
					},
					"C_Cpp.vcFormat.space.beforeLambdaOpenParenthesis": {
						"default": false,
						"description": "%c_cpp.configuration.vcFormat.space.beforeLambdaOpenParenthesis.description%",
						"scope": "resource",
						"type": "boolean"
					},
					"C_Cpp.vcFormat.space.beforeOpenSquareBracket": {
						"default": false,
						"description": "%c_cpp.configuration.vcFormat.space.beforeOpenSquareBracket.description%",
						"scope": "resource",
						"type": "boolean"
					},
					"C_Cpp.vcFormat.space.betweenEmptyBraces": {
						"default": false,
						"description": "%c_cpp.configuration.vcFormat.space.betweenEmptyBraces.description%",
						"scope": "resource",
						"type": "boolean"
					},
					"C_Cpp.vcFormat.space.betweenEmptyLambdaBrackets": {
						"default": false,
						"description": "%c_cpp.configuration.vcFormat.space.betweenEmptyLambdaBrackets.description%",
						"scope": "resource",
						"type": "boolean"
					},
					"C_Cpp.vcFormat.space.betweenEmptyParameterListParentheses": {
						"default": false,
						"description": "%c_cpp.configuration.vcFormat.space.betweenEmptyParameterListParentheses.description%",
						"scope": "resource",
						"type": "boolean"
					},
					"C_Cpp.vcFormat.space.betweenEmptySquareBrackets": {
						"default": false,
						"description": "%c_cpp.configuration.vcFormat.space.betweenEmptySquareBrackets.description%",
						"scope": "resource",
						"type": "boolean"
					},
					"C_Cpp.vcFormat.space.groupSquareBrackets": {
						"default": true,
						"description": "%c_cpp.configuration.vcFormat.space.groupSquareBrackets.description%",
						"scope": "resource",
						"type": "boolean"
					},
					"C_Cpp.vcFormat.space.insertAfterSemicolon": {
						"default": false,
						"description": "%c_cpp.configuration.vcFormat.space.insertAfterSemicolon.description%",
						"scope": "resource",
						"type": "boolean"
					},
					"C_Cpp.vcFormat.space.pointerReferenceAlignment": {
						"default": "left",
						"description": "%c_cpp.configuration.vcFormat.space.pointerReferenceAlignment.description%",
						"enum": [
							"left",
							"center",
							"right",
							"ignore"
						],
						"enumDescriptions": [
							"%c_cpp.configuration.vcFormat.space.pointerReferenceAlignment.left.description%",
							"%c_cpp.configuration.vcFormat.space.pointerReferenceAlignment.center.description%",
							"%c_cpp.configuration.vcFormat.space.pointerReferenceAlignment.right.description%",
							"%c_cpp.configuration.vcFormat.space.pointerReferenceAlignment.ignore.description%"
						],
						"scope": "resource",
						"type": "string"
					},
					"C_Cpp.vcFormat.space.preserveInInitializerList": {
						"default": true,
						"description": "%c_cpp.configuration.vcFormat.space.preserveInInitializerList.description%",
						"scope": "resource",
						"type": "boolean"
					},
					"C_Cpp.vcFormat.space.removeAroundMemberOperators": {
						"default": true,
						"description": "%c_cpp.configuration.vcFormat.space.removeAroundMemberOperators.description%",
						"scope": "resource",
						"type": "boolean"
					},
					"C_Cpp.vcFormat.space.removeAroundUnaryOperator": {
						"default": true,
						"description": "%c_cpp.configuration.vcFormat.space.removeAroundUnaryOperator.description%",
						"scope": "resource",
						"type": "boolean"
					},
					"C_Cpp.vcFormat.space.removeBeforeSemicolon": {
						"default": true,
						"description": "%c_cpp.configuration.vcFormat.space.removeBeforeSemicolon.description%",
						"scope": "resource",
						"type": "boolean"
					},
					"C_Cpp.vcFormat.space.withinCastParentheses": {
						"default": false,
						"description": "%c_cpp.configuration.vcFormat.space.withinCastParentheses.description%",
						"scope": "resource",
						"type": "boolean"
					},
					"C_Cpp.vcFormat.space.withinControlFlowStatementParentheses": {
						"default": false,
						"description": "%c_cpp.configuration.vcFormat.space.withinControlFlowStatementParentheses.description%",
						"scope": "resource",
						"type": "boolean"
					},
					"C_Cpp.vcFormat.space.withinExpressionParentheses": {
						"default": false,
						"description": "%c_cpp.configuration.vcFormat.space.withinExpressionParentheses.description%",
						"scope": "resource",
						"type": "boolean"
					},
					"C_Cpp.vcFormat.space.withinInitializerListBraces": {
						"default": true,
						"description": "%c_cpp.configuration.vcFormat.space.withinInitializerListBraces.description%",
						"scope": "resource",
						"type": "boolean"
					},
					"C_Cpp.vcFormat.space.withinLambdaBrackets": {
						"default": false,
						"description": "%c_cpp.configuration.vcFormat.space.withinLambdaBrackets.description%",
						"scope": "resource",
						"type": "boolean"
					},
					"C_Cpp.vcFormat.space.withinParameterListParentheses": {
						"default": false,
						"description": "%c_cpp.configuration.vcFormat.space.withinParameterListParentheses.description%",
						"scope": "resource",
						"type": "boolean"
					},
					"C_Cpp.vcFormat.space.withinSquareBrackets": {
						"default": false,
						"description": "%c_cpp.configuration.vcFormat.space.withinSquareBrackets.description%",
						"scope": "resource",
						"type": "boolean"
					},
					"C_Cpp.vcFormat.wrap.preserveBlocks": {
						"default": "oneLiners",
						"description": "%c_cpp.configuration.vcFormat.wrap.preserveBlocks.description%",
						"enum": [
							"oneLiners",
							"allOneLineScopes",
							"never"
						],
						"markdownEnumDescriptions": [
							"%c_cpp.configuration.vcFormat.wrap.preserveBlocks.oneLiners.markdownDescription%",
							"%c_cpp.configuration.vcFormat.wrap.preserveBlocks.allOneLineScopes.markdownDescription%",
							"%c_cpp.configuration.vcFormat.wrap.preserveBlocks.never.markdownDescription%"
						],
						"scope": "resource",
						"type": "string"
					}
				},
				"title": "%c_cpp.subheaders.formatting.title%"
			},
			{
				"properties": {
					"C_Cpp.commentContinuationPatterns": {
						"default": [
							"/**"
						],
						"description": "%c_cpp.configuration.commentContinuationPatterns.description%",
						"items": {
							"anyOf": [
								{
									"markdownDescription": "%c_cpp.configuration.commentContinuationPatterns.items.anyof.string.markdownDescription%",
									"type": "string"
								},
								{
									"properties": {
										"begin": {
											"description": "%c_cpp.configuration.commentContinuationPatterns.items.anyof.object.begin.description%",
											"type": "string"
										},
										"continue": {
											"description": "%c_cpp.configuration.commentContinuationPatterns.items.anyof.object.continue.description%",
											"type": "string"
										}
									},
									"type": "object"
								}
							]
						},
						"scope": "window",
						"type": "array",
						"uniqueItems": true
					},
					"C_Cpp.doxygen.generateOnType": {
						"default": true,
						"description": "%c_cpp.configuration.doxygen.generateOnType.description%",
						"scope": "resource",
						"type": "boolean"
					},
					"C_Cpp.doxygen.generatedStyle": {
						"default": "///",
						"description": "%c_cpp.configuration.doxygen.generatedStyle.description%",
						"enum": [
							"///",
							"/**",
							"/*!",
							"//!"
						],
						"scope": "resource",
						"type": "string"
					},
					"C_Cpp.doxygen.sectionTags": {
						"default": [
							"attention",
							"tparam",
							"param",
							"result",
							"returns",
							"retval",
							"exception",
							"deprecated",
							"warning",
							"note"
						],
						"description": "%c_cpp.configuration.doxygen.sectionTags.description%",
						"items": {
							"enum": [
								"attention",
								"author",
								"authors",
								"bug",
								"copyright",
								"date",
								"deprecated",
								"details",
								"exception",
								"invariant",
								"note",
								"param",
								"pre",
								"post",
								"remark",
								"remarks",
								"result",
								"returns",
								"retval",
								"sa",
								"see",
								"since",
								"tparam",
								"test",
								"todo",
								"version",
								"warning"
							],
							"type": "string"
						},
						"scope": "resource",
						"type": "array"
					},
					"C_Cpp.markdownInComments": {
						"default": "subsetEnabled",
						"description": "%c_cpp.configuration.markdownInComments.description%",
						"enum": [
							"subsetEnabled",
							"enabled",
							"disabled"
						],
						"enumDescriptions": [
							"%c_cpp.configuration.markdownInComments.subsetEnabled.description%",
							"%c_cpp.configuration.markdownInComments.enabled.description%",
							"%c_cpp.configuration.markdownInComments.disabled.description%"
						],
						"scope": "resource",
						"type": "string"
					},
					"C_Cpp.simplifyStructuredComments": {
						"default": true,
						"markdownDescription": "%c_cpp.configuration.simplifyStructuredComments.markdownDescription%",
						"scope": "application",
						"type": "boolean"
					}
				},
				"title": "%c_cpp.subheaders.codeDocumentation.title%"
			},
			{
				"properties": {
					"C_Cpp.codeAnalysis.clangTidy.args": {
						"items": {
							"type": "string"
						},
						"markdownDescription": "%c_cpp.configuration.codeAnalysis.clangTidy.args.markdownDescription%",
						"scope": "resource",
						"type": "array",
						"uniqueItems": true
					},
					"C_Cpp.codeAnalysis.clangTidy.checks.disabled": {
						"items": {
							"enum": [
								"*",
								"abseil-*",
								"abseil-cleanup-ctad",
								"abseil-duration-*",
								"abseil-duration-addition",
								"abseil-duration-comparison",
								"abseil-duration-conversion-cast",
								"abseil-duration-division",
								"abseil-duration-factory-*",
								"abseil-duration-factory-float",
								"abseil-duration-factory-scale",
								"abseil-duration-subtraction",
								"abseil-duration-unnecessary-conversion",
								"abseil-faster-strsplit-delimiter",
								"abseil-no-*",
								"abseil-no-internal-dependencies",
								"abseil-no-namespace",
								"abseil-redundant-strcat-calls",
								"abseil-str-cat-append",
								"abseil-string-find-*",
								"abseil-string-find-startswith",
								"abseil-string-find-str-contains",
								"abseil-time-*",
								"abseil-time-comparison",
								"abseil-time-subtraction",
								"abseil-upgrade-duration-conversions",
								"altera-*",
								"altera-id-dependent-backward-branch",
								"altera-kernel-name-restriction",
								"altera-single-work-item-barrier",
								"altera-struct-pack-align",
								"altera-unroll-loops",
								"android-*",
								"android-cloexec-*",
								"android-cloexec-accept",
								"android-cloexec-accept4",
								"android-cloexec-creat",
								"android-cloexec-dup",
								"android-cloexec-epoll-*",
								"android-cloexec-epoll-create",
								"android-cloexec-epoll-create1",
								"android-cloexec-fopen",
								"android-cloexec-inotify-*",
								"android-cloexec-inotify-init",
								"android-cloexec-inotify-init1",
								"android-cloexec-memfd-create",
								"android-cloexec-open",
								"android-cloexec-pipe",
								"android-cloexec-pipe2",
								"android-cloexec-socket",
								"android-comparison-in-temp-failure-retry",
								"boost-use-*",
								"boost-use-ranges",
								"boost-use-to-string",
								"bugprone-*",
								"bugprone-argument-comment",
								"bugprone-assert-side-effect",
								"bugprone-assignment-in-if-condition",
								"bugprone-bad-signal-to-kill-thread",
								"bugprone-bool-pointer-implicit-conversion",
								"bugprone-branch-clone",
								"bugprone-casting-through-void",
								"bugprone-chained-comparison",
								"bugprone-compare-pointer-to-member-virtual-function",
								"bugprone-copy-constructor-init",
								"bugprone-crtp-constructor-accessibility",
								"bugprone-dangling-handle",
								"bugprone-dynamic-static-initializers",
								"bugprone-easily-swappable-parameters",
								"bugprone-empty-catch",
								"bugprone-exception-escape",
								"bugprone-fold-init-type",
								"bugprone-forward-declaration-namespace",
								"bugprone-forwarding-reference-overload",
								"bugprone-implicit-widening-of-multiplication-result",
								"bugprone-inaccurate-erase",
								"bugprone-inc-dec-in-conditions",
								"bugprone-incorrect-*",
								"bugprone-incorrect-enable-if",
								"bugprone-incorrect-roundings",
								"bugprone-infinite-loop",
								"bugprone-integer-division",
								"bugprone-lambda-function-name",
								"bugprone-macro-parentheses",
								"bugprone-macro-repeated-side-effects",
								"bugprone-misplaced-*",
								"bugprone-misplaced-operator-in-strlen-in-alloc",
								"bugprone-misplaced-pointer-arithmetic-in-alloc",
								"bugprone-misplaced-widening-cast",
								"bugprone-move-forwarding-reference",
								"bugprone-multi-level-implicit-pointer-conversion",
								"bugprone-multiple-*",
								"bugprone-multiple-new-in-one-expression",
								"bugprone-multiple-statement-macro",
								"bugprone-narrowing-conversions",
								"bugprone-no-escape",
								"bugprone-non-zero-enum-to-bool-conversion",
								"bugprone-not-null-terminated-result",
								"bugprone-optional-value-conversion",
								"bugprone-parent-virtual-call",
								"bugprone-pointer-arithmetic-on-polymorphic-object",
								"bugprone-posix-return",
								"bugprone-redundant-branch-condition",
								"bugprone-reserved-identifier",
								"bugprone-return-const-ref-from-parameter",
								"bugprone-shared-ptr-array-mismatch",
								"bugprone-signal-handler",
								"bugprone-signed-char-misuse",
								"bugprone-sizeof-*",
								"bugprone-sizeof-container",
								"bugprone-sizeof-expression",
								"bugprone-spuriously-wake-up-functions",
								"bugprone-standalone-empty",
								"bugprone-string-*",
								"bugprone-string-constructor",
								"bugprone-string-integer-assignment",
								"bugprone-string-literal-with-embedded-nul",
								"bugprone-stringview-nullptr",
								"bugprone-suspicious-*",
								"bugprone-suspicious-enum-usage",
								"bugprone-suspicious-include",
								"bugprone-suspicious-memory-comparison",
								"bugprone-suspicious-memset-usage",
								"bugprone-suspicious-missing-comma",
								"bugprone-suspicious-realloc-usage",
								"bugprone-suspicious-semicolon",
								"bugprone-suspicious-string-compare",
								"bugprone-suspicious-stringview-data-usage",
								"bugprone-swapped-arguments",
								"bugprone-switch-missing-default-case",
								"bugprone-terminating-continue",
								"bugprone-throw-keyword-missing",
								"bugprone-too-small-loop-variable",
								"bugprone-unchecked-optional-access",
								"bugprone-undefined-memory-manipulation",
								"bugprone-undelegated-constructor",
								"bugprone-unhandled-*",
								"bugprone-unhandled-exception-at-new",
								"bugprone-unhandled-self-assignment",
								"bugprone-unique-ptr-array-mismatch",
								"bugprone-unsafe-functions",
								"bugprone-unused-*",
								"bugprone-unused-local-non-trivial-variable",
								"bugprone-unused-raii",
								"bugprone-unused-return-value",
								"bugprone-use-after-move",
								"bugprone-virtual-near-miss",
								"cert-*",
								"cert-con*",
								"cert-con36-c",
								"cert-con54-cpp",
								"cert-ctr56-cpp",
								"cert-dcl*",
								"cert-dcl03-c",
								"cert-dcl16-c",
								"cert-dcl37-c",
								"cert-dcl50-cpp",
								"cert-dcl51-cpp",
								"cert-dcl54-cpp",
								"cert-dcl58-cpp",
								"cert-dcl59-cpp",
								"cert-env33-c",
								"cert-err*",
								"cert-err09-cpp",
								"cert-err33-c",
								"cert-err34-c",
								"cert-err52-cpp",
								"cert-err58-cpp",
								"cert-err60-cpp",
								"cert-err61-cpp",
								"cert-exp42-c",
								"cert-fio38-c",
								"cert-flp*",
								"cert-flp30-c",
								"cert-flp37-c",
								"cert-int09-c",
								"cert-mem57-cpp",
								"cert-msc*",
								"cert-msc30-c",
								"cert-msc32-c",
								"cert-msc33-c",
								"cert-msc50-cpp",
								"cert-msc51-cpp",
								"cert-msc54-cpp",
								"cert-oop*",
								"cert-oop11-cpp",
								"cert-oop54-cpp",
								"cert-oop57-cpp",
								"cert-oop58-cpp",
								"cert-pos*",
								"cert-pos44-c",
								"cert-pos47-c",
								"cert-sig30-c",
								"cert-str34-c",
								"clang-analyzer-*",
								"clang-analyzer-core.*",
								"clang-analyzer-core.BitwiseShift",
								"clang-analyzer-core.CallAndMessage",
								"clang-analyzer-core.DivideZero",
								"clang-analyzer-core.DynamicTypePropagation",
								"clang-analyzer-core.NonNullParamChecker",
								"clang-analyzer-core.NullDereference",
								"clang-analyzer-core.StackAddressEscape",
								"clang-analyzer-core.UndefinedBinaryOperatorResult",
								"clang-analyzer-core.uninitialized.*",
								"clang-analyzer-core.uninitialized.ArraySubscript",
								"clang-analyzer-core.uninitialized.Assign",
								"clang-analyzer-core.uninitialized.Branch",
								"clang-analyzer-core.uninitialized.CapturedBlockVariable",
								"clang-analyzer-core.uninitialized.NewArraySize",
								"clang-analyzer-core.uninitialized.UndefReturn",
								"clang-analyzer-core.VLASize",
								"clang-analyzer-cplusplus.*",
								"clang-analyzer-cplusplus.ArrayDelete",
								"clang-analyzer-cplusplus.InnerPointer",
								"clang-analyzer-cplusplus.Move",
								"clang-analyzer-cplusplus.NewDelete",
								"clang-analyzer-cplusplus.NewDeleteLeaks",
								"clang-analyzer-cplusplus.PlacementNew",
								"clang-analyzer-cplusplus.PureVirtualCall",
								"clang-analyzer-cplusplus.StringChecker",
								"clang-analyzer-deadcode.DeadStores",
								"clang-analyzer-fuchsia.HandleChecker",
								"clang-analyzer-nullablity.*",
								"clang-analyzer-nullability.NullableDereferenced",
								"clang-analyzer-nullability.NullablePassedToNonnull",
								"clang-analyzer-nullability.NullableReturnedFromNonnull",
								"clang-analyzer-nullability.NullPassedToNonnull",
								"clang-analyzer-nullability.NullReturnedFromNonnull",
								"clang-analyzer-optin.*",
								"clang-analyzer-optin.core.EnumCastOutOfRange",
								"clang-analyzer-optin.cplusplus.*",
								"clang-analyzer-optin.cplusplus.UninitializedObject",
								"clang-analyzer-optin.cplusplus.VirtualCall",
								"clang-analyzer-optin.mpi.MPI-Checker",
								"clang-analyzer-optin.osx.*",
								"clang-analyzer-optin.osx.cocoa.localizability.*",
								"clang-analyzer-optin.osx.cocoa.localizability.EmptyLocalizationContextChecker",
								"clang-analyzer-optin.osx.cocoa.localizability.NonLocalizedStringChecker",
								"clang-analyzer-optin.osx.OSObjectCStyleCast",
								"clang-analyzer-optin.performance.*",
								"clang-analyzer-optin.performance.GCDAntipattern",
								"clang-analyzer-optin.performance.Padding",
								"clang-analyzer-optin.portability.UnixAPI",
								"clang-analyzer-optin.taint.TaintedAlloc",
								"clang-analyzer-osx.*",
								"clang-analyzer-osx.API",
								"clang-analyzer-osx.cocoa.*",
								"clang-analyzer-osx.cocoa.AtSync",
								"clang-analyzer-osx.cocoa.AutoreleaseWrite",
								"clang-analyzer-osx.cocoa.ClassRelease",
								"clang-analyzer-osx.cocoa.Dealloc",
								"clang-analyzer-osx.cocoa.IncompatibleMethodTypes",
								"clang-analyzer-osx.cocoa.Loops",
								"clang-analyzer-osx.cocoa.MissingSuperCall",
								"clang-analyzer-osx.cocoa.NilArg",
								"clang-analyzer-osx.cocoa.NonNilReturnValue",
								"clang-analyzer-osx.cocoa.NSAutoreleasePool",
								"clang-analyzer-osx.cocoa.NSError",
								"clang-analyzer-osx.cocoa.ObjCGenerics",
								"clang-analyzer-osx.cocoa.RetainCount",
								"clang-analyzer-osx.cocoa.RetainCountBase",
								"clang-analyzer-osx.cocoa.RunLoopAutoreleaseLeak",
								"clang-analyzer-osx.cocoa.SelfInit",
								"clang-analyzer-osx.cocoa.SuperDealloc",
								"clang-analyzer-osx.cocoa.UnusedIvars",
								"clang-analyzer-osx.cocoa.VariadicMethodTypes",
								"clang-analyzer-osx.coreFoundation.*",
								"clang-analyzer-osx.coreFoundation.CFError",
								"clang-analyzer-osx.coreFoundation.CFNumber",
								"clang-analyzer-osx.coreFoundation.CFRetainRelease",
								"clang-analyzer-osx.coreFoundation.containers.*",
								"clang-analyzer-osx.coreFoundation.containers.OutOfBounds",
								"clang-analyzer-osx.coreFoundation.containers.PointerSizedValues",
								"clang-analyzer-osx.MIG",
								"clang-analyzer-osx.NumberObjectConversion",
								"clang-analyzer-osx.ObjCProperty",
								"clang-analyzer-osx.OSObjectRetainCount",
								"clang-analyzer-osx.SecKeychainAPI",
								"clang-analyzer-security.*",
								"clang-analyzer-security.cert.env.InvalidPtr",
								"clang-analyzer-security.FloatLoopCounter",
								"clang-analyzer-security.insecureAPI.*",
								"clang-analyzer-security.insecureAPI.bcmp",
								"clang-analyzer-security.insecureAPI.bcopy",
								"clang-analyzer-security.insecureAPI.bzero",
								"clang-analyzer-security.insecureAPI.decodeValueOfObjCType",
								"clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling",
								"clang-analyzer-security.insecureAPI.getpw",
								"clang-analyzer-security.insecureAPI.gets",
								"clang-analyzer-security.insecureAPI.mkstemp",
								"clang-analyzer-security.insecureAPI.mktemp",
								"clang-analyzer-security.insecureAPI.rand",
								"clang-analyzer-security.insecureAPI.strcpy",
								"clang-analyzer-security.insecureAPI.UncheckedReturn",
								"clang-analyzer-security.insecureAPI.vfork",
								"clang-analyzer-security.PutenvStackArray",
								"clang-analyzer-security.SetgidSetuidOrder",
								"clang-analyzer-unix.*",
								"clang-analyzer-unix.API",
								"clang-analyzer-unix.BlockInCriticalSection",
								"clang-analyzer-unix.cstring.*",
								"clang-analyzer-unix.cstring.BadSizeArg",
								"clang-analyzer-unix.cstring.NullArg",
								"clang-analyzer-unix.Errno",
								"clang-analyzer-unix.Malloc",
								"clang-analyzer-unix.MallocSizeof",
								"clang-analyzer-unix.MismatchedDeallocator",
								"clang-analyzer-unix.StdCLibraryFunctions",
								"clang-analyzer-unix.Stream",
								"clang-analyzer-unix.Vfork",
								"clang-analyzer-valist.*",
								"clang-analyzer-valist.CopyToSelf",
								"clang-analyzer-valist.Uninitialized",
								"clang-analyzer-valist.Unterminated",
								"clang-analyzer-webkit.NoUncountedMemberChecker",
								"clang-analyzer-webkit.RefCntblBaseVirtualDtor",
								"clang-analyzer-webkit.UncountedLambdaCapturesChecker",
								"concurrency-*",
								"concurrency-mt-unsafe",
								"concurrency-thread-canceltype-asynchronous",
								"cppcoreguidelines-*",
								"cppcoreguidelines-avoid-*",
								"cppcoreguidelines-avoid-c-arrays",
								"cppcoreguidelines-avoid-capturing-lambda-coroutines",
								"cppcoreguidelines-avoid-const-or-ref-data-members",
								"cppcoreguidelines-avoid-do-while",
								"cppcoreguidelines-avoid-goto",
								"cppcoreguidelines-avoid-magic-numbers",
								"cppcoreguidelines-avoid-non-const-global-variables",
								"cppcoreguidelines-avoid-reference-coroutine-parameters",
								"cppcoreguidelines-c-copy-assignment-signature",
								"cppcoreguidelines-explicit-virtual-functions",
								"cppcoreguidelines-init-variables",
								"cppcoreguidelines-interfaces-global-init",
								"cppcoreguidelines-macro-to-enum",
								"cppcoreguidelines-macro-usage",
								"cppcoreguidelines-misleading-capture-default-by-value",
								"cppcoreguidelines-missing-std-forward",
								"cppcoreguidelines-narrowing-conversions",
								"cppcoreguidelines-no-*",
								"cppcoreguidelines-no-malloc",
								"cppcoreguidelines-no-suspend-with-lock",
								"cppcoreguidelines-noexcept-*",
								"cppcoreguidelines-noexcept-destructor",
								"cppcoreguidelines-noexcept-move-operations",
								"cppcoreguidelines-noexcept-swap",
								"cppcoreguidelines-non-private-member-variables-in-classes",
								"cppcoreguidelines-owning-memory",
								"cppcoreguidelines-prefer-member-initializer",
								"cppcoreguidelines-pro-bounds-*",
								"cppcoreguidelines-pro-bounds-array-to-pointer-decay",
								"cppcoreguidelines-pro-bounds-constant-array-index",
								"cppcoreguidelines-pro-bounds-pointer-arithmetic",
								"cppcoreguidelines-pro-type-*",
								"cppcoreguidelines-pro-type-const-cast",
								"cppcoreguidelines-pro-type-cstyle-cast",
								"cppcoreguidelines-pro-type-member-init",
								"cppcoreguidelines-pro-type-reinterpret-cast",
								"cppcoreguidelines-pro-type-static-cast-downcast",
								"cppcoreguidelines-pro-type-union-access",
								"cppcoreguidelines-pro-type-vararg",
								"cppcoreguidelines-rvalue-reference-param-not-moved",
								"cppcoreguidelines-slicing",
								"cppcoreguidelines-special-member-functions",
								"cppcoreguidelines-use-default-member-init",
								"cppcoreguidelines-virtual-class-destructor",
								"darwin-*",
								"darwin-avoid-spinlock",
								"darwin-dispatch-once-nonstatic",
								"fuchsia-*",
								"fuchsia-default-*",
								"fuchsia-default-arguments-calls",
								"fuchsia-default-arguments-declarations",
								"fuchsia-header-anon-namespaces",
								"fuchsia-multiple-inheritance",
								"fuchsia-overloaded-operator",
								"fuchsia-statically-constructed-objects",
								"fuchsia-trailing-return",
								"fuchsia-virtual-inheritance",
								"google-*",
								"google-build-*",
								"google-build-explicit-make-pair",
								"google-build-namespaces",
								"google-build-using-namespace",
								"google-default-arguments",
								"google-explicit-constructor",
								"google-global-names-in-headers",
								"google-objc-*",
								"google-objc-avoid-*",
								"google-objc-avoid-nsobject-new",
								"google-objc-avoid-throwing-exception",
								"google-objc-function-naming",
								"google-objc-global-variable-declaration",
								"google-readability-*",
								"google-readability-avoid-underscore-in-googletest-name",
								"google-readability-braces-around-statements",
								"google-readability-casting",
								"google-readability-function-size",
								"google-readability-namespace-comments",
								"google-readability-todo",
								"google-runtime-*",
								"google-runtime-int",
								"google-runtime-operator",
								"google-upgrade-googletest-case",
								"hicpp-*",
								"hicpp-avoid-*",
								"hicpp-avoid-c-arrays",
								"hicpp-avoid-goto",
								"hicpp-braces-around-statements",
								"hicpp-deprecated-headers",
								"hicpp-exception-baseclass",
								"hicpp-explicit-conversions",
								"hicpp-function-size",
								"hicpp-ignored-remove-result",
								"hicpp-invalid-access-moved",
								"hicpp-member-init",
								"hicpp-move-const-arg",
								"hicpp-multiway-paths-covered",
								"hicpp-named-parameter",
								"hicpp-new-delete-operators",
								"hicpp-no-*",
								"hicpp-no-array-decay",
								"hicpp-no-assembler",
								"hicpp-no-malloc",
								"hicpp-noexcept-move",
								"hicpp-signed-bitwise",
								"hicpp-special-member-functions",
								"hicpp-static-assert",
								"hicpp-undelegated-constructor",
								"hicpp-uppercase-literal-suffix",
								"hicpp-use-*",
								"hicpp-use-auto",
								"hicpp-use-emplace",
								"hicpp-use-equals-*",
								"hicpp-use-equals-default",
								"hicpp-use-equals-delete",
								"hicpp-use-noexcept",
								"hicpp-use-nullptr",
								"hicpp-use-override",
								"hicpp-vararg",
								"linuxkernel-must-check-errs",
								"llvm-*",
								"llvm-else-after-return",
								"llvm-header-guard",
								"llvm-include-order",
								"llvm-namespace-comment",
								"llvm-prefer-*",
								"llvm-prefer-isa-or-dyn-cast-in-conditionals",
								"llvm-prefer-register-over-unsigned",
								"llvm-qualified-auto",
								"llvm-twine-local",
								"llvmlibc-*",
								"llvmlibc-callee-namespace",
								"llvmlibc-implementation-in-namespace",
								"llvmlibc-inline-function-decl",
								"llvmlibc-restrict-system-libc-headers",
								"misc-*",
								"misc-confusable-identifiers",
								"misc-const-correctness",
								"misc-coroutine-hostile-raii",
								"misc-definitions-in-headers",
								"misc-header-include-cycle",
								"misc-include-cleaner",
								"misc-misleading-*",
								"misc-misleading-bidirectional",
								"misc-misleading-identifier",
								"misc-misplaced-const",
								"misc-new-delete-overloads",
								"misc-no-recursion",
								"misc-non-*",
								"misc-non-copyable-objects",
								"misc-non-private-member-variables-in-classes",
								"misc-redundant-expression",
								"misc-static-assert",
								"misc-throw-by-value-catch-by-reference",
								"misc-unconventional-assign-operator",
								"misc-uniqueptr-reset-release",
								"misc-unused-*",
								"misc-unused-alias-decls",
								"misc-unused-parameters",
								"misc-unused-using-decls",
								"misc-use-*",
								"misc-use-anonymous-namespace",
								"misc-use-internal-linkage",
								"modernize-*",
								"modernize-avoid-*",
								"modernize-avoid-bind",
								"modernize-avoid-c-arrays",
								"modernize-concat-nested-namespaces",
								"modernize-deprecated-*",
								"modernize-deprecated-headers",
								"modernize-deprecated-ios-base-aliases",
								"modernize-loop-convert",
								"modernize-macro-to-enum",
								"modernize-make-*",
								"modernize-make-shared",
								"modernize-make-unique",
								"modernize-min-max-use-initializer-list",
								"modernize-pass-by-value",
								"modernize-raw-string-literal",
								"modernize-redundant-void-arg",
								"modernize-replace-*",
								"modernize-replace-auto-ptr",
								"modernize-replace-disallow-copy-and-assign-macro",
								"modernize-replace-random-shuffle",
								"modernize-return-braced-init-list",
								"modernize-shrink-to-fit",
								"modernize-type-traits",
								"modernize-unary-static-assert",
								"modernize-use-*",
								"modernize-use-auto",
								"modernize-use-bool-literals",
								"modernize-use-default",
								"modernize-use-constraints",
								"modernize-use-default-member-init",
								"modernize-use-designated-initializers",
								"modernize-use-emplace",
								"modernize-use-equals-*",
								"modernize-use-equals-default",
								"modernize-use-equals-delete",
								"modernize-use-nodiscard",
								"modernize-use-noexcept",
								"modernize-use-nullptr",
								"modernize-use-override",
								"modernize-use-ranges",
								"modernize-use-starts-ends-with",
								"modernize-use-std-*",
								"modernize-use-std-format",
								"modernize-use-std-numbers",
								"modernize-use-std-print",
								"modernize-use-trailing-return-type",
								"modernize-use-transparent-functors",
								"modernize-use-uncaught-exceptions",
								"modernize-use-using",
								"mpi-*",
								"mpi-buffer-deref",
								"mpi-type-mismatch",
								"objc-*",
								"objc-assert-equals",
								"objc-avoid-nserror-init",
								"objc-dealloc-in-category",
								"objc-forbidden-subclassing",
								"objc-missing-hash",
								"objc-nsdate-formatter",
								"objc-nsinvocation-argument-lifetime",
								"objc-property-declaration",
								"objc-super-self",
								"openmp-*",
								"openmp-exception-escape",
								"openmp-use-default-none",
								"performance-*",
								"performance-avoid-endl",
								"performance-enum-size",
								"performance-faster-string-find",
								"performance-for-range-copy",
								"performance-implicit-conversion-in-loop",
								"performance-inefficient-*",
								"performance-inefficient-algorithm",
								"performance-inefficient-string-concatenation",
								"performance-inefficient-vector-operation",
								"performance-move-*",
								"performance-move-const-arg",
								"performance-move-constructor-init",
								"performance-no-*",
								"performance-no-automatic-move",
								"performance-no-int-to-ptr",
								"performance-noexcept-*",
								"performance-noexcept-destructor",
								"performance-noexcept-move-constructor",
								"performance-noexcept-swap",
								"performance-trivially-destructible",
								"performance-type-promotion-in-math-fn",
								"performance-unnecessary-*",
								"performance-unnecessary-copy-initialization",
								"performance-unnecessary-value-param",
								"portability-*",
								"portability-restrict-system-includes",
								"portability-simd-intrinsics",
								"portability-std-allocator-const",
								"readability-*",
								"readability-avoid-*",
								"readability-avoid-const-params-in-decls",
								"readability-avoid-nested-conditional-operator",
								"readability-avoid-return-with-void-value",
								"readability-avoid-unconditional-preprocessor-if",
								"readability-braces-around-statements",
								"readability-const-return-type",
								"readability-container-*",
								"readability-container-contains",
								"readability-container-data-pointer",
								"readability-container-size-empty",
								"readability-convert-member-functions-to-static",
								"readability-delete-null-pointer",
								"readability-duplicate-include",
								"readability-else-after-return",
								"readability-enum-initial-value",
								"readability-function-*",
								"readability-function-cognitive-complexity",
								"readability-function-size",
								"readability-identifier-*",
								"readability-identifier-length",
								"readability-identifier-naming",
								"readability-implicit-bool-conversion",
								"readability-inconsistent-declaration-parameter-name",
								"readability-isolate-declaration",
								"readability-magic-numbers",
								"readability-make-member-function-const",
								"readability-math-missing-parentheses",
								"readability-misleading-indentation",
								"readability-misplaced-array-index",
								"readability-named-parameter",
								"readability-non-const-parameter",
								"readability-operators-representation",
								"readability-qualified-auto",
								"readability-redundant-*",
								"readability-redundant-access-specifiers",
								"readability-redundant-casting",
								"readability-redundant-control-flow",
								"readability-redundant-declaration",
								"readability-redundant-function-ptr-dereference",
								"readability-redundant-inline-specifier",
								"readability-redundant-member-init",
								"readability-redundant-preprocessor",
								"readability-redundant-smartptr-get",
								"readability-redundant-string-*",
								"readability-redundant-string-cstr",
								"readability-redundant-string-init",
								"readability-reference-to-constructed-temporary",
								"readability-simplify-*",
								"readability-simplify-boolean-expr",
								"readability-simplify-subscript-expr",
								"readability-static-*",
								"readability-static-accessed-through-instance",
								"readability-static-definition-in-anonymous-namespace",
								"readability-string-compare",
								"readability-suspicious-call-argument",
								"readability-uniqueptr-delete-release",
								"readability-uppercase-literal-suffix",
								"readability-use-*",
								"readability-use-anyofallof",
								"readability-use-std-min-max",
								"zircon-temporary-objects"
							],
							"type": "string"
						},
						"markdownDescription": "%c_cpp.configuration.codeAnalysis.clangTidy.checks.disabled.markdownDescription%",
						"scope": "resource",
						"type": "array",
						"uniqueItems": true
					},
					"C_Cpp.codeAnalysis.clangTidy.checks.enabled": {
						"items": {
							"enum": [
								"*",
								"abseil-*",
								"abseil-cleanup-ctad",
								"abseil-duration-*",
								"abseil-duration-addition",
								"abseil-duration-comparison",
								"abseil-duration-conversion-cast",
								"abseil-duration-division",
								"abseil-duration-factory-*",
								"abseil-duration-factory-float",
								"abseil-duration-factory-scale",
								"abseil-duration-subtraction",
								"abseil-duration-unnecessary-conversion",
								"abseil-faster-strsplit-delimiter",
								"abseil-no-*",
								"abseil-no-internal-dependencies",
								"abseil-no-namespace",
								"abseil-redundant-strcat-calls",
								"abseil-str-cat-append",
								"abseil-string-find-*",
								"abseil-string-find-startswith",
								"abseil-string-find-str-contains",
								"abseil-time-*",
								"abseil-time-comparison",
								"abseil-time-subtraction",
								"abseil-upgrade-duration-conversions",
								"altera-*",
								"altera-id-dependent-backward-branch",
								"altera-kernel-name-restriction",
								"altera-single-work-item-barrier",
								"altera-struct-pack-align",
								"altera-unroll-loops",
								"android-*",
								"android-cloexec-*",
								"android-cloexec-accept",
								"android-cloexec-accept4",
								"android-cloexec-creat",
								"android-cloexec-dup",
								"android-cloexec-epoll-*",
								"android-cloexec-epoll-create",
								"android-cloexec-epoll-create1",
								"android-cloexec-fopen",
								"android-cloexec-inotify-*",
								"android-cloexec-inotify-init",
								"android-cloexec-inotify-init1",
								"android-cloexec-memfd-create",
								"android-cloexec-open",
								"android-cloexec-pipe",
								"android-cloexec-pipe2",
								"android-cloexec-socket",
								"android-comparison-in-temp-failure-retry",
								"boost-use-*",
								"boost-use-ranges",
								"boost-use-to-string",
								"bugprone-*",
								"bugprone-argument-comment",
								"bugprone-assert-side-effect",
								"bugprone-assignment-in-if-condition",
								"bugprone-bad-signal-to-kill-thread",
								"bugprone-bool-pointer-implicit-conversion",
								"bugprone-branch-clone",
								"bugprone-casting-through-void",
								"bugprone-chained-comparison",
								"bugprone-compare-pointer-to-member-virtual-function",
								"bugprone-copy-constructor-init",
								"bugprone-crtp-constructor-accessibility",
								"bugprone-dangling-handle",
								"bugprone-dynamic-static-initializers",
								"bugprone-easily-swappable-parameters",
								"bugprone-empty-catch",
								"bugprone-exception-escape",
								"bugprone-fold-init-type",
								"bugprone-forward-declaration-namespace",
								"bugprone-forwarding-reference-overload",
								"bugprone-implicit-widening-of-multiplication-result",
								"bugprone-inaccurate-erase",
								"bugprone-inc-dec-in-conditions",
								"bugprone-incorrect-*",
								"bugprone-incorrect-enable-if",
								"bugprone-incorrect-roundings",
								"bugprone-infinite-loop",
								"bugprone-integer-division",
								"bugprone-lambda-function-name",
								"bugprone-macro-parentheses",
								"bugprone-macro-repeated-side-effects",
								"bugprone-misplaced-*",
								"bugprone-misplaced-operator-in-strlen-in-alloc",
								"bugprone-misplaced-pointer-arithmetic-in-alloc",
								"bugprone-misplaced-widening-cast",
								"bugprone-move-forwarding-reference",
								"bugprone-multi-level-implicit-pointer-conversion",
								"bugprone-multiple-*",
								"bugprone-multiple-new-in-one-expression",
								"bugprone-multiple-statement-macro",
								"bugprone-narrowing-conversions",
								"bugprone-no-escape",
								"bugprone-non-zero-enum-to-bool-conversion",
								"bugprone-not-null-terminated-result",
								"bugprone-optional-value-conversion",
								"bugprone-parent-virtual-call",
								"bugprone-pointer-arithmetic-on-polymorphic-object",
								"bugprone-posix-return",
								"bugprone-redundant-branch-condition",
								"bugprone-reserved-identifier",
								"bugprone-return-const-ref-from-parameter",
								"bugprone-shared-ptr-array-mismatch",
								"bugprone-signal-handler",
								"bugprone-signed-char-misuse",
								"bugprone-sizeof-*",
								"bugprone-sizeof-container",
								"bugprone-sizeof-expression",
								"bugprone-spuriously-wake-up-functions",
								"bugprone-standalone-empty",
								"bugprone-string-*",
								"bugprone-string-constructor",
								"bugprone-string-integer-assignment",
								"bugprone-string-literal-with-embedded-nul",
								"bugprone-stringview-nullptr",
								"bugprone-suspicious-*",
								"bugprone-suspicious-enum-usage",
								"bugprone-suspicious-include",
								"bugprone-suspicious-memory-comparison",
								"bugprone-suspicious-memset-usage",
								"bugprone-suspicious-missing-comma",
								"bugprone-suspicious-realloc-usage",
								"bugprone-suspicious-semicolon",
								"bugprone-suspicious-string-compare",
								"bugprone-suspicious-stringview-data-usage",
								"bugprone-swapped-arguments",
								"bugprone-switch-missing-default-case",
								"bugprone-terminating-continue",
								"bugprone-throw-keyword-missing",
								"bugprone-too-small-loop-variable",
								"bugprone-unchecked-optional-access",
								"bugprone-undefined-memory-manipulation",
								"bugprone-undelegated-constructor",
								"bugprone-unhandled-*",
								"bugprone-unhandled-exception-at-new",
								"bugprone-unhandled-self-assignment",
								"bugprone-unique-ptr-array-mismatch",
								"bugprone-unsafe-functions",
								"bugprone-unused-*",
								"bugprone-unused-local-non-trivial-variable",
								"bugprone-unused-raii",
								"bugprone-unused-return-value",
								"bugprone-use-after-move",
								"bugprone-virtual-near-miss",
								"cert-*",
								"cert-con*",
								"cert-con36-c",
								"cert-con54-cpp",
								"cert-ctr56-cpp",
								"cert-dcl*",
								"cert-dcl03-c",
								"cert-dcl16-c",
								"cert-dcl37-c",
								"cert-dcl50-cpp",
								"cert-dcl51-cpp",
								"cert-dcl54-cpp",
								"cert-dcl58-cpp",
								"cert-dcl59-cpp",
								"cert-env33-c",
								"cert-err*",
								"cert-err09-cpp",
								"cert-err33-c",
								"cert-err34-c",
								"cert-err52-cpp",
								"cert-err58-cpp",
								"cert-err60-cpp",
								"cert-err61-cpp",
								"cert-exp42-c",
								"cert-fio38-c",
								"cert-flp*",
								"cert-flp30-c",
								"cert-flp37-c",
								"cert-int09-c",
								"cert-mem57-cpp",
								"cert-msc*",
								"cert-msc30-c",
								"cert-msc32-c",
								"cert-msc33-c",
								"cert-msc50-cpp",
								"cert-msc51-cpp",
								"cert-msc54-cpp",
								"cert-oop*",
								"cert-oop11-cpp",
								"cert-oop54-cpp",
								"cert-oop57-cpp",
								"cert-oop58-cpp",
								"cert-pos*",
								"cert-pos44-c",
								"cert-pos47-c",
								"cert-sig30-c",
								"cert-str34-c",
								"clang-analyzer-*",
								"clang-analyzer-core.*",
								"clang-analyzer-core.BitwiseShift",
								"clang-analyzer-core.CallAndMessage",
								"clang-analyzer-core.DivideZero",
								"clang-analyzer-core.DynamicTypePropagation",
								"clang-analyzer-core.NonNullParamChecker",
								"clang-analyzer-core.NullDereference",
								"clang-analyzer-core.StackAddressEscape",
								"clang-analyzer-core.UndefinedBinaryOperatorResult",
								"clang-analyzer-core.uninitialized.*",
								"clang-analyzer-core.uninitialized.ArraySubscript",
								"clang-analyzer-core.uninitialized.Assign",
								"clang-analyzer-core.uninitialized.Branch",
								"clang-analyzer-core.uninitialized.CapturedBlockVariable",
								"clang-analyzer-core.uninitialized.NewArraySize",
								"clang-analyzer-core.uninitialized.UndefReturn",
								"clang-analyzer-core.VLASize",
								"clang-analyzer-cplusplus.*",
								"clang-analyzer-cplusplus.ArrayDelete",
								"clang-analyzer-cplusplus.InnerPointer",
								"clang-analyzer-cplusplus.Move",
								"clang-analyzer-cplusplus.NewDelete",
								"clang-analyzer-cplusplus.NewDeleteLeaks",
								"clang-analyzer-cplusplus.PlacementNew",
								"clang-analyzer-cplusplus.PureVirtualCall",
								"clang-analyzer-cplusplus.StringChecker",
								"clang-analyzer-deadcode.DeadStores",
								"clang-analyzer-fuchsia.HandleChecker",
								"clang-analyzer-nullablity.*",
								"clang-analyzer-nullability.NullableDereferenced",
								"clang-analyzer-nullability.NullablePassedToNonnull",
								"clang-analyzer-nullability.NullableReturnedFromNonnull",
								"clang-analyzer-nullability.NullPassedToNonnull",
								"clang-analyzer-nullability.NullReturnedFromNonnull",
								"clang-analyzer-optin.*",
								"clang-analyzer-optin.core.EnumCastOutOfRange",
								"clang-analyzer-optin.cplusplus.*",
								"clang-analyzer-optin.cplusplus.UninitializedObject",
								"clang-analyzer-optin.cplusplus.VirtualCall",
								"clang-analyzer-optin.mpi.MPI-Checker",
								"clang-analyzer-optin.osx.*",
								"clang-analyzer-optin.osx.cocoa.localizability.*",
								"clang-analyzer-optin.osx.cocoa.localizability.EmptyLocalizationContextChecker",
								"clang-analyzer-optin.osx.cocoa.localizability.NonLocalizedStringChecker",
								"clang-analyzer-optin.osx.OSObjectCStyleCast",
								"clang-analyzer-optin.performance.*",
								"clang-analyzer-optin.performance.GCDAntipattern",
								"clang-analyzer-optin.performance.Padding",
								"clang-analyzer-optin.portability.UnixAPI",
								"clang-analyzer-optin.taint.TaintedAlloc",
								"clang-analyzer-osx.*",
								"clang-analyzer-osx.API",
								"clang-analyzer-osx.cocoa.*",
								"clang-analyzer-osx.cocoa.AtSync",
								"clang-analyzer-osx.cocoa.AutoreleaseWrite",
								"clang-analyzer-osx.cocoa.ClassRelease",
								"clang-analyzer-osx.cocoa.Dealloc",
								"clang-analyzer-osx.cocoa.IncompatibleMethodTypes",
								"clang-analyzer-osx.cocoa.Loops",
								"clang-analyzer-osx.cocoa.MissingSuperCall",
								"clang-analyzer-osx.cocoa.NilArg",
								"clang-analyzer-osx.cocoa.NonNilReturnValue",
								"clang-analyzer-osx.cocoa.NSAutoreleasePool",
								"clang-analyzer-osx.cocoa.NSError",
								"clang-analyzer-osx.cocoa.ObjCGenerics",
								"clang-analyzer-osx.cocoa.RetainCount",
								"clang-analyzer-osx.cocoa.RetainCountBase",
								"clang-analyzer-osx.cocoa.RunLoopAutoreleaseLeak",
								"clang-analyzer-osx.cocoa.SelfInit",
								"clang-analyzer-osx.cocoa.SuperDealloc",
								"clang-analyzer-osx.cocoa.UnusedIvars",
								"clang-analyzer-osx.cocoa.VariadicMethodTypes",
								"clang-analyzer-osx.coreFoundation.*",
								"clang-analyzer-osx.coreFoundation.CFError",
								"clang-analyzer-osx.coreFoundation.CFNumber",
								"clang-analyzer-osx.coreFoundation.CFRetainRelease",
								"clang-analyzer-osx.coreFoundation.containers.*",
								"clang-analyzer-osx.coreFoundation.containers.OutOfBounds",
								"clang-analyzer-osx.coreFoundation.containers.PointerSizedValues",
								"clang-analyzer-osx.MIG",
								"clang-analyzer-osx.NumberObjectConversion",
								"clang-analyzer-osx.ObjCProperty",
								"clang-analyzer-osx.OSObjectRetainCount",
								"clang-analyzer-osx.SecKeychainAPI",
								"clang-analyzer-security.*",
								"clang-analyzer-security.cert.env.InvalidPtr",
								"clang-analyzer-security.FloatLoopCounter",
								"clang-analyzer-security.insecureAPI.*",
								"clang-analyzer-security.insecureAPI.bcmp",
								"clang-analyzer-security.insecureAPI.bcopy",
								"clang-analyzer-security.insecureAPI.bzero",
								"clang-analyzer-security.insecureAPI.decodeValueOfObjCType",
								"clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling",
								"clang-analyzer-security.insecureAPI.getpw",
								"clang-analyzer-security.insecureAPI.gets",
								"clang-analyzer-security.insecureAPI.mkstemp",
								"clang-analyzer-security.insecureAPI.mktemp",
								"clang-analyzer-security.insecureAPI.rand",
								"clang-analyzer-security.insecureAPI.strcpy",
								"clang-analyzer-security.insecureAPI.UncheckedReturn",
								"clang-analyzer-security.insecureAPI.vfork",
								"clang-analyzer-security.PutenvStackArray",
								"clang-analyzer-security.SetgidSetuidOrder",
								"clang-analyzer-unix.*",
								"clang-analyzer-unix.API",
								"clang-analyzer-unix.BlockInCriticalSection",
								"clang-analyzer-unix.cstring.*",
								"clang-analyzer-unix.cstring.BadSizeArg",
								"clang-analyzer-unix.cstring.NullArg",
								"clang-analyzer-unix.Errno",
								"clang-analyzer-unix.Malloc",
								"clang-analyzer-unix.MallocSizeof",
								"clang-analyzer-unix.MismatchedDeallocator",
								"clang-analyzer-unix.StdCLibraryFunctions",
								"clang-analyzer-unix.Stream",
								"clang-analyzer-unix.Vfork",
								"clang-analyzer-valist.*",
								"clang-analyzer-valist.CopyToSelf",
								"clang-analyzer-valist.Uninitialized",
								"clang-analyzer-valist.Unterminated",
								"clang-analyzer-webkit.NoUncountedMemberChecker",
								"clang-analyzer-webkit.RefCntblBaseVirtualDtor",
								"clang-analyzer-webkit.UncountedLambdaCapturesChecker",
								"concurrency-*",
								"concurrency-mt-unsafe",
								"concurrency-thread-canceltype-asynchronous",
								"cppcoreguidelines-*",
								"cppcoreguidelines-avoid-*",
								"cppcoreguidelines-avoid-c-arrays",
								"cppcoreguidelines-avoid-capturing-lambda-coroutines",
								"cppcoreguidelines-avoid-const-or-ref-data-members",
								"cppcoreguidelines-avoid-do-while",
								"cppcoreguidelines-avoid-goto",
								"cppcoreguidelines-avoid-magic-numbers",
								"cppcoreguidelines-avoid-non-const-global-variables",
								"cppcoreguidelines-avoid-reference-coroutine-parameters",
								"cppcoreguidelines-c-copy-assignment-signature",
								"cppcoreguidelines-explicit-virtual-functions",
								"cppcoreguidelines-init-variables",
								"cppcoreguidelines-interfaces-global-init",
								"cppcoreguidelines-macro-to-enum",
								"cppcoreguidelines-macro-usage",
								"cppcoreguidelines-misleading-capture-default-by-value",
								"cppcoreguidelines-missing-std-forward",
								"cppcoreguidelines-narrowing-conversions",
								"cppcoreguidelines-no-*",
								"cppcoreguidelines-no-malloc",
								"cppcoreguidelines-no-suspend-with-lock",
								"cppcoreguidelines-noexcept-*",
								"cppcoreguidelines-noexcept-destructor",
								"cppcoreguidelines-noexcept-move-operations",
								"cppcoreguidelines-noexcept-swap",
								"cppcoreguidelines-non-private-member-variables-in-classes",
								"cppcoreguidelines-owning-memory",
								"cppcoreguidelines-prefer-member-initializer",
								"cppcoreguidelines-pro-bounds-*",
								"cppcoreguidelines-pro-bounds-array-to-pointer-decay",
								"cppcoreguidelines-pro-bounds-constant-array-index",
								"cppcoreguidelines-pro-bounds-pointer-arithmetic",
								"cppcoreguidelines-pro-type-*",
								"cppcoreguidelines-pro-type-const-cast",
								"cppcoreguidelines-pro-type-cstyle-cast",
								"cppcoreguidelines-pro-type-member-init",
								"cppcoreguidelines-pro-type-reinterpret-cast",
								"cppcoreguidelines-pro-type-static-cast-downcast",
								"cppcoreguidelines-pro-type-union-access",
								"cppcoreguidelines-pro-type-vararg",
								"cppcoreguidelines-rvalue-reference-param-not-moved",
								"cppcoreguidelines-slicing",
								"cppcoreguidelines-special-member-functions",
								"cppcoreguidelines-use-default-member-init",
								"cppcoreguidelines-virtual-class-destructor",
								"darwin-*",
								"darwin-avoid-spinlock",
								"darwin-dispatch-once-nonstatic",
								"fuchsia-*",
								"fuchsia-default-*",
								"fuchsia-default-arguments-calls",
								"fuchsia-default-arguments-declarations",
								"fuchsia-header-anon-namespaces",
								"fuchsia-multiple-inheritance",
								"fuchsia-overloaded-operator",
								"fuchsia-statically-constructed-objects",
								"fuchsia-trailing-return",
								"fuchsia-virtual-inheritance",
								"google-*",
								"google-build-*",
								"google-build-explicit-make-pair",
								"google-build-namespaces",
								"google-build-using-namespace",
								"google-default-arguments",
								"google-explicit-constructor",
								"google-global-names-in-headers",
								"google-objc-*",
								"google-objc-avoid-*",
								"google-objc-avoid-nsobject-new",
								"google-objc-avoid-throwing-exception",
								"google-objc-function-naming",
								"google-objc-global-variable-declaration",
								"google-readability-*",
								"google-readability-avoid-underscore-in-googletest-name",
								"google-readability-braces-around-statements",
								"google-readability-casting",
								"google-readability-function-size",
								"google-readability-namespace-comments",
								"google-readability-todo",
								"google-runtime-*",
								"google-runtime-int",
								"google-runtime-operator",
								"google-upgrade-googletest-case",
								"hicpp-*",
								"hicpp-avoid-*",
								"hicpp-avoid-c-arrays",
								"hicpp-avoid-goto",
								"hicpp-braces-around-statements",
								"hicpp-deprecated-headers",
								"hicpp-exception-baseclass",
								"hicpp-explicit-conversions",
								"hicpp-function-size",
								"hicpp-ignored-remove-result",
								"hicpp-invalid-access-moved",
								"hicpp-member-init",
								"hicpp-move-const-arg",
								"hicpp-multiway-paths-covered",
								"hicpp-named-parameter",
								"hicpp-new-delete-operators",
								"hicpp-no-*",
								"hicpp-no-array-decay",
								"hicpp-no-assembler",
								"hicpp-no-malloc",
								"hicpp-noexcept-move",
								"hicpp-signed-bitwise",
								"hicpp-special-member-functions",
								"hicpp-static-assert",
								"hicpp-undelegated-constructor",
								"hicpp-uppercase-literal-suffix",
								"hicpp-use-*",
								"hicpp-use-auto",
								"hicpp-use-emplace",
								"hicpp-use-equals-*",
								"hicpp-use-equals-default",
								"hicpp-use-equals-delete",
								"hicpp-use-noexcept",
								"hicpp-use-nullptr",
								"hicpp-use-override",
								"hicpp-vararg",
								"linuxkernel-must-check-errs",
								"llvm-*",
								"llvm-else-after-return",
								"llvm-header-guard",
								"llvm-include-order",
								"llvm-namespace-comment",
								"llvm-prefer-*",
								"llvm-prefer-isa-or-dyn-cast-in-conditionals",
								"llvm-prefer-register-over-unsigned",
								"llvm-qualified-auto",
								"llvm-twine-local",
								"llvmlibc-*",
								"llvmlibc-callee-namespace",
								"llvmlibc-implementation-in-namespace",
								"llvmlibc-inline-function-decl",
								"llvmlibc-restrict-system-libc-headers",
								"misc-*",
								"misc-confusable-identifiers",
								"misc-const-correctness",
								"misc-coroutine-hostile-raii",
								"misc-definitions-in-headers",
								"misc-header-include-cycle",
								"misc-include-cleaner",
								"misc-misleading-*",
								"misc-misleading-bidirectional",
								"misc-misleading-identifier",
								"misc-misplaced-const",
								"misc-new-delete-overloads",
								"misc-no-recursion",
								"misc-non-*",
								"misc-non-copyable-objects",
								"misc-non-private-member-variables-in-classes",
								"misc-redundant-expression",
								"misc-static-assert",
								"misc-throw-by-value-catch-by-reference",
								"misc-unconventional-assign-operator",
								"misc-uniqueptr-reset-release",
								"misc-unused-*",
								"misc-unused-alias-decls",
								"misc-unused-parameters",
								"misc-unused-using-decls",
								"misc-use-*",
								"misc-use-anonymous-namespace",
								"misc-use-internal-linkage",
								"modernize-*",
								"modernize-avoid-*",
								"modernize-avoid-bind",
								"modernize-avoid-c-arrays",
								"modernize-concat-nested-namespaces",
								"modernize-deprecated-*",
								"modernize-deprecated-headers",
								"modernize-deprecated-ios-base-aliases",
								"modernize-loop-convert",
								"modernize-macro-to-enum",
								"modernize-make-*",
								"modernize-make-shared",
								"modernize-make-unique",
								"modernize-min-max-use-initializer-list",
								"modernize-pass-by-value",
								"modernize-raw-string-literal",
								"modernize-redundant-void-arg",
								"modernize-replace-*",
								"modernize-replace-auto-ptr",
								"modernize-replace-disallow-copy-and-assign-macro",
								"modernize-replace-random-shuffle",
								"modernize-return-braced-init-list",
								"modernize-shrink-to-fit",
								"modernize-type-traits",
								"modernize-unary-static-assert",
								"modernize-use-*",
								"modernize-use-auto",
								"modernize-use-bool-literals",
								"modernize-use-default",
								"modernize-use-constraints",
								"modernize-use-default-member-init",
								"modernize-use-designated-initializers",
								"modernize-use-emplace",
								"modernize-use-equals-*",
								"modernize-use-equals-default",
								"modernize-use-equals-delete",
								"modernize-use-nodiscard",
								"modernize-use-noexcept",
								"modernize-use-nullptr",
								"modernize-use-override",
								"modernize-use-ranges",
								"modernize-use-starts-ends-with",
								"modernize-use-std-*",
								"modernize-use-std-format",
								"modernize-use-std-numbers",
								"modernize-use-std-print",
								"modernize-use-trailing-return-type",
								"modernize-use-transparent-functors",
								"modernize-use-uncaught-exceptions",
								"modernize-use-using",
								"mpi-*",
								"mpi-buffer-deref",
								"mpi-type-mismatch",
								"objc-*",
								"objc-assert-equals",
								"objc-avoid-nserror-init",
								"objc-dealloc-in-category",
								"objc-forbidden-subclassing",
								"objc-missing-hash",
								"objc-nsdate-formatter",
								"objc-nsinvocation-argument-lifetime",
								"objc-property-declaration",
								"objc-super-self",
								"openmp-*",
								"openmp-exception-escape",
								"openmp-use-default-none",
								"performance-*",
								"performance-avoid-endl",
								"performance-enum-size",
								"performance-faster-string-find",
								"performance-for-range-copy",
								"performance-implicit-conversion-in-loop",
								"performance-inefficient-*",
								"performance-inefficient-algorithm",
								"performance-inefficient-string-concatenation",
								"performance-inefficient-vector-operation",
								"performance-move-*",
								"performance-move-const-arg",
								"performance-move-constructor-init",
								"performance-no-*",
								"performance-no-automatic-move",
								"performance-no-int-to-ptr",
								"performance-noexcept-*",
								"performance-noexcept-destructor",
								"performance-noexcept-move-constructor",
								"performance-noexcept-swap",
								"performance-trivially-destructible",
								"performance-type-promotion-in-math-fn",
								"performance-unnecessary-*",
								"performance-unnecessary-copy-initialization",
								"performance-unnecessary-value-param",
								"portability-*",
								"portability-restrict-system-includes",
								"portability-simd-intrinsics",
								"portability-std-allocator-const",
								"readability-*",
								"readability-avoid-*",
								"readability-avoid-const-params-in-decls",
								"readability-avoid-nested-conditional-operator",
								"readability-avoid-return-with-void-value",
								"readability-avoid-unconditional-preprocessor-if",
								"readability-braces-around-statements",
								"readability-const-return-type",
								"readability-container-*",
								"readability-container-contains",
								"readability-container-data-pointer",
								"readability-container-size-empty",
								"readability-convert-member-functions-to-static",
								"readability-delete-null-pointer",
								"readability-duplicate-include",
								"readability-else-after-return",
								"readability-enum-initial-value",
								"readability-function-*",
								"readability-function-cognitive-complexity",
								"readability-function-size",
								"readability-identifier-*",
								"readability-identifier-length",
								"readability-identifier-naming",
								"readability-implicit-bool-conversion",
								"readability-inconsistent-declaration-parameter-name",
								"readability-isolate-declaration",
								"readability-magic-numbers",
								"readability-make-member-function-const",
								"readability-math-missing-parentheses",
								"readability-misleading-indentation",
								"readability-misplaced-array-index",
								"readability-named-parameter",
								"readability-non-const-parameter",
								"readability-operators-representation",
								"readability-qualified-auto",
								"readability-redundant-*",
								"readability-redundant-access-specifiers",
								"readability-redundant-casting",
								"readability-redundant-control-flow",
								"readability-redundant-declaration",
								"readability-redundant-function-ptr-dereference",
								"readability-redundant-inline-specifier",
								"readability-redundant-member-init",
								"readability-redundant-preprocessor",
								"readability-redundant-smartptr-get",
								"readability-redundant-string-*",
								"readability-redundant-string-cstr",
								"readability-redundant-string-init",
								"readability-reference-to-constructed-temporary",
								"readability-simplify-*",
								"readability-simplify-boolean-expr",
								"readability-simplify-subscript-expr",
								"readability-static-*",
								"readability-static-accessed-through-instance",
								"readability-static-definition-in-anonymous-namespace",
								"readability-string-compare",
								"readability-suspicious-call-argument",
								"readability-uniqueptr-delete-release",
								"readability-uppercase-literal-suffix",
								"readability-use-*",
								"readability-use-anyofallof",
								"readability-use-std-min-max",
								"zircon-temporary-objects"
							],
							"type": "string"
						},
						"markdownDescription": "%c_cpp.configuration.codeAnalysis.clangTidy.checks.enabled.markdownDescription%",
						"scope": "resource",
						"type": "array",
						"uniqueItems": true
					},
					"C_Cpp.codeAnalysis.clangTidy.codeAction.formatFixes": {
						"default": true,
						"markdownDescription": "%c_cpp.configuration.codeAnalysis.clangTidy.codeAction.formatFixes.markdownDescription%",
						"scope": "resource",
						"type": "boolean"
					},
					"C_Cpp.codeAnalysis.clangTidy.codeAction.showClear": {
						"default": "AllAndAllTypeAndThis",
						"description": "%c_cpp.configuration.codeAnalysis.clangTidy.codeAction.showClear.description%",
						"enum": [
							"None",
							"AllOnly",
							"AllAndAllType",
							"AllAndAllTypeAndThis"
						],
						"enumDescriptions": [
							"%c_cpp.configuration.codeAnalysis.clangTidy.codeAction.showClear.None.description%",
							"%c_cpp.configuration.codeAnalysis.clangTidy.codeAction.showClear.AllOnly.description%",
							"%c_cpp.configuration.codeAnalysis.clangTidy.codeAction.showClear.AllAndAllType.description%",
							"%c_cpp.configuration.codeAnalysis.clangTidy.codeAction.showClear.AllAndAllTypeAndThis.description%"
						],
						"scope": "application",
						"type": "string"
					},
					"C_Cpp.codeAnalysis.clangTidy.codeAction.showDisable": {
						"default": true,
						"markdownDescription": "%c_cpp.configuration.codeAnalysis.clangTidy.codeAction.showDisable.markdownDescription%",
						"scope": "application",
						"type": "boolean"
					},
					"C_Cpp.codeAnalysis.clangTidy.codeAction.showDocumentation": {
						"default": true,
						"markdownDescription": "%c_cpp.configuration.codeAnalysis.clangTidy.codeAction.showDocumentation.markdownDescription%",
						"scope": "application",
						"type": "boolean"
					},
					"C_Cpp.codeAnalysis.clangTidy.config": {
						"markdownDescription": "%c_cpp.configuration.codeAnalysis.clangTidy.config.markdownDescription%",
						"scope": "resource",
						"type": "string"
					},
					"C_Cpp.codeAnalysis.clangTidy.enabled": {
						"default": false,
						"markdownDescription": "%c_cpp.configuration.codeAnalysis.clangTidy.enabled.markdownDescription%",
						"scope": "resource",
						"type": "boolean"
					},
					"C_Cpp.codeAnalysis.clangTidy.fallbackConfig": {
						"markdownDescription": "%c_cpp.configuration.codeAnalysis.clangTidy.fallbackConfig.markdownDescription%",
						"scope": "resource",
						"type": "string"
					},
					"C_Cpp.codeAnalysis.clangTidy.headerFilter": {
						"default": null,
						"markdownDescription": "%c_cpp.configuration.codeAnalysis.clangTidy.headerFilter.markdownDescription%",
						"scope": "resource",
						"type": [
							"string",
							"null"
						]
					},
					"C_Cpp.codeAnalysis.clangTidy.path": {
						"markdownDescription": "%c_cpp.configuration.codeAnalysis.clangTidy.path.markdownDescription%",
						"scope": "machine-overridable",
						"type": "string"
					},
					"C_Cpp.codeAnalysis.clangTidy.useBuildPath": {
						"default": false,
						"markdownDescription": "%c_cpp.configuration.codeAnalysis.clangTidy.useBuildPath.markdownDescription%",
						"scope": "resource",
						"type": "boolean"
					},
					"C_Cpp.codeAnalysis.exclude": {
						"additionalProperties": {
							"anyOf": [
								{
									"markdownDescription": "%c_cpp.configuration.codeAnalysis.excludeBoolean.markdownDescription%",
									"type": "boolean"
								},
								{
									"properties": {
										"when": {
											"default": "$(basename).ext",
											"markdownDescription": "%c_cpp.configuration.codeAnalysis.excludeWhen.markdownDescription%",
											"pattern": "\\w*\\$\\(basename\\)\\w*",
											"type": "string"
										}
									},
									"type": "object"
								}
							]
						},
						"default": {},
						"markdownDescription": "%c_cpp.configuration.codeAnalysis.exclude.markdownDescription%",
						"scope": "resource",
						"type": "object"
					},
					"C_Cpp.codeAnalysis.maxConcurrentThreads": {
						"default": null,
						"markdownDescription": "%c_cpp.configuration.codeAnalysis.maxConcurrentThreads.markdownDescription%",
						"maximum": 32,
						"minimum": 1,
						"scope": "machine",
						"type": [
							"integer",
							"null"
						]
					},
					"C_Cpp.codeAnalysis.maxMemory": {
						"default": null,
						"markdownDescription": "%c_cpp.configuration.codeAnalysis.maxMemory.markdownDescription%",
						"maximum": 65536,
						"minimum": 256,
						"scope": "machine",
						"type": [
							"integer",
							"null"
						]
					},
					"C_Cpp.codeAnalysis.runAutomatically": {
						"default": true,
						"markdownDescription": "%c_cpp.configuration.codeAnalysis.runAutomatically.markdownDescription%",
						"scope": "resource",
						"type": "boolean"
					},
					"C_Cpp.codeAnalysis.updateDelay": {
						"default": 2000,
						"markdownDescription": "%c_cpp.configuration.codeAnalysis.updateDelay.markdownDescription%",
						"maximum": 6000,
						"minimum": 0,
						"scope": "application",
						"type": "number"
					}
				},
				"title": "%c_cpp.subheaders.codeAnalysis.title%"
			},
			{
				"properties": {
					"C_Cpp.debugShortcut": {
						"default": true,
						"description": "%c_cpp.configuration.debugShortcut.description%",
						"scope": "resource",
						"type": "boolean"
					},
					"C_Cpp.debugger.useBacktickCommandSubstitution": {
						"default": false,
						"markdownDescription": "%c_cpp.configuration.debugger.useBacktickCommandSubstitution.markdownDescription%",
						"scope": "window",
						"type": "boolean"
					},
					"C_Cpp.sshTargetsView": {
						"default": "default",
						"description": "%c_cpp.configuration.sshTargetsView.description%",
						"enum": [
							"enabled",
							"disabled",
							"default"
						],
						"scope": "window",
						"type": "string"
					}
				},
				"title": "%c_cpp.subheaders.debugging.title%"
			},
			{
				"properties": {
					"C_Cpp.intelliSense.maxCachedProcesses": {
						"default": null,
						"markdownDescription": "%c_cpp.configuration.intelliSense.maxCachedProcesses.markdownDescription%",
						"maximum": 128,
						"minimum": 2,
						"scope": "machine",
						"type": [
							"integer",
							"null"
						]
					},
					"C_Cpp.intelliSense.maxMemory": {
						"default": null,
						"markdownDescription": "%c_cpp.configuration.intelliSense.maxMemory.markdownDescription%",
						"maximum": 65536,
						"minimum": 256,
						"scope": "machine",
						"type": [
							"integer",
							"null"
						]
					},
					"C_Cpp.intelliSenseCachePath": {
						"markdownDescription": "%c_cpp.configuration.intelliSenseCachePath.markdownDescription%",
						"scope": "machine-overridable",
						"type": "string"
					},
					"C_Cpp.intelliSenseCacheSize": {
						"default": 5120,
						"markdownDescription": "%c_cpp.configuration.intelliSenseCacheSize.markdownDescription%",
						"minimum": 0,
						"scope": "machine-overridable",
						"type": "number"
					},
					"C_Cpp.intelliSenseMemoryLimit": {
						"default": 4096,
						"markdownDescription": "%c_cpp.configuration.intelliSenseMemoryLimit.markdownDescription%",
						"maximum": 16384,
						"minimum": 256,
						"scope": "machine-overridable",
						"type": "number"
					},
					"C_Cpp.maxCachedProcesses": {
						"default": null,
						"markdownDescription": "%c_cpp.configuration.maxCachedProcesses.markdownDescription%",
						"maximum": 256,
						"minimum": 0,
						"scope": "machine",
						"type": [
							"integer",
							"null"
						]
					},
					"C_Cpp.maxConcurrentThreads": {
						"default": null,
						"markdownDescription": "%c_cpp.configuration.maxConcurrentThreads.markdownDescription%",
						"maximum": 32,
						"minimum": 1,
						"scope": "machine",
						"type": [
							"integer",
							"null"
						]
					},
					"C_Cpp.maxMemory": {
						"default": null,
						"markdownDescription": "%c_cpp.configuration.maxMemory.markdownDescription%",
						"maximum": 65536,
						"minimum": 256,
						"scope": "machine",
						"type": [
							"integer",
							"null"
						]
					},
					"C_Cpp.maxSymbolSearchResults": {
						"default": 5000,
						"markdownDescription": "%c_cpp.configuration.maxSymbolSearchResults.markdownDescription%",
						"maximum": 10000,
						"minimum": 500,
						"scope": "window",
						"type": "integer"
					},
					"C_Cpp.references.maxCachedProcesses": {
						"default": 0,
						"markdownDescription": "%c_cpp.configuration.references.maxCachedProcesses.markdownDescription%",
						"maximum": 32,
						"minimum": 0,
						"scope": "machine",
						"type": [
							"integer",
							"null"
						]
					},
					"C_Cpp.references.maxConcurrentThreads": {
						"default": null,
						"markdownDescription": "%c_cpp.configuration.references.maxConcurrentThreads.markdownDescription%",
						"maximum": 32,
						"minimum": 1,
						"scope": "machine",
						"type": [
							"integer",
							"null"
						]
					},
					"C_Cpp.references.maxMemory": {
						"default": null,
						"markdownDescription": "%c_cpp.configuration.references.maxMemory.markdownDescription%",
						"maximum": 65536,
						"minimum": 256,
						"scope": "machine",
						"type": [
							"integer",
							"null"
						]
					}
				},
				"title": "%c_cpp.subheaders.resourceManagement.title%"
			},
			{
				"properties": {
					"C_Cpp.addNodeAddonIncludePaths": {
						"default": false,
						"markdownDescription": "%c_cpp.configuration.addNodeAddonIncludePaths.markdownDescription%",
						"scope": "application",
						"type": "boolean"
					},
					"C_Cpp.autoAddFileAssociations": {
						"default": true,
						"markdownDescription": "%c_cpp.configuration.autoAddFileAssociations.markdownDescription%",
						"scope": "window",
						"type": "boolean"
					},
					"C_Cpp.caseSensitiveFileSupport": {
						"default": "default",
						"enum": [
							"default",
							"enabled"
						],
						"markdownDescription": "%c_cpp.configuration.caseSensitiveFileSupport.markdownDescription%",
						"scope": "window",
						"type": "string"
					},
					"C_Cpp.experimentalFeatures": {
						"default": "disabled",
						"description": "%c_cpp.configuration.experimentalFeatures.description%",
						"enum": [
							"enabled",
							"disabled"
						],
						"scope": "window",
						"type": "string"
					},
					"C_Cpp.loggingLevel": {
						"default": "Error",
						"enum": [
							"None",
							"Error",
							"Warning",
							"Information",
							"Debug"
						],
						"markdownDescription": "%c_cpp.configuration.loggingLevel.markdownDescription%",
						"scope": "window",
						"type": "string"
					},
					"C_Cpp.preferredPathSeparator": {
						"default": "Forward Slash",
						"enum": [
							"Forward Slash",
							"Backslash"
						],
						"markdownDescription": "%c_cpp.configuration.preferredPathSeparator.markdownDescription%",
						"scope": "machine-overridable",
						"type": "string"
					},
					"C_Cpp.updateChannel": {
						"default": "Default",
						"deprecationMessage": "%c_cpp.configuration.updateChannel.deprecationMessage%",
						"enum": [
							"Default",
							"Insiders"
						],
						"markdownDescription": "%c_cpp.configuration.updateChannel.markdownDescription%",
						"scope": "application",
						"type": "string"
					},
					"C_Cpp.vcpkg.enabled": {
						"default": true,
						"markdownDescription": "%c_cpp.configuration.vcpkg.enabled.markdownDescription%",
						"scope": "resource",
						"type": "boolean"
					}
				},
				"title": "%c_cpp.subheaders.miscellaneous.title%"
			}
		],
		"configurationDefaults": {
			"[c]": {
				"editor.semanticHighlighting.enabled": true,
				"editor.stickyScroll.defaultModel": "foldingProviderModel",
				"editor.suggest.insertMode": "replace",
				"editor.wordBasedSuggestions": "off"
			},
			"[cpp]": {
				"editor.semanticHighlighting.enabled": true,
				"editor.stickyScroll.defaultModel": "foldingProviderModel",
				"editor.suggest.insertMode": "replace",
				"editor.wordBasedSuggestions": "off"
			},
			"[cuda-cpp]": {
				"editor.semanticHighlighting.enabled": true,
				"editor.stickyScroll.defaultModel": "foldingProviderModel",
				"editor.suggest.insertMode": "replace",
				"editor.wordBasedSuggestions": "off"
			}
		},
		"debuggers": [
			{
				"_aiKeyComment": "Ignore 'Property aiKey is not allowed'. See https://github.com/microsoft/vscode/issues/76493",
				"aiKey": "0c6ae279ed8443289764825290e4f9e2-1a736e7c-1324-4338-be46-fc2a58ae4d14-7255",
				"configurationAttributes": {
					"attach": {
						"default": {},
						"properties": {
							"MIMode": {
								"default": "gdb",
								"description": "%c_cpp.debuggers.MIMode.description%",
								"type": "string"
							},
							"additionalSOLibSearchPath": {
								"default": "",
								"description": "%c_cpp.debuggers.additionalSOLibSearchPath.description%",
								"type": "string"
							},
							"deploySteps": {
								"default": [],
								"description": "%c_cpp.debuggers.deploySteps.description%",
								"items": {
									"anyOf": [
										{
											"allOf": [
												{
													"if": {
														"properties": {
															"type": {
																"const": "scp"
															}
														}
													},
													"then": {
														"properties": {
															"scpPath": {
																"default": "",
																"description": "%c_cpp.debuggers.deploySteps.copyFile.scpPath.description%",
																"type": "string"
															}
														}
													}
												},
												{
													"if": {
														"properties": {
															"type": {
																"const": "rsync"
															}
														}
													},
													"then": {
														"properties": {
															"rsyncPath": {
																"default": "",
																"description": "%c_cpp.debuggers.deploySteps.copyFile.rsyncPath.description%",
																"type": "string"
															}
														}
													}
												}
											],
											"default": {},
											"description": "%c_cpp.debuggers.deploySteps.copyFile.description%",
											"properties": {
												"debug": {
													"description": "%c_cpp.debuggers.deploySteps.debug%",
													"type": "boolean"
												},
												"files": {
													"anyOf": [
														{
															"type": "string"
														},
														{
															"items": {
																"type": "string"
															},
															"type": "array"
														}
													],
													"default": "",
													"description": "%c_cpp.debuggers.deploySteps.copyFile.files.description%"
												},
												"host": {
													"anyOf": [
														{
															"default": "hello@microsoft.com",
															"description": "%c_cpp.debuggers.host.description%",
															"type": "string"
														},
														{
															"default": {},
															"description": "%c_cpp.debuggers.host.description%",
															"properties": {
																"hostName": {
																	"default": "",
																	"description": "%c_cpp.debuggers.host.hostName.description%",
																	"type": "string"
																},
																"jumpHosts": {
																	"description": "%c_cpp.debuggers.host.jumpHost.description%",
																	"items": {
																		"default": {},
																		"properties": {
																			"hostName": {
																				"default": "",
																				"description": "%c_cpp.debuggers.host.hostName.description%",
																				"type": "string"
																			},
																			"port": {
																				"anyOf": [
																					{
																						"type": "number"
																					},
																					{
																						"pattern": "^\\d+$|^\\${.+}$",
																						"type": "string"
																					}
																				],
																				"default": 22,
																				"description": "%c_cpp.debuggers.host.port.description%"
																			},
																			"user": {
																				"default": "",
																				"description": "%c_cpp.debuggers.host.user.description%",
																				"type": "string"
																			}
																		},
																		"required": [
																			"hostName"
																		],
																		"type": "object"
																	},
																	"type": "array"
																},
																"localForwards": {
																	"description": "%c_cpp.debuggers.host.localForward.description%",
																	"items": {
																		"default": {},
																		"properties": {
																			"bindAddress": {
																				"default": "",
																				"description": "%c_cpp.debuggers.host.localForward.bindAddress.description%",
																				"type": "string"
																			},
																			"host": {
																				"default": "",
																				"description": "%c_cpp.debuggers.host.localForward.host.description%",
																				"type": "string"
																			},
																			"hostPort": {
																				"anyOf": [
																					{
																						"type": "number"
																					},
																					{
																						"pattern": "^\\d+$|^\\${.+}$",
																						"type": "string"
																					}
																				],
																				"description": "%c_cpp.debuggers.host.localForward.hostPort.description%"
																			},
																			"localSocket": {
																				"default": "",
																				"description": "%c_cpp.debuggers.host.localForward.localSocket.description%",
																				"type": "string"
																			},
																			"port": {
																				"anyOf": [
																					{
																						"type": "number"
																					},
																					{
																						"pattern": "^\\d+$|^\\${.+}$",
																						"type": "string"
																					}
																				],
																				"description": "%c_cpp.debuggers.host.localForward.port.description%"
																			},
																			"remoteSocket": {
																				"default": "",
																				"description": "%c_cpp.debuggers.host.localForward.remoteSocket.description%",
																				"type": "string"
																			}
																		},
																		"type": "object"
																	},
																	"type": "array"
																},
																"port": {
																	"anyOf": [
																		{
																			"type": "number"
																		},
																		{
																			"pattern": "^\\d+$|^\\${.+}$",
																			"type": "string"
																		}
																	],
																	"default": 22,
																	"description": "%c_cpp.debuggers.host.port.description%"
																},
																"user": {
																	"default": "",
																	"description": "%c_cpp.debuggers.host.user.description%",
																	"type": "string"
																}
															},
															"required": [
																"hostName"
															],
															"type": "object"
														}
													]
												},
												"recursive": {
													"default": "true",
													"description": "%c_cpp.debuggers.deploySteps.copyFile.recursive.description%",
													"type": "boolean"
												},
												"targetDir": {
													"default": "",
													"description": "%c_cpp.debuggers.deploySteps.copyFile.targetDir.description%",
													"type": "string"
												},
												"type": {
													"default": "",
													"description": "%c_cpp.debuggers.deploySteps.copyFile.description%",
													"enum": [
														"scp",
														"rsync"
													],
													"type": "string"
												}
											},
											"required": [
												"type",
												"files",
												"host",
												"targetDir"
											],
											"type": "object"
										},
										{
											"default": {},
											"description": "%c_cpp.debuggers.deploySteps.ssh.description%",
											"properties": {
												"command": {
													"default": "",
													"description": "%c_cpp.debuggers.deploySteps.ssh.command.description%",
													"type": "string"
												},
												"continueOn": {
													"default": "",
													"description": "%c_cpp.debuggers.deploySteps.continueOn.description%",
													"type": "string"
												},
												"debug": {
													"description": "%c_cpp.debuggers.deploySteps.debug%",
													"type": "boolean"
												},
												"host": {
													"anyOf": [
														{
															"default": "hello@microsoft.com",
															"description": "%c_cpp.debuggers.host.description%",
															"type": "string"
														},
														{
															"default": {},
															"description": "%c_cpp.debuggers.host.description%",
															"properties": {
																"hostName": {
																	"default": "",
																	"description": "%c_cpp.debuggers.host.hostName.description%",
																	"type": "string"
																},
																"jumpHosts": {
																	"description": "%c_cpp.debuggers.host.jumpHost.description%",
																	"items": {
																		"default": {},
																		"properties": {
																			"hostName": {
																				"default": "",
																				"description": "%c_cpp.debuggers.host.hostName.description%",
																				"type": "string"
																			},
																			"port": {
																				"anyOf": [
																					{
																						"type": "number"
																					},
																					{
																						"pattern": "^\\d+$|^\\${.+}$",
																						"type": "string"
																					}
																				],
																				"default": 22,
																				"description": "%c_cpp.debuggers.host.port.description%"
																			},
																			"user": {
																				"default": "",
																				"description": "%c_cpp.debuggers.host.user.description%",
																				"type": "string"
																			}
																		},
																		"required": [
																			"hostName"
																		],
																		"type": "object"
																	},
																	"type": "array"
																},
																"localForwards": {
																	"description": "%c_cpp.debuggers.host.localForward.description%",
																	"items": {
																		"default": {},
																		"properties": {
																			"bindAddress": {
																				"default": "",
																				"description": "%c_cpp.debuggers.host.localForward.bindAddress.description%",
																				"type": "string"
																			},
																			"host": {
																				"default": "",
																				"description": "%c_cpp.debuggers.host.localForward.host.description%",
																				"type": "string"
																			},
																			"hostPort": {
																				"anyOf": [
																					{
																						"type": "number"
																					},
																					{
																						"pattern": "^\\d+$|^\\${.+}$",
																						"type": "string"
																					}
																				],
																				"description": "%c_cpp.debuggers.host.localForward.hostPort.description%"
																			},
																			"localSocket": {
																				"default": "",
																				"description": "%c_cpp.debuggers.host.localForward.localSocket.description%",
																				"type": "string"
																			},
																			"port": {
																				"anyOf": [
																					{
																						"type": "number"
																					},
																					{
																						"pattern": "^\\d+$|^\\${.+}$",
																						"type": "string"
																					}
																				],
																				"description": "%c_cpp.debuggers.host.localForward.port.description%"
																			},
																			"remoteSocket": {
																				"default": "",
																				"description": "%c_cpp.debuggers.host.localForward.remoteSocket.description%",
																				"type": "string"
																			}
																		},
																		"type": "object"
																	},
																	"type": "array"
																},
																"port": {
																	"anyOf": [
																		{
																			"type": "number"
																		},
																		{
																			"pattern": "^\\d+$|^\\${.+}$",
																			"type": "string"
																		}
																	],
																	"default": 22,
																	"description": "%c_cpp.debuggers.host.port.description%"
																},
																"user": {
																	"default": "",
																	"description": "%c_cpp.debuggers.host.user.description%",
																	"type": "string"
																}
															},
															"required": [
																"hostName"
															],
															"type": "object"
														}
													]
												},
												"sshPath": {
													"default": "",
													"description": "%c_cpp.debuggers.deploySteps.ssh.sshPath.description%",
													"type": "string"
												},
												"type": {
													"default": "",
													"description": "%c_cpp.debuggers.deploySteps.ssh.description%",
													"enum": [
														"ssh"
													],
													"type": "string"
												}
											},
											"required": [
												"type",
												"host",
												"command"
											],
											"type": "object"
										},
										{
											"default": {},
											"description": "%c_cpp.debuggers.deploySteps.shell.description%",
											"properties": {
												"command": {
													"default": "",
													"description": "%c_cpp.debuggers.deploySteps.shell.command.description%",
													"type": "string"
												},
												"continueOn": {
													"default": "",
													"description": "%c_cpp.debuggers.deploySteps.continueOn.description%",
													"type": "string"
												},
												"debug": {
													"description": "%c_cpp.debuggers.deploySteps.debug%",
													"type": "boolean"
												},
												"type": {
													"default": "",
													"description": "%c_cpp.debuggers.deploySteps.shell.description%",
													"enum": [
														"shell"
													],
													"type": "string"
												}
											},
											"required": [
												"type",
												"command"
											],
											"type": "object"
										},
										{
											"default": {},
											"description": "%c_cpp.debuggers.vsCodeCommand.description%",
											"properties": {
												"args": {
													"description": "%c_cpp.debuggers.vsCodeCommand.args.description%",
													"items": {
														"type": "string"
													},
													"type": "array"
												},
												"command": {
													"default": "",
													"description": "%c_cpp.debuggers.vsCodeCommand.command.description%",
													"type": "string"
												},
												"type": {
													"default": "",
													"description": "%c_cpp.debuggers.vsCodeCommand.description%",
													"enum": [
														"command"
													],
													"type": "string"
												}
											},
											"required": [
												"type",
												"command"
											],
											"type": "object"
										}
									]
								},
								"type": "array"
							},
							"filterStderr": {
								"default": false,
								"description": "%c_cpp.debuggers.filterStderr.description%",
								"type": "boolean"
							},
							"filterStdout": {
								"default": true,
								"description": "%c_cpp.debuggers.filterStdout.description%",
								"type": "boolean"
							},
							"logging": {
								"default": {},
								"description": "%c_cpp.debuggers.logging.description%",
								"properties": {
									"engineLogging": {
										"anyOf": [
											{
												"default": "none",
												"description": "%c_cpp.debuggers.logging.engineLogging.description%",
												"enum": [
													"verbose",
													"warning",
													"error",
													"none"
												],
												"enumDescriptions": [
													"%c_cpp.debuggers.logging.category.verbose.description%",
													"%c_cpp.debuggers.logging.category.warning.description%",
													"%c_cpp.debuggers.logging.category.error.description%",
													"%c_cpp.debuggers.logging.category.none.description%"
												],
												"type": "string"
											},
											{
												"default": false,
												"description": "%c_cpp.debuggers.logging.engineLogging.description%",
												"type": "boolean"
											}
										]
									},
									"exceptions": {
										"default": true,
										"description": "%c_cpp.debuggers.logging.exceptions.description%",
										"type": "boolean"
									},
									"moduleLoad": {
										"default": true,
										"description": "%c_cpp.debuggers.logging.moduleLoad.description%",
										"type": "boolean"
									},
									"natvisDiagnostics": {
										"anyOf": [
											{
												"default": "none",
												"description": "%c_cpp.debuggers.logging.natvisDiagnostics.description%",
												"enum": [
													"verbose",
													"warning",
													"error",
													"none"
												],
												"enumDescriptions": [
													"%c_cpp.debuggers.logging.category.verbose.description%",
													"%c_cpp.debuggers.logging.category.warning.description%",
													"%c_cpp.debuggers.logging.category.error.description%",
													"%c_cpp.debuggers.logging.category.none.description%"
												],
												"type": "string"
											},
											{
												"default": false,
												"description": "%c_cpp.debuggers.logging.natvisDiagnostics.description%",
												"type": "boolean"
											}
										]
									},
									"programOutput": {
										"default": true,
										"description": "%c_cpp.debuggers.logging.programOutput.description%",
										"type": "boolean"
									},
									"trace": {
										"default": false,
										"description": "%c_cpp.debuggers.logging.trace.description%",
										"type": "boolean"
									},
									"traceResponse": {
										"default": false,
										"description": "%c_cpp.debuggers.logging.traceResponse.description%",
										"type": "boolean"
									}
								},
								"type": "object"
							},
							"miDebuggerArgs": {
								"default": "",
								"description": "%c_cpp.debuggers.miDebuggerArgs.description%",
								"type": "string"
							},
							"miDebuggerPath": {
								"default": "/usr/bin/gdb",
								"description": "%c_cpp.debuggers.miDebuggerPath.description%",
								"type": "string"
							},
							"miDebuggerServerAddress": {
								"default": "serveraddress:port",
								"description": "%c_cpp.debuggers.miDebuggerServerAddress.description%",
								"type": "string"
							},
							"pipeTransport": {
								"default": {
									"debuggerPath": "%c_cpp.debuggers.pipeTransport.default.debuggerPath%",
									"pipeArgs": [],
									"pipeCwd": "/usr/bin",
									"pipeProgram": "%c_cpp.debuggers.pipeTransport.default.pipeProgram%"
								},
								"description": "%c_cpp.debuggers.pipeTransport.description%",
								"properties": {
									"debuggerPath": {
										"default": "%c_cpp.debuggers.pipeTransport.default.debuggerPath%",
										"description": "%c_cpp.debuggers.pipeTransport.debuggerPath.description%",
										"type": "string"
									},
									"pipeArgs": {
										"default": [],
										"description": "%c_cpp.debuggers.pipeTransport.pipeArgs.description%",
										"items": {
											"type": "string"
										},
										"type": "array"
									},
									"pipeCwd": {
										"default": "/usr/bin",
										"description": "%c_cpp.debuggers.pipeTransport.pipeCwd.description%",
										"type": "string"
									},
									"pipeEnv": {
										"additionalProperties": {
											"type": "string"
										},
										"default": {},
										"description": "%c_cpp.debuggers.pipeTransport.pipeEnv.description%",
										"type": "object"
									},
									"pipeProgram": {
										"default": "%c_cpp.debuggers.pipeTransport.default.pipeProgram%",
										"description": "%c_cpp.debuggers.pipeTransport.pipeProgram.description%",
										"type": "string"
									},
									"quoteArgs": {
										"exceptions": {
											"default": true,
											"description": "%c_cpp.debuggers.pipeTransport.quoteArgs.description%",
											"type": "boolean"
										}
									}
								},
								"type": "object"
							},
							"processId": {
								"anyOf": [
									{
										"default": "${command:pickProcess}",
										"description": "%c_cpp.debuggers.processId.anyOf.description%",
										"type": "string"
									},
									{
										"default": 0,
										"description": "%c_cpp.debuggers.processId.anyOf.description%",
										"type": "integer"
									}
								]
							},
							"program": {
								"default": "${workspaceRoot}/a.out",
								"description": "%c_cpp.debuggers.program.description%",
								"type": "string"
							},
							"setupCommands": {
								"default": [],
								"description": "%c_cpp.debuggers.setupCommands.description%",
								"items": {
									"default": {},
									"properties": {
										"description": {
											"default": "",
											"description": "%c_cpp.debuggers.description.description%",
											"type": "string"
										},
										"ignoreFailures": {
											"default": false,
											"description": "%c_cpp.debuggers.ignoreFailures.description%",
											"type": "boolean"
										},
										"text": {
											"default": "",
											"description": "%c_cpp.debuggers.text.description%",
											"type": "string"
										}
									},
									"type": "object"
								},
								"type": "array"
							},
							"showDisplayString": {
								"default": true,
								"description": "%c_cpp.debuggers.showDisplayString.description%",
								"type": "boolean"
							},
							"sourceFileMap": {
								"anyOf": [
									{
										"default": {
											"<source-path>": "<target-path>"
										},
										"description": "%c_cpp.debuggers.sourceFileMap.description%",
										"type": "object"
									},
									{
										"default": {
											"<source-path>": {
												"editorPath": "",
												"useForBreakpoints": true
											}
										},
										"description": "%c_cpp.debuggers.sourceFileMap.sourceFileMapEntry.description%",
										"properties": {
											"<source-path>": {
												"default": {
													"editorPath": "",
													"useForBreakpoints": true
												},
												"properties": {
													"editorPath": {
														"default": "",
														"description": "%c_cpp.debuggers.sourceFileMap.sourceFileMapEntry.editorPath.description%",
														"type": "string"
													},
													"useForBreakpoints": {
														"default": true,
														"description": "%c_cpp.debuggers.sourceFileMap.sourceFileMapEntry.useForBreakpoints.description%",
														"type": "boolean"
													}
												},
												"type": "object"
											}
										},
										"type": "object"
									}
								]
							},
							"symbolLoadInfo": {
								"default": {
									"exceptionList": "",
									"loadAll": true
								},
								"description": "%c_cpp.debuggers.symbolLoadInfo.description%",
								"properties": {
									"exceptionList": {
										"default": "",
										"description": "%c_cpp.debuggers.symbolLoadInfo.exceptionList.description%",
										"type": "string"
									},
									"loadAll": {
										"default": true,
										"description": "%c_cpp.debuggers.symbolLoadInfo.loadAll.description%",
										"type": "boolean"
									}
								},
								"type": "object"
							},
							"targetArchitecture": {
								"default": "x64",
								"description": "%c_cpp.debuggers.targetArchitecture.description%",
								"type": "string"
							},
							"type": {
								"default": "cppdbg",
								"description": "%c_cpp.debuggers.cppdbg.type.description%",
								"type": "string"
							},
							"useExtendedRemote": {
								"default": false,
								"description": "%c_cpp.debuggers.useExtendedRemote.description%",
								"type": "boolean"
							},
							"variables": {
								"additionalProperties": {
									"default": "",
									"description": "%c_cpp.debuggers.variables.properties.description%",
									"type": "string"
								},
								"default": {
									"<variable-name>": "<variable-value>"
								},
								"description": "%c_cpp.debuggers.variables.description%",
								"properties": {},
								"type": "object"
							},
							"visualizerFile": {
								"default": "",
								"description": "%c_cpp.debuggers.cppdbg.visualizerFile.description%",
								"type": "string"
							}
						},
						"required": [
							"program"
						],
						"type": "object"
					},
					"launch": {
						"properties": {
							"MIMode": {
								"default": "gdb",
								"description": "%c_cpp.debuggers.MIMode.description%",
								"type": "string"
							},
							"additionalSOLibSearchPath": {
								"default": "",
								"description": "%c_cpp.debuggers.additionalSOLibSearchPath.description%",
								"type": "string"
							},
							"args": {
								"default": [],
								"description": "%c_cpp.debuggers.args.description%",
								"items": {
									"type": "string"
								},
								"type": "array"
							},
							"avoidWindowsConsoleRedirection": {
								"default": false,
								"description": "%c_cpp.debuggers.avoidWindowsConsoleRedirection.description%",
								"type": "boolean"
							},
							"coreDumpPath": {
								"default": "",
								"description": "%c_cpp.debuggers.coreDumpPath.description%",
								"type": "string"
							},
							"customLaunchSetupCommands": {
								"default": [],
								"description": "%c_cpp.debuggers.customLaunchSetupCommands.description%",
								"items": {
									"default": {},
									"properties": {
										"description": {
											"default": "",
											"description": "%c_cpp.debuggers.description.description%",
											"type": "string"
										},
										"ignoreFailures": {
											"default": false,
											"description": "%c_cpp.debuggers.ignoreFailures.description%",
											"type": "boolean"
										},
										"text": {
											"default": "",
											"description": "%c_cpp.debuggers.text.description%",
											"type": "string"
										}
									},
									"type": "object"
								},
								"type": "array"
							},
							"cwd": {
								"default": ".",
								"description": "%c_cpp.debuggers.cwd.description%",
								"type": "string"
							},
							"debugServerArgs": {
								"default": "",
								"description": "%c_cpp.debuggers.debugServerArgs.description%",
								"type": "string"
							},
							"debugServerPath": {
								"default": "",
								"description": "%c_cpp.debuggers.debugServerPath.description%",
								"type": "string"
							},
							"deploySteps": {
								"default": [],
								"description": "%c_cpp.debuggers.deploySteps.description%",
								"items": {
									"anyOf": [
										{
											"allOf": [
												{
													"if": {
														"properties": {
															"type": {
																"const": "scp"
															}
														}
													},
													"then": {
														"properties": {
															"scpPath": {
																"default": "",
																"description": "%c_cpp.debuggers.deploySteps.copyFile.scpPath.description%",
																"type": "string"
															}
														}
													}
												},
												{
													"if": {
														"properties": {
															"type": {
																"const": "rsync"
															}
														}
													},
													"then": {
														"properties": {
															"rsyncPath": {
																"default": "",
																"description": "%c_cpp.debuggers.deploySteps.copyFile.rsyncPath.description%",
																"type": "string"
															}
														}
													}
												}
											],
											"default": {},
											"description": "%c_cpp.debuggers.deploySteps.copyFile.description%",
											"properties": {
												"debug": {
													"description": "%c_cpp.debuggers.deploySteps.debug%",
													"type": "boolean"
												},
												"files": {
													"anyOf": [
														{
															"type": "string"
														},
														{
															"items": {
																"type": "string"
															},
															"type": "array"
														}
													],
													"default": "",
													"description": "%c_cpp.debuggers.deploySteps.copyFile.files.description%"
												},
												"host": {
													"anyOf": [
														{
															"default": "hello@microsoft.com",
															"description": "%c_cpp.debuggers.host.description%",
															"type": "string"
														},
														{
															"default": {},
															"description": "%c_cpp.debuggers.host.description%",
															"properties": {
																"hostName": {
																	"default": "",
																	"description": "%c_cpp.debuggers.host.hostName.description%",
																	"type": "string"
																},
																"jumpHosts": {
																	"description": "%c_cpp.debuggers.host.jumpHost.description%",
																	"items": {
																		"default": {},
																		"properties": {
																			"hostName": {
																				"default": "",
																				"description": "%c_cpp.debuggers.host.hostName.description%",
																				"type": "string"
																			},
																			"port": {
																				"anyOf": [
																					{
																						"type": "number"
																					},
																					{
																						"pattern": "^\\d+$|^\\${.+}$",
																						"type": "string"
																					}
																				],
																				"default": 22,
																				"description": "%c_cpp.debuggers.host.port.description%"
																			},
																			"user": {
																				"default": "",
																				"description": "%c_cpp.debuggers.host.user.description%",
																				"type": "string"
																			}
																		},
																		"required": [
																			"hostName"
																		],
																		"type": "object"
																	},
																	"type": "array"
																},
																"localForwards": {
																	"description": "%c_cpp.debuggers.host.localForward.description%",
																	"items": {
																		"default": {},
																		"properties": {
																			"bindAddress": {
																				"default": "",
																				"description": "%c_cpp.debuggers.host.localForward.bindAddress.description%",
																				"type": "string"
																			},
																			"host": {
																				"default": "",
																				"description": "%c_cpp.debuggers.host.localForward.host.description%",
																				"type": "string"
																			},
																			"hostPort": {
																				"anyOf": [
																					{
																						"type": "number"
																					},
																					{
																						"pattern": "^\\d+$|^\\${.+}$",
																						"type": "string"
																					}
																				],
																				"description": "%c_cpp.debuggers.host.localForward.hostPort.description%"
																			},
																			"localSocket": {
																				"default": "",
																				"description": "%c_cpp.debuggers.host.localForward.localSocket.description%",
																				"type": "string"
																			},
																			"port": {
																				"anyOf": [
																					{
																						"type": "number"
																					},
																					{
																						"pattern": "^\\d+$|^\\${.+}$",
																						"type": "string"
																					}
																				],
																				"description": "%c_cpp.debuggers.host.localForward.port.description%"
																			},
																			"remoteSocket": {
																				"default": "",
																				"description": "%c_cpp.debuggers.host.localForward.remoteSocket.description%",
																				"type": "string"
																			}
																		},
																		"type": "object"
																	},
																	"type": "array"
																},
																"port": {
																	"anyOf": [
																		{
																			"type": "number"
																		},
																		{
																			"pattern": "^\\d+$|^\\${.+}$",
																			"type": "string"
																		}
																	],
																	"default": 22,
																	"description": "%c_cpp.debuggers.host.port.description%"
																},
																"user": {
																	"default": "",
																	"description": "%c_cpp.debuggers.host.user.description%",
																	"type": "string"
																}
															},
															"required": [
																"hostName"
															],
															"type": "object"
														}
													]
												},
												"recursive": {
													"default": "true",
													"description": "%c_cpp.debuggers.deploySteps.copyFile.recursive.description%",
													"type": "boolean"
												},
												"targetDir": {
													"default": "",
													"description": "%c_cpp.debuggers.deploySteps.copyFile.targetDir.description%",
													"type": "string"
												},
												"type": {
													"default": "",
													"description": "%c_cpp.debuggers.deploySteps.copyFile.description%",
													"enum": [
														"scp",
														"rsync"
													],
													"type": "string"
												}
											},
											"required": [
												"type",
												"files",
												"host",
												"targetDir"
											],
											"type": "object"
										},
										{
											"default": {},
											"description": "%c_cpp.debuggers.deploySteps.ssh.description%",
											"properties": {
												"command": {
													"default": "",
													"description": "%c_cpp.debuggers.deploySteps.ssh.command.description%",
													"type": "string"
												},
												"continueOn": {
													"default": "",
													"description": "%c_cpp.debuggers.deploySteps.continueOn.description%",
													"type": "string"
												},
												"debug": {
													"description": "%c_cpp.debuggers.deploySteps.debug%",
													"type": "boolean"
												},
												"host": {
													"anyOf": [
														{
															"default": "hello@microsoft.com",
															"description": "%c_cpp.debuggers.host.description%",
															"type": "string"
														},
														{
															"default": {},
															"description": "%c_cpp.debuggers.host.description%",
															"properties": {
																"hostName": {
																	"default": "",
																	"description": "%c_cpp.debuggers.host.hostName.description%",
																	"type": "string"
																},
																"jumpHosts": {
																	"description": "%c_cpp.debuggers.host.jumpHost.description%",
																	"items": {
																		"default": {},
																		"properties": {
																			"hostName": {
																				"default": "",
																				"description": "%c_cpp.debuggers.host.hostName.description%",
																				"type": "string"
																			},
																			"port": {
																				"anyOf": [
																					{
																						"type": "number"
																					},
																					{
																						"pattern": "^\\d+$|^\\${.+}$",
																						"type": "string"
																					}
																				],
																				"default": 22,
																				"description": "%c_cpp.debuggers.host.port.description%"
																			},
																			"user": {
																				"default": "",
																				"description": "%c_cpp.debuggers.host.user.description%",
																				"type": "string"
																			}
																		},
																		"required": [
																			"hostName"
																		],
																		"type": "object"
																	},
																	"type": "array"
																},
																"localForwards": {
																	"description": "%c_cpp.debuggers.host.localForward.description%",
																	"items": {
																		"default": {},
																		"properties": {
																			"bindAddress": {
																				"default": "",
																				"description": "%c_cpp.debuggers.host.localForward.bindAddress.description%",
																				"type": "string"
																			},
																			"host": {
																				"default": "",
																				"description": "%c_cpp.debuggers.host.localForward.host.description%",
																				"type": "string"
																			},
																			"hostPort": {
																				"anyOf": [
																					{
																						"type": "number"
																					},
																					{
																						"pattern": "^\\d+$|^\\${.+}$",
																						"type": "string"
																					}
																				],
																				"description": "%c_cpp.debuggers.host.localForward.hostPort.description%"
																			},
																			"localSocket": {
																				"default": "",
																				"description": "%c_cpp.debuggers.host.localForward.localSocket.description%",
																				"type": "string"
																			},
																			"port": {
																				"anyOf": [
																					{
																						"type": "number"
																					},
																					{
																						"pattern": "^\\d+$|^\\${.+}$",
																						"type": "string"
																					}
																				],
																				"description": "%c_cpp.debuggers.host.localForward.port.description%"
																			},
																			"remoteSocket": {
																				"default": "",
																				"description": "%c_cpp.debuggers.host.localForward.remoteSocket.description%",
																				"type": "string"
																			}
																		},
																		"type": "object"
																	},
																	"type": "array"
																},
																"port": {
																	"anyOf": [
																		{
																			"type": "number"
																		},
																		{
																			"pattern": "^\\d+$|^\\${.+}$",
																			"type": "string"
																		}
																	],
																	"default": 22,
																	"description": "%c_cpp.debuggers.host.port.description%"
																},
																"user": {
																	"default": "",
																	"description": "%c_cpp.debuggers.host.user.description%",
																	"type": "string"
																}
															},
															"required": [
																"hostName"
															],
															"type": "object"
														}
													]
												},
												"sshPath": {
													"default": "",
													"description": "%c_cpp.debuggers.deploySteps.ssh.sshPath.description%",
													"type": "string"
												},
												"type": {
													"default": "",
													"description": "%c_cpp.debuggers.deploySteps.ssh.description%",
													"enum": [
														"ssh"
													],
													"type": "string"
												}
											},
											"required": [
												"type",
												"host",
												"command"
											],
											"type": "object"
										},
										{
											"default": {},
											"description": "%c_cpp.debuggers.deploySteps.shell.description%",
											"properties": {
												"command": {
													"default": "",
													"description": "%c_cpp.debuggers.deploySteps.shell.command.description%",
													"type": "string"
												},
												"continueOn": {
													"default": "",
													"description": "%c_cpp.debuggers.deploySteps.continueOn.description%",
													"type": "string"
												},
												"debug": {
													"description": "%c_cpp.debuggers.deploySteps.debug%",
													"type": "boolean"
												},
												"type": {
													"default": "",
													"description": "%c_cpp.debuggers.deploySteps.shell.description%",
													"enum": [
														"shell"
													],
													"type": "string"
												}
											},
											"required": [
												"type",
												"command"
											],
											"type": "object"
										},
										{
											"default": {},
											"description": "%c_cpp.debuggers.vsCodeCommand.description%",
											"properties": {
												"args": {
													"description": "%c_cpp.debuggers.vsCodeCommand.args.description%",
													"items": {
														"type": "string"
													},
													"type": "array"
												},
												"command": {
													"default": "",
													"description": "%c_cpp.debuggers.vsCodeCommand.command.description%",
													"type": "string"
												},
												"type": {
													"default": "",
													"description": "%c_cpp.debuggers.vsCodeCommand.description%",
													"enum": [
														"command"
													],
													"type": "string"
												}
											},
											"required": [
												"type",
												"command"
											],
											"type": "object"
										}
									]
								},
								"type": "array"
							},
							"envFile": {
								"default": "${workspaceFolder}/.env",
								"description": "%c_cpp.debuggers.envFile.description%",
								"type": "string"
							},
							"environment": {
								"default": [],
								"description": "%c_cpp.debuggers.environment.description%",
								"items": {
									"default": {},
									"properties": {
										"name": {
											"type": "string"
										},
										"value": {
											"type": "string"
										}
									},
									"type": "object"
								},
								"type": "array"
							},
							"externalConsole": {
								"default": false,
								"description": "%c_cpp.debuggers.cppdbg.externalConsole.description%",
								"type": "boolean"
							},
							"filterStderr": {
								"default": false,
								"description": "%c_cpp.debuggers.filterStderr.description%",
								"type": "boolean"
							},
							"filterStdout": {
								"default": true,
								"description": "%c_cpp.debuggers.filterStdout.description%",
								"type": "boolean"
							},
							"hardwareBreakpoints": {
								"default": {},
								"description": "%c_cpp.debuggers.hardwareBreakpoints.description%",
								"properties": {
									"limit": {
										"default": 0,
										"description": "%c_cpp.debuggers.hardwareBreakpoints.limit.description%",
										"type": "integer"
									},
									"require": {
										"default": false,
										"description": "%c_cpp.debuggers.hardwareBreakpoints.require.description%",
										"type": "boolean"
									}
								},
								"type": "object"
							},
							"launchCompleteCommand": {
								"default": "exec-run",
								"description": "%c_cpp.debuggers.launchCompleteCommand.description%",
								"enum": [
									"exec-run",
									"exec-continue",
									"None"
								]
							},
							"logging": {
								"default": {},
								"description": "%c_cpp.debuggers.logging.description%",
								"properties": {
									"engineLogging": {
										"anyOf": [
											{
												"default": "none",
												"description": "%c_cpp.debuggers.logging.engineLogging.description%",
												"enum": [
													"verbose",
													"warning",
													"error",
													"none"
												],
												"enumDescriptions": [
													"%c_cpp.debuggers.logging.category.verbose.description%",
													"%c_cpp.debuggers.logging.category.warning.description%",
													"%c_cpp.debuggers.logging.category.error.description%",
													"%c_cpp.debuggers.logging.category.none.description%"
												],
												"type": "string"
											},
											{
												"default": false,
												"description": "%c_cpp.debuggers.logging.engineLogging.description%",
												"type": "boolean"
											}
										]
									},
									"exceptions": {
										"default": true,
										"description": "%c_cpp.debuggers.logging.exceptions.description%",
										"type": "boolean"
									},
									"moduleLoad": {
										"default": true,
										"description": "%c_cpp.debuggers.logging.moduleLoad.description%",
										"type": "boolean"
									},
									"natvisDiagnostics": {
										"anyOf": [
											{
												"default": "none",
												"description": "%c_cpp.debuggers.logging.natvisDiagnostics.description%",
												"enum": [
													"verbose",
													"warning",
													"error",
													"none"
												],
												"enumDescriptions": [
													"%c_cpp.debuggers.logging.category.verbose.description%",
													"%c_cpp.debuggers.logging.category.warning.description%",
													"%c_cpp.debuggers.logging.category.error.description%",
													"%c_cpp.debuggers.logging.category.none.description%"
												],
												"type": "string"
											},
											{
												"default": false,
												"description": "%c_cpp.debuggers.logging.natvisDiagnostics.description%",
												"type": "boolean"
											}
										]
									},
									"programOutput": {
										"default": true,
										"description": "%c_cpp.debuggers.logging.programOutput.description%",
										"type": "boolean"
									},
									"trace": {
										"default": false,
										"description": "%c_cpp.debuggers.logging.trace.description%",
										"type": "boolean"
									},
									"traceResponse": {
										"default": false,
										"description": "%c_cpp.debuggers.logging.traceResponse.description%",
										"type": "boolean"
									}
								},
								"type": "object"
							},
							"miDebuggerArgs": {
								"default": "",
								"description": "%c_cpp.debuggers.miDebuggerArgs.description%",
								"type": "string"
							},
							"miDebuggerPath": {
								"default": "/usr/bin/gdb",
								"description": "%c_cpp.debuggers.miDebuggerPath.description%",
								"type": "string"
							},
							"miDebuggerServerAddress": {
								"default": "serveraddress:port",
								"description": "%c_cpp.debuggers.miDebuggerServerAddress.description%",
								"type": "string"
							},
							"pipeTransport": {
								"default": {
									"debuggerPath": "%c_cpp.debuggers.pipeTransport.default.debuggerPath%",
									"pipeArgs": [],
									"pipeCwd": "/usr/bin",
									"pipeProgram": "%c_cpp.debuggers.pipeTransport.default.pipeProgram%"
								},
								"description": "%c_cpp.debuggers.pipeTransport.description%",
								"properties": {
									"debuggerPath": {
										"default": "%c_cpp.debuggers.pipeTransport.default.debuggerPath%",
										"description": "%c_cpp.debuggers.pipeTransport.debuggerPath.description%",
										"type": "string"
									},
									"pipeArgs": {
										"default": [],
										"description": "%c_cpp.debuggers.pipeTransport.pipeArgs.description%",
										"items": {
											"type": "string"
										},
										"type": "array"
									},
									"pipeCwd": {
										"default": "/usr/bin",
										"description": "%c_cpp.debuggers.pipeTransport.pipeCwd.description%",
										"type": "string"
									},
									"pipeEnv": {
										"additionalProperties": {
											"type": "string"
										},
										"default": {},
										"description": "%c_cpp.debuggers.pipeTransport.pipeEnv.description%",
										"type": "object"
									},
									"pipeProgram": {
										"default": "%c_cpp.debuggers.pipeTransport.default.pipeProgram%",
										"description": "%c_cpp.debuggers.pipeTransport.pipeProgram.description%",
										"type": "string"
									},
									"quoteArgs": {
										"exceptions": {
											"default": true,
											"description": "%c_cpp.debuggers.pipeTransport.quoteArgs.description%",
											"type": "boolean"
										}
									}
								},
								"type": "object"
							},
							"postRemoteConnectCommands": {
								"default": [],
								"description": "%c_cpp.debuggers.postRemoteConnectCommands.description%",
								"items": {
									"default": {},
									"properties": {
										"description": {
											"default": "",
											"description": "%c_cpp.debuggers.description.description%",
											"type": "string"
										},
										"ignoreFailures": {
											"default": false,
											"description": "%c_cpp.debuggers.ignoreFailures.description%",
											"type": "boolean"
										},
										"text": {
											"default": "",
											"description": "%c_cpp.debuggers.text.description%",
											"type": "string"
										}
									},
									"type": "object"
								},
								"type": "array"
							},
							"program": {
								"default": "${workspaceRoot}/a.out",
								"description": "%c_cpp.debuggers.program.description%",
								"type": "string"
							},
							"serverLaunchTimeout": {
								"default": "10000",
								"description": "%c_cpp.debuggers.serverLaunchTimeout.description%",
								"type": "integer"
							},
							"serverStarted": {
								"default": "",
								"description": "%c_cpp.debuggers.serverStarted.description%",
								"type": "string"
							},
							"setupCommands": {
								"default": [],
								"description": "%c_cpp.debuggers.setupCommands.description%",
								"items": {
									"default": {},
									"properties": {
										"description": {
											"default": "",
											"description": "%c_cpp.debuggers.description.description%",
											"type": "string"
										},
										"ignoreFailures": {
											"default": false,
											"description": "%c_cpp.debuggers.ignoreFailures.description%",
											"type": "boolean"
										},
										"text": {
											"default": "",
											"description": "%c_cpp.debuggers.text.description%",
											"type": "string"
										}
									},
									"type": "object"
								},
								"type": "array"
							},
							"showDisplayString": {
								"default": true,
								"description": "%c_cpp.debuggers.showDisplayString.description%",
								"type": "boolean"
							},
							"sourceFileMap": {
								"anyOf": [
									{
										"default": {
											"<source-path>": "<target-path>"
										},
										"description": "%c_cpp.debuggers.sourceFileMap.description%",
										"type": "object"
									},
									{
										"default": {
											"<source-path>": {
												"editorPath": "",
												"useForBreakpoints": true
											}
										},
										"description": "%c_cpp.debuggers.sourceFileMap.sourceFileMapEntry.description%",
										"properties": {
											"<source-path>": {
												"default": {
													"editorPath": "",
													"useForBreakpoints": true
												},
												"properties": {
													"editorPath": {
														"default": "",
														"description": "%c_cpp.debuggers.sourceFileMap.sourceFileMapEntry.editorPath.description%",
														"type": "string"
													},
													"useForBreakpoints": {
														"default": true,
														"description": "%c_cpp.debuggers.sourceFileMap.sourceFileMapEntry.useForBreakpoints.description%",
														"type": "boolean"
													}
												},
												"type": "object"
											}
										},
										"type": "object"
									}
								]
							},
							"stopAtConnect": {
								"default": false,
								"description": "%c_cpp.debuggers.stopAtConnect.description%",
								"type": "boolean"
							},
							"stopAtEntry": {
								"default": false,
								"description": "%c_cpp.debuggers.stopAtEntry.description%",
								"type": "boolean"
							},
							"svdPath": {
								"default": "",
								"description": "%c_cpp.debuggers.cppdbg.visualizerFile.description",
								"type": "string"
							},
							"symbolLoadInfo": {
								"default": {
									"exceptionList": "",
									"loadAll": true
								},
								"description": "%c_cpp.debuggers.symbolLoadInfo.description%",
								"properties": {
									"exceptionList": {
										"default": "",
										"description": "%c_cpp.debuggers.symbolLoadInfo.exceptionList.description%",
										"type": "string"
									},
									"loadAll": {
										"default": true,
										"description": "%c_cpp.debuggers.symbolLoadInfo.loadAll.description%",
										"type": "boolean"
									}
								},
								"type": "object"
							},
							"targetArchitecture": {
								"default": "x64",
								"description": "%c_cpp.debuggers.targetArchitecture.description%",
								"type": "string"
							},
							"type": {
								"default": "cppdbg",
								"description": "%c_cpp.debuggers.cppdbg.type.description%",
								"type": "string"
							},
							"unknownBreakpointHandling": {
								"default": "throw",
								"description": "%c_cpp.debuggers.unknownBreakpointHandling.description%",
								"enum": [
									"throw",
									"stop"
								],
								"type": "string"
							},
							"useExtendedRemote": {
								"default": false,
								"description": "%c_cpp.debuggers.useExtendedRemote.description%",
								"type": "boolean"
							},
							"variables": {
								"additionalProperties": {
									"default": "",
									"description": "%c_cpp.debuggers.variables.properties.description%",
									"type": "string"
								},
								"default": {
									"<variable-name>": "<variable-value>"
								},
								"description": "%c_cpp.debuggers.variables.description%",
								"properties": {},
								"type": "object"
							},
							"visualizerFile": {
								"anyOf": [
									{
										"default": "",
										"type": "string"
									},
									{
										"default": [],
										"items": {
											"type": "string"
										},
										"type": "array"
									}
								],
								"description": "%c_cpp.debuggers.cppdbg.visualizerFile.description%"
							}
						},
						"required": [
							"program"
						],
						"type": "object"
					}
				},
				"label": "C++ (GDB/LLDB)",
				"languages": [
					"ada",
					"c",
					"cpp",
					"cuda-cpp",
					"rust"
				],
				"type": "cppdbg",
				"variables": {
					"pickProcess": "extension.pickNativeProcess",
					"pickRemoteProcess": "extension.pickRemoteNativeProcess"
				}
			},
			{
				"_aiKeyComment": "Ignore 'Property aiKey is not allowed'. See https://github.com/microsoft/vscode/issues/76493",
				"aiKey": "0c6ae279ed8443289764825290e4f9e2-1a736e7c-1324-4338-be46-fc2a58ae4d14-7255",
				"configurationAttributes": {
					"attach": {
						"default": {},
						"properties": {
							"logging": {
								"default": {},
								"description": "%c_cpp.debuggers.logging.description%",
								"properties": {
									"exceptions": {
										"default": true,
										"description": "%c_cpp.debuggers.logging.exceptions.description%",
										"type": "boolean"
									},
									"moduleLoad": {
										"default": true,
										"description": "%c_cpp.debuggers.logging.moduleLoad.description%",
										"type": "boolean"
									},
									"programOutput": {
										"default": true,
										"description": "%c_cpp.debuggers.logging.programOutput.description%",
										"type": "boolean"
									},
									"trace": {
										"default": false,
										"description": "%c_cpp.debuggers.logging.trace.description%",
										"type": "boolean"
									}
								},
								"type": "object"
							},
							"processId": {
								"anyOf": [
									{
										"default": "${command:pickProcess}",
										"description": "%c_cpp.debuggers.processId.anyOf.description%",
										"type": "string"
									},
									{
										"default": 0,
										"description": "%c_cpp.debuggers.processId.anyOf.description%",
										"type": "integer"
									}
								]
							},
							"requireExactSource": {
								"default": true,
								"description": "%c_cpp.debuggers.requireExactSource.description%",
								"type": "boolean"
							},
							"sourceFileMap": {
								"default": {
									"<source-path>": "<target-path>"
								},
								"description": "%c_cpp.debuggers.sourceFileMap.description%",
								"type": "object"
							},
							"symbolOptions": {
								"default": {
									"searchMicrosoftSymbolServer": false,
									"searchPaths": []
								},
								"description": "%c_cpp.debuggers.symbolOptions.description%",
								"properties": {
									"cachePath": {
										"default": "%TEMP%\\SymbolCache",
										"description": "%c_cpp.debuggers.VSSymbolOptions.cachePath.description%",
										"type": "string"
									},
									"moduleFilter": {
										"default": {
											"excludedModules": [],
											"mode": "loadAllButExcluded"
										},
										"description": "%c_cpp.debuggers.VSSymbolOptions.moduleFilter.description%",
										"properties": {
											"excludedModules": {
												"default": [],
												"description": "%c_cpp.debuggers.VSSymbolOptionsModuleFilter.excludedModules.description%",
												"items": {
													"type": "string"
												},
												"type": "array"
											},
											"includeSymbolsNextToModules": {
												"default": true,
												"description": "%c_cpp.debuggers.VSSymbolOptionsModuleFilter.includeSymbolsNextToModules.description%",
												"type": "boolean"
											},
											"includedModules": {
												"default": [
													"MyExampleModule.dll"
												],
												"description": "%c_cpp.debuggers.VSSymbolOptionsModuleFilter.includedModules.description%",
												"items": {
													"type": "string"
												},
												"type": "array"
											},
											"mode": {
												"default": "loadAllButExcluded",
												"description": "%c_cpp.debuggers.VSSymbolOptionsModuleFilter.mode.description%",
												"enum": [
													"loadAllButExcluded",
													"loadOnlyIncluded"
												],
												"enumDescriptions": [
													"%c_cpp.debuggers.VSSymbolOptionsModuleFilter.mode.loadAllButExcluded.enumDescriptions%",
													"%c_cpp.debuggers.VSSymbolOptionsModuleFilter.mode.loadOnlyIncluded.enumDescriptions%"
												],
												"type": "string"
											}
										},
										"required": [
											"mode"
										],
										"type": "object"
									},
									"searchMicrosoftSymbolServer": {
										"default": false,
										"description": "%c_cpp.debuggers.VSSymbolOptions.searchMicrosoftSymbolServer.description%",
										"type": "boolean"
									},
									"searchPaths": {
										"default": [],
										"description": "%c_cpp.debuggers.VSSymbolOptions.searchPaths.description%",
										"items": {
											"type": "string"
										},
										"type": "array"
									}
								},
								"type": "object"
							},
							"symbolSearchPath": {
								"default": "",
								"description": "%c_cpp.debuggers.symbolSearchPath.description%",
								"type": "string"
							},
							"type": {
								"default": "cppvsdbg",
								"description": "%c_cpp.debuggers.cppvsdbg.type.description%",
								"type": "string"
							},
							"visualizerFile": {
								"default": "",
								"description": "%c_cpp.debuggers.cppvsdbg.visualizerFile.description%",
								"type": "string"
							}
						},
						"required": [
							"processId"
						],
						"type": "object"
					},
					"launch": {
						"properties": {
							"args": {
								"default": [],
								"description": "%c_cpp.debuggers.args.description%",
								"items": {
									"type": "string"
								},
								"type": "array"
							},
							"console": {
								"default": "internalConsole",
								"description": "%c_cpp.debuggers.cppvsdbg.console.description%",
								"enum": [
									"internalConsole",
									"integratedTerminal",
									"externalTerminal",
									"newExternalWindow"
								],
								"enumDescriptions": [
									"%c_cpp.debuggers.cppvsdbg.console.internalConsole.description%",
									"%c_cpp.debuggers.cppvsdbg.console.integratedTerminal.description%",
									"%c_cpp.debuggers.cppvsdbg.console.externalTerminal.description%",
									"%c_cpp.debuggers.cppvsdbg.console.newExternalWindow.description%"
								],
								"type": "string"
							},
							"cwd": {
								"default": "${workspaceRoot}",
								"description": "%c_cpp.debuggers.cwd.description%",
								"type": "string"
							},
							"dumpPath": {
								"default": "",
								"description": "%c_cpp.debuggers.dumpPath.description%",
								"type": "string"
							},
							"enableDebugHeap": {
								"default": false,
								"description": "%c_cpp.debuggers.enableDebugHeap.description%",
								"type": "boolean"
							},
							"envFile": {
								"default": "${workspaceFolder}/.env",
								"description": "%c_cpp.debuggers.envFile.description%",
								"type": "string"
							},
							"environment": {
								"default": [],
								"description": "%c_cpp.debuggers.environment.description%",
								"items": {
									"default": {},
									"properties": {
										"name": {
											"type": "string"
										},
										"value": {
											"type": "string"
										}
									},
									"type": "object"
								},
								"type": "array"
							},
							"externalConsole": {
								"default": false,
								"description": "%c_cpp.debuggers.cppvsdbg.externalConsole.description%",
								"type": "boolean"
							},
							"logging": {
								"default": {},
								"description": "%c_cpp.debuggers.logging.description%",
								"properties": {
									"engineLogging": {
										"default": false,
										"description": "%c_cpp.debuggers.logging.engineLogging.description%",
										"type": "boolean"
									},
									"exceptions": {
										"default": true,
										"description": "%c_cpp.debuggers.logging.exceptions.description%",
										"type": "boolean"
									},
									"moduleLoad": {
										"default": true,
										"description": "%c_cpp.debuggers.logging.moduleLoad.description%",
										"type": "boolean"
									},
									"processExit": {
										"default": true,
										"description": "%c_cpp.debuggers.cppvsdbg.logging.processExit.description%",
										"type": "boolean"
									},
									"programOutput": {
										"default": true,
										"description": "%c_cpp.debuggers.logging.programOutput.description%",
										"type": "boolean"
									},
									"threadExit": {
										"default": false,
										"description": "%c_cpp.debuggers.cppvsdbg.logging.threadExit.description%",
										"type": "boolean"
									}
								},
								"type": "object"
							},
							"program": {
								"default": "${workspaceRoot}/program.exe",
								"description": "%c_cpp.debuggers.program.description%",
								"type": "string"
							},
							"requireExactSource": {
								"default": true,
								"description": "%c_cpp.debuggers.requireExactSource.description%",
								"type": "boolean"
							},
							"sourceFileMap": {
								"default": {
									"<source-path>": "<target-path>"
								},
								"description": "%c_cpp.debuggers.sourceFileMap.description%",
								"type": "object"
							},
							"stopAtEntry": {
								"default": false,
								"description": "%c_cpp.debuggers.stopAtEntry.description%",
								"type": "boolean"
							},
							"symbolOptions": {
								"default": {
									"searchMicrosoftSymbolServer": false,
									"searchPaths": []
								},
								"description": "%c_cpp.debuggers.symbolOptions.description%",
								"properties": {
									"cachePath": {
										"default": "%TEMP%\\SymbolCache",
										"description": "%c_cpp.debuggers.VSSymbolOptions.cachePath.description%",
										"type": "string"
									},
									"moduleFilter": {
										"default": {
											"excludedModules": [],
											"mode": "loadAllButExcluded"
										},
										"description": "%c_cpp.debuggers.VSSymbolOptions.moduleFilter.description%",
										"properties": {
											"excludedModules": {
												"default": [],
												"description": "%c_cpp.debuggers.VSSymbolOptionsModuleFilter.excludedModules.description%",
												"items": {
													"type": "string"
												},
												"type": "array"
											},
											"includeSymbolsNextToModules": {
												"default": true,
												"description": "%c_cpp.debuggers.VSSymbolOptionsModuleFilter.includeSymbolsNextToModules.description%",
												"type": "boolean"
											},
											"includedModules": {
												"default": [
													"MyExampleModule.dll"
												],
												"description": "%c_cpp.debuggers.VSSymbolOptionsModuleFilter.includedModules.description%",
												"items": {
													"type": "string"
												},
												"type": "array"
											},
											"mode": {
												"default": "loadAllButExcluded",
												"description": "%c_cpp.debuggers.VSSymbolOptionsModuleFilter.mode.description%",
												"enum": [
													"loadAllButExcluded",
													"loadOnlyIncluded"
												],
												"enumDescriptions": [
													"%c_cpp.debuggers.VSSymbolOptionsModuleFilter.mode.loadAllButExcluded.enumDescriptions%",
													"%c_cpp.debuggers.VSSymbolOptionsModuleFilter.mode.loadOnlyIncluded.enumDescriptions%"
												],
												"type": "string"
											}
										},
										"required": [
											"mode"
										],
										"type": "object"
									},
									"searchMicrosoftSymbolServer": {
										"default": false,
										"description": "%c_cpp.debuggers.VSSymbolOptions.searchMicrosoftSymbolServer.description%",
										"type": "boolean"
									},
									"searchPaths": {
										"default": [],
										"description": "%c_cpp.debuggers.VSSymbolOptions.searchPaths.description%",
										"items": {
											"type": "string"
										},
										"type": "array"
									}
								},
								"type": "object"
							},
							"symbolSearchPath": {
								"default": "",
								"description": "%c_cpp.debuggers.symbolSearchPath.description%",
								"type": "string"
							},
							"type": {
								"default": "cppvsdbg",
								"description": "%c_cpp.debuggers.cppvsdbg.type.description%",
								"type": "string"
							},
							"visualizerFile": {
								"default": "",
								"description": "%c_cpp.debuggers.cppvsdbg.visualizerFile.description%",
								"type": "string"
							}
						},
						"required": [
							"program",
							"cwd"
						],
						"type": "object"
					}
				},
				"label": "C++ (Windows)",
				"languages": [
					"ada",
					"c",
					"cpp",
					"cuda-cpp",
					"rust"
				],
				"type": "cppvsdbg",
				"variables": {
					"pickProcess": "extension.pickNativeProcess"
				},
				"when": "workspacePlatform == windows"
			}
		],
		"jsonValidation": [
			{
				"fileMatch": "c_cpp_properties.json",
				"url": "cpptools-schema:///c_cpp_properties.schema.json"
			}
		],
		"keybindings": [
			{
				"command": "C_Cpp.SwitchHeaderSource",
				"key": "Alt+O",
				"when": "editorLangId =~ /^(c|(cuda-)?cpp)$/ && editorTextFocus && !(config.C_Cpp.intelliSenseEngine =~ /^[dD]isabled$/)"
			},
			{
				"args": {
					"apply": "first",
					"kind": "refactor.inline.macro"
				},
				"command": "editor.action.codeAction",
				"key": "ctrl+shift+r ctrl+i",
				"when": "editorLangId =~ /^(c|(cuda-)?cpp)$/ && editorTextFocus && !(config.C_Cpp.intelliSenseEngine =~ /^[dD]isabled$/)"
			},
			{
				"args": {
					"apply": "first",
					"kind": "refactor.extract.function"
				},
				"command": "editor.action.codeAction",
				"key": "ctrl+shift+r ctrl+e",
				"when": "editorLangId =~ /^(c|(cuda-)?cpp)$/ && editorTextFocus && !(config.C_Cpp.intelliSenseEngine =~ /^[dD]isabled$/)"
			}
		],
		"languageModelTools": [
			{
				"canBeReferencedInPrompt": true,
				"displayName": "%c_cpp.languageModelTools.configuration.displayName%",
				"icon": "$(file-code)",
				"modelDescription": "For the active C or C++ file, this tool provides: the language (C, C++, or CUDA), the language standard version (such as C++11, C++14, C++17, or C++20), the compiler (such as GCC, Clang, or MSVC), the target platform (such as x86, x64, or ARM), and the target architecture (such as 32-bit or 64-bit).",
				"name": "cpptools-lmtool-configuration",
				"toolReferenceName": "cpp",
				"userDescription": "%c_cpp.languageModelTools.configuration.userDescription%",
				"when": "(config.C_Cpp.experimentalFeatures =~ /^[eE]nabled$/)"
			}
		],
		"menus": {
			"commandPalette": [
				{
					"command": "C_Cpp.ConfigurationSelect",
					"when": "!(config.C_Cpp.intelliSenseEngine =~ /^[dD]isabled$/)"
				},
				{
					"command": "C_Cpp.ConfigurationProviderSelect",
					"when": "!(config.C_Cpp.intelliSenseEngine =~ /^[dD]isabled$/)"
				},
				{
					"command": "C_Cpp.ConfigurationEditJSON",
					"when": "!(config.C_Cpp.intelliSenseEngine =~ /^[dD]isabled$/)"
				},
				{
					"command": "C_Cpp.ConfigurationEditUI",
					"when": "!(config.C_Cpp.intelliSenseEngine =~ /^[dD]isabled$/)"
				},
				{
					"command": "C_Cpp.SelectIntelliSenseConfiguration",
					"when": "!(config.C_Cpp.intelliSenseEngine =~ /^[dD]isabled$/)"
				},
				{
					"command": "C_Cpp.SwitchHeaderSource",
					"when": "editorLangId =~ /^(c|(cuda-)?cpp)$/ && !(config.C_Cpp.intelliSenseEngine =~ /^[dD]isabled$/)"
				},
				{
					"command": "C_Cpp.EnableErrorSquiggles",
					"when": "config.C_Cpp.intelliSenseEngine =~ /^[dD]efault$/"
				},
				{
					"command": "C_Cpp.DisableErrorSquiggles",
					"when": "config.C_Cpp.intelliSenseEngine =~ /^[dD]efault$/"
				},
				{
					"command": "C_Cpp.ToggleDimInactiveRegions",
					"when": "config.C_Cpp.intelliSenseEngine =~ /^[dD]efault$/"
				},
				{
					"command": "C_Cpp.ResetDatabase",
					"when": "!(config.C_Cpp.intelliSenseEngine =~ /^[dD]isabled$/)"
				},
				{
					"command": "C_Cpp.RestartIntelliSenseForFile",
					"when": "editorLangId =~ /^(c|(cuda-)?cpp)$/ && config.C_Cpp.intelliSenseEngine =~ /^[dD]efault$/"
				},
				{
					"command": "C_Cpp.LogDiagnostics",
					"when": "!(config.C_Cpp.intelliSenseEngine =~ /^[dD]isabled$/)"
				},
				{
					"command": "C_Cpp.RescanWorkspace",
					"when": "!(config.C_Cpp.intelliSenseEngine =~ /^[dD]isabled$/)"
				},
				{
					"command": "C_Cpp.VcpkgClipboardInstallSuggested",
					"when": "editorLangId =~ /^(c|(cuda-)?cpp)$/ && config.C_Cpp.intelliSenseEngine =~ /^[dD]efault$/"
				},
				{
					"command": "C_Cpp.GenerateEditorConfig",
					"when": "!(config.C_Cpp.intelliSenseEngine =~ /^[dD]isabled$/)"
				},
				{
					"command": "C_Cpp.GoToNextDirectiveInGroup",
					"when": "editorLangId =~ /^(c|(cuda-)?cpp)$/ && !(config.C_Cpp.intelliSenseEngine =~ /^[dD]isabled$/)"
				},
				{
					"command": "C_Cpp.GoToPrevDirectiveInGroup",
					"when": "editorLangId =~ /^(c|(cuda-)?cpp)$/ && !(config.C_Cpp.intelliSenseEngine =~ /^[dD]isabled$/)"
				},
				{
					"command": "C_Cpp.CreateDeclarationOrDefinition",
					"when": "editorLangId =~ /^(c|(cuda-)?cpp)$/ && !(config.C_Cpp.intelliSenseEngine =~ /^[dD]isabled$/)"
				},
				{
					"command": "C_Cpp.RunCodeAnalysisOnActiveFile",
					"when": "editorLangId =~ /^(c|(cuda-)?cpp)$/ && config.C_Cpp.intelliSenseEngine =~ /^[dD]efault$/"
				},
				{
					"command": "C_Cpp.RunCodeAnalysisOnOpenFiles",
					"when": "config.C_Cpp.intelliSenseEngine =~ /^[dD]efault$/"
				},
				{
					"command": "C_Cpp.RunCodeAnalysisOnAllFiles",
					"when": "config.C_Cpp.intelliSenseEngine =~ /^[dD]efault$/"
				},
				{
					"command": "C_Cpp.RemoveAllCodeAnalysisProblems",
					"when": "config.C_Cpp.intelliSenseEngine =~ /^[dD]efault$/"
				},
				{
					"command": "C_Cpp.BuildAndDebugFile",
					"when": "editorLangId =~ /^(c|(cuda-)?cpp)$/ && config.C_Cpp.debugShortcut && cpptools.buildAndDebug.isSourceFile"
				},
				{
					"command": "C_Cpp.BuildAndRunFile",
					"when": "editorLangId =~ /^(c|(cuda-)?cpp)$/ && config.C_Cpp.debugShortcut && cpptools.buildAndDebug.isSourceFile"
				},
				{
					"command": "C_Cpp.AddDebugConfiguration",
					"when": "config.C_Cpp.debugShortcut && cpptools.buildAndDebug.isFolderOpen"
				},
				{
					"command": "C_Cpp.GenerateDoxygenComment",
					"when": "editorLangId =~ /^(c|(cuda-)?cpp)$/ && !(config.C_Cpp.intelliSenseEngine =~ /^[dD]isabled$/)"
				},
				{
					"command": "C_Cpp.referencesViewGroupByType",
					"when": "cpptools.hasReferencesResults"
				},
				{
					"command": "C_Cpp.referencesViewUngroupByType",
					"when": "cpptools.hasReferencesResults"
				},
				{
					"command": "C_Cpp.InstallCompiler",
					"when": "never"
				},
				{
					"command": "C_Cpp.RescanCompilers",
					"when": "never"
				},
				{
					"command": "C_Cpp.addSshTarget",
					"when": "never"
				},
				{
					"command": "C_Cpp.removeSshTarget",
					"when": "never"
				},
				{
					"command": "C_Cpp.setActiveSshTarget",
					"when": "never"
				},
				{
					"command": "C_Cpp.selectSshTarget",
					"when": "never"
				},
				{
					"command": "C_Cpp.activeSshTarget",
					"when": "never"
				},
				{
					"command": "C_Cpp.refreshCppSshTargetsView",
					"when": "never"
				},
				{
					"command": "C_Cpp.sshTerminal",
					"when": "never"
				}
			],
			"editor/context": [
				{
					"command": "C_Cpp.SwitchHeaderSource",
					"group": "custom1@1",
					"when": "editorLangId =~ /^(c|(cuda-)?cpp)$/ && !(config.C_Cpp.intelliSenseEngine =~ /^[dD]isabled$/)"
				},
				{
					"command": "workbench.action.gotoSymbol",
					"group": "custom1@2",
					"when": "editorLangId =~ /^(c|(cuda-)?cpp)$/ && !(config.C_Cpp.intelliSenseEngine =~ /^[dD]isabled$/)"
				},
				{
					"command": "workbench.action.showAllSymbols",
					"group": "custom1@3",
					"when": "editorLangId =~ /^(c|(cuda-)?cpp)$/ && !(config.C_Cpp.intelliSenseEngine =~ /^[dD]isabled$/)"
				},
				{
					"command": "C_Cpp.RunCodeAnalysisOnActiveFile",
					"group": "custom2@1",
					"when": "editorLangId =~ /^(c|(cuda-)?cpp)$/ && config.C_Cpp.intelliSenseEngine =~ /^[dD]efault$/"
				},
				{
					"command": "C_Cpp.RestartIntelliSenseForFile",
					"group": "custom2@2",
					"when": "editorLangId =~ /^(c|(cuda-)?cpp)$/ && config.C_Cpp.intelliSenseEngine =~ /^[dD]efault$/"
				},
				{
					"command": "C_Cpp.AddDebugConfiguration",
					"group": "custom2@3",
					"when": "editorLangId =~ /^(c|(cuda-)?cpp)$/ && config.C_Cpp.debugShortcut && cpptools.buildAndDebug.isSourceFile && cpptools.buildAndDebug.isFolderOpen"
				},
				{
					"command": "C_Cpp.GenerateDoxygenComment",
					"group": "custom2@4",
					"when": "editorLangId =~ /^(c|(cuda-)?cpp)$/ && !(config.C_Cpp.intelliSenseEngine =~ /^[dD]isabled$/)"
				},
				{
					"command": "C_Cpp.CreateDeclarationOrDefinition",
					"group": "custom2@5",
					"when": "editorLangId =~ /^(c|(cuda-)?cpp)$/ && !(config.C_Cpp.intelliSenseEngine =~ /^[dD]isabled$/)"
				}
			],
			"editor/title": [
				{
					"command": "C_Cpp.AddDebugConfiguration",
					"group": "navigation",
					"when": "editorLangId =~ /^(c|(cuda-)?cpp)$/ && config.C_Cpp.debugShortcut && cpptools.buildAndDebug.isSourceFile && cpptools.buildAndDebug.isFolderOpen"
				}
			],
			"editor/title/run": [
				{
					"command": "C_Cpp.BuildAndDebugFile",
					"group": "navigation@0",
					"when": "editorLangId =~ /^(c|(cuda-)?cpp)$/ && config.C_Cpp.debugShortcut && cpptools.buildAndDebug.isSourceFile"
				},
				{
					"command": "C_Cpp.BuildAndRunFile",
					"group": "navigation@1",
					"when": "editorLangId =~ /^(c|(cuda-)?cpp)$/ && config.C_Cpp.debugShortcut && cpptools.buildAndDebug.isSourceFile"
				}
			],
			"view/item/context": [
				{
					"command": "C_Cpp.setActiveSshTarget",
					"group": "inline@0",
					"when": "viewItem == CppSshTargetsView.targetLeafCanSetActive || viewItem == CppSshTargetsView.targetLeafRemovableCanSetActive"
				},
				{
					"command": "C_Cpp.sshTerminal",
					"group": "inline@1",
					"when": "view == CppSshTargetsView"
				},
				{
					"command": "C_Cpp.removeSshTarget",
					"group": "inline@2",
					"when": "viewItem == CppSshTargetsView.targetLeafRemovable || viewItem == CppSshTargetsView.targetLeafRemovableCanSetActive"
				}
			],
			"view/title": [
				{
					"command": "C_Cpp.referencesViewGroupByType",
					"group": "navigation",
					"when": "view == CppReferencesView && refView.isGroupedByFile"
				},
				{
					"command": "C_Cpp.referencesViewUngroupByType",
					"group": "navigation",
					"when": "view == CppReferencesView && !refView.isGroupedByFile"
				},
				{
					"command": "C_Cpp.addSshTarget",
					"group": "navigation",
					"when": "view == CppSshTargetsView"
				},
				{
					"command": "C_Cpp.refreshCppSshTargetsView",
					"group": "navigation",
					"when": "view == CppSshTargetsView"
				}
			]
		},
		"problemMatchers": [
			{
				"fileLocation": [
					"autoDetect",
					"${cwd}"
				],
				"name": "gcc",
				"owner": "cpptools",
				"pattern": {
					"column": 3,
					"file": 1,
					"line": 2,
					"message": 5,
					"regexp": "^(.*?):(\\d+):(\\d*):?\\s+(?:fatal\\s+)?(warning|error):\\s+(.*)$",
					"severity": 4
				},
				"source": "gcc"
			},
			{
				"fileLocation": "absolute",
				"name": "iar",
				"owner": "cpptools",
				"pattern": {
					"code": 4,
					"file": 1,
					"line": 2,
					"message": 5,
					"regexp": "^\"(.*?)\",(\\d+)\\s+(?:[Ff]atal\\s+)?([Ww]arning|[Ee]rror)\\[(\\w+\\d+)\\]:\\s+(.*)$",
					"severity": 3
				},
				"source": "iar"
			},
			{
				"fileLocation": [
					"autoDetect",
					"${cwd}"
				],
				"name": "armcc5",
				"owner": "cpptools",
				"pattern": {
					"code": 4,
					"file": 1,
					"line": 2,
					"message": 5,
					"regexp": "^\"(.*)?\",\\s+line\\s+(\\d+):\\s+([Ee]rror|[Ww]arning):\\s+#(.*?):\\s+(.*)$",
					"severity": 3
				},
				"source": "armcc5"
			}
		],
		"semanticTokenModifiers": [
			{
				"description": "%c_cpp.semanticTokenModifiers.global.description%",
				"id": "global"
			},
			{
				"description": "%c_cpp.semanticTokenModifiers.local.description%",
				"id": "local"
			}
		],
		"semanticTokenScopes": [
			{
				"language": "c",
				"scopes": {
					"class": [
						"entity.name.type.class.c"
					],
					"class.defaultLibrary": [
						"support.class.c"
					],
					"cliProperty": [
						"variable.other.property.cli.c"
					],
					"customLiteral": [
						"entity.name.operator.custom-literal.c"
					],
					"enum": [
						"entity.name.type.enum.c"
					],
					"enumMember": [
						"variable.other.enummember.c"
					],
					"event": [
						"variable.other.event.c"
					],
					"function": [
						"entity.name.function.c"
					],
					"function.defaultLibrary": [
						"support.function.c"
					],
					"genericType": [
						"entity.name.type.class.generic.c"
					],
					"interface": [
						"entity.name.type.interface.c"
					],
					"label": [
						"entity.name.label.c"
					],
					"macro": [
						"entity.name.function.preprocessor.c",
						"entity.name.function.macro.c"
					],
					"memberOperatorOverload": [
						"entity.name.function.operator.member.c"
					],
					"method": [
						"entity.name.function.member.c"
					],
					"method.static": [
						"entity.name.function.member.static.c"
					],
					"namespace": [
						"entity.name.namespace.c"
					],
					"newOperator": [
						"keyword.operator.new.c"
					],
					"numberLiteral": [
						"entity.name.operator.custom-literal.number.c"
					],
					"operatorOverload": [
						"entity.name.function.operator.c"
					],
					"parameter": [
						"variable.parameter.c"
					],
					"property": [
						"variable.other.property.c"
					],
					"property.readonly": [
						"variable.other.constant.property.c"
					],
					"property.static": [
						"variable.other.property.static.c"
					],
					"referenceType": [
						"entity.name.type.class.reference.c"
					],
					"stringLiteral": [
						"entity.name.operator.custom-literal.string.c"
					],
					"struct": [
						"storage.type.struct.c"
					],
					"templateFunction": [
						"entity.name.function.templated.c"
					],
					"templateType": [
						"entity.name.type.class.templated.c"
					],
					"type": [
						"entity.name.type.c"
					],
					"type.defaultLibrary": [
						"support.type.c"
					],
					"valueType": [
						"entity.name.type.class.value.c"
					],
					"variable": [
						"variable.other.readwrite.c",
						"entity.name.variable.c"
					],
					"variable.global": [
						"variable.other.global.c"
					],
					"variable.local": [
						"variable.other.local.c"
					],
					"variable.readonly": [
						"variable.other.constant.c"
					],
					"variable.readonly.defaultLibrary": [
						"support.constant.c"
					]
				}
			},
			{
				"language": "cpp",
				"scopes": {
					"class": [
						"entity.name.type.class.cpp"
					],
					"class.defaultLibrary": [
						"support.class.cpp"
					],
					"cliProperty": [
						"variable.other.property.cli.cpp"
					],
					"customLiteral": [
						"entity.name.operator.custom-literal.cpp"
					],
					"enum": [
						"entity.name.type.enum.cpp"
					],
					"enumMember": [
						"variable.other.enummember.cpp"
					],
					"event": [
						"variable.other.event.cpp"
					],
					"function": [
						"entity.name.function.cpp"
					],
					"function.defaultLibrary": [
						"support.function.cpp"
					],
					"genericType": [
						"entity.name.type.class.generic.cpp"
					],
					"interface": [
						"entity.name.type.interface.cpp"
					],
					"label": [
						"entity.name.label.cpp"
					],
					"macro": [
						"entity.name.function.preprocessor.cpp",
						"entity.name.function.macro.cpp"
					],
					"memberOperatorOverload": [
						"entity.name.function.operator.member.cpp"
					],
					"method": [
						"entity.name.function.member.cpp"
					],
					"method.static": [
						"entity.name.function.member.static.cpp"
					],
					"namespace": [
						"entity.name.namespace.cpp"
					],
					"newOperator": [
						"keyword.operator.new.cpp"
					],
					"numberLiteral": [
						"entity.name.operator.custom-literal.number.cpp"
					],
					"operatorOverload": [
						"entity.name.function.operator.cpp"
					],
					"parameter": [
						"variable.parameter.cpp"
					],
					"property": [
						"variable.other.property.cpp"
					],
					"property.readonly": [
						"variable.other.constant.property.cpp"
					],
					"property.static": [
						"variable.other.property.static.cpp"
					],
					"referenceType": [
						"entity.name.type.class.reference.cpp"
					],
					"stringLiteral": [
						"entity.name.operator.custom-literal.string.cpp"
					],
					"struct": [
						"storage.type.struct.cpp"
					],
					"templateFunction": [
						"entity.name.function.templated.cpp"
					],
					"templateType": [
						"entity.name.type.class.templated.cpp"
					],
					"type": [
						"entity.name.type.cpp"
					],
					"type.defaultLibrary": [
						"support.type.cpp"
					],
					"valueType": [
						"entity.name.type.class.value.cpp"
					],
					"variable": [
						"variable.other.readwrite.cpp",
						"entity.name.variable.cpp"
					],
					"variable.global": [
						"variable.other.global.cpp"
					],
					"variable.local": [
						"variable.other.local.cpp"
					],
					"variable.readonly": [
						"variable.other.constant.cpp"
					],
					"variable.readonly.defaultLibrary": [
						"support.constant.cpp"
					]
				}
			},
			{
				"language": "cuda-cpp",
				"scopes": {
					"class": [
						"entity.name.type.class.cuda-cpp"
					],
					"class.defaultLibrary": [
						"support.class.cuda-cpp"
					],
					"cliProperty": [
						"variable.other.property.cli.cuda-cpp"
					],
					"customLiteral": [
						"entity.name.operator.custom-literal.cuda-cpp"
					],
					"enum": [
						"entity.name.type.enum.cuda-cpp"
					],
					"enumMember": [
						"variable.other.enummember.cuda-cpp"
					],
					"event": [
						"variable.other.event.cuda-cpp"
					],
					"function": [
						"entity.name.function.cuda-cpp"
					],
					"function.defaultLibrary": [
						"support.function.cuda-cpp"
					],
					"genericType": [
						"entity.name.type.class.generic.cuda-cpp"
					],
					"interface": [
						"entity.name.type.interface.cuda-cpp"
					],
					"label": [
						"entity.name.label.cuda-cpp"
					],
					"macro": [
						"entity.name.function.preprocessor.cuda-cpp",
						"entity.name.function.macro.cuda-cpp"
					],
					"memberOperatorOverload": [
						"entity.name.function.operator.member.cuda-cpp"
					],
					"method": [
						"entity.name.function.member.cuda-cpp"
					],
					"method.static": [
						"entity.name.function.member.static.cuda-cpp"
					],
					"namespace": [
						"entity.name.namespace.cuda-cpp"
					],
					"newOperator": [
						"keyword.operator.new.cuda-cpp"
					],
					"numberLiteral": [
						"entity.name.operator.custom-literal.number.cuda-cpp"
					],
					"operatorOverload": [
						"entity.name.function.operator.cuda-cpp"
					],
					"parameter": [
						"variable.parameter.cuda-cpp"
					],
					"property": [
						"variable.other.property.cuda-cpp"
					],
					"property.readonly": [
						"variable.other.constant.property.cuda-cpp"
					],
					"property.static": [
						"variable.other.property.static.cuda-cpp"
					],
					"referenceType": [
						"entity.name.type.class.reference.cuda-cpp"
					],
					"stringLiteral": [
						"entity.name.operator.custom-literal.string.cuda-cpp"
					],
					"struct": [
						"storage.type.struct.cuda-cpp"
					],
					"templateFunction": [
						"entity.name.function.templated.cuda-cpp"
					],
					"templateType": [
						"entity.name.type.class.templated.cuda-cpp"
					],
					"type": [
						"entity.name.type.cuda-cpp"
					],
					"type.defaultLibrary": [
						"support.type.cuda-cpp"
					],
					"valueType": [
						"entity.name.type.class.value.cuda-cpp"
					],
					"variable": [
						"variable.other.readwrite.cuda-cpp",
						"entity.name.variable.cuda-cpp"
					],
					"variable.global": [
						"variable.other.global.cuda-cpp"
					],
					"variable.local": [
						"variable.other.local.cuda-cpp"
					],
					"variable.readonly": [
						"variable.other.constant.cuda-cpp"
					],
					"variable.readonly.defaultLibrary": [
						"support.constant.cuda-cpp"
					]
				}
			}
		],
		"semanticTokenTypes": [
			{
				"description": "%c_cpp.semanticTokenTypes.referenceType.description%",
				"id": "referenceType",
				"superType": "class"
			},
			{
				"description": "%c_cpp.semanticTokenTypes.cliProperty.description%",
				"id": "cliProperty",
				"superType": "property"
			},
			{
				"description": "%c_cpp.semanticTokenTypes.genericType.description%",
				"id": "genericType",
				"superType": "class"
			},
			{
				"description": "%c_cpp.semanticTokenTypes.valueType.description%",
				"id": "valueType",
				"superType": "class"
			},
			{
				"description": "%c_cpp.semanticTokenTypes.templateFunction.description%",
				"id": "templateFunction",
				"superType": "function"
			},
			{
				"description": "%c_cpp.semanticTokenTypes.templateType.description%",
				"id": "templateType",
				"superType": "class"
			},
			{
				"description": "%c_cpp.semanticTokenTypes.operatorOverload.description%",
				"id": "operatorOverload",
				"superType": "operator"
			},
			{
				"description": "%c_cpp.semanticTokenTypes.memberOperatorOverload.description%",
				"id": "memberOperatorOverload",
				"superType": "operator"
			},
			{
				"description": "%c_cpp.semanticTokenTypes.newOperator.description%",
				"id": "newOperator",
				"superType": "operator"
			},
			{
				"description": "%c_cpp.semanticTokenTypes.customLiteral.description%",
				"id": "customLiteral",
				"superType": "number"
			},
			{
				"description": "%c_cpp.semanticTokenTypes.numberLiteral.description%",
				"id": "numberLiteral",
				"superType": "number"
			},
			{
				"description": "%c_cpp.semanticTokenTypes.stringLiteral.description%",
				"id": "stringLiteral",
				"superType": "string"
			}
		],
		"taskDefinitions": [
			{
				"properties": {
					"args": {
						"description": "%c_cpp.taskDefinitions.args.description%",
						"items": {
							"oneOf": [
								{
									"type": "string"
								},
								{
									"properties": {
										"quoting": {
											"default": "strong",
											"description": "%c_cpp.taskDefinitions.args.quoting.description%",
											"enum": [
												"escape",
												"strong",
												"weak"
											],
											"enumDescriptions": [
												"%c_cpp.taskDefinitions.args.quoting.escape.description%",
												"%c_cpp.taskDefinitions.args.quoting.strong.description%",
												"%c_cpp.taskDefinitions.args.quoting.weak.description%"
											],
											"type": "string"
										},
										"value": {
											"description": "%c_cpp.taskDefinitions.args.value.description%",
											"type": "string"
										}
									},
									"required": [
										"value",
										"quoting"
									],
									"type": "object"
								}
							]
						},
						"type": "array"
					},
					"command": {
						"oneOf": [
							{
								"type": "string"
							},
							{
								"properties": {
									"quoting": {
										"default": "strong",
										"description": "%c_cpp.taskDefinitions.args.quoting.description%",
										"enum": [
											"escape",
											"strong",
											"weak"
										],
										"enumDescriptions": [
											"%c_cpp.taskDefinitions.args.quoting.escape.description%",
											"%c_cpp.taskDefinitions.args.quoting.strong.description%",
											"%c_cpp.taskDefinitions.args.quoting.weak.description%"
										],
										"type": "string"
									},
									"value": {
										"description": "%c_cpp.taskDefinitions.args.value.description%",
										"type": "string"
									}
								},
								"required": [
									"value",
									"quoting"
								],
								"type": "object"
							}
						]
					},
					"detail": {
						"description": "%c_cpp.taskDefinitions.detail.description%",
						"type": "string"
					},
					"label": {
						"description": "%c_cpp.taskDefinitions.name.description%",
						"type": "string"
					},
					"options": {
						"description": "%c_cpp.taskDefinitions.options.description%",
						"properties": {
							"cwd": {
								"description": "%c_cpp.taskDefinitions.options.cwd.description%",
								"type": "string"
							}
						},
						"type": "object"
					}
				},
				"required": [
					"command",
					"label"
				],
				"type": "cppbuild"
			}
		],
		"views": {
			"debug": [
				{
					"id": "CppSshTargetsView",
					"name": "%c_cpp.contributes.views.sshTargetsView.title%",
					"when": "cpptools.enableSshTargetsView"
				}
			],
			"references-view": [
				{
					"id": "CppReferencesView",
					"name": "%c_cpp.contributes.views.cppReferencesView.title%",
					"when": "cpptools.hasReferencesResults"
				}
			]
		},
		"viewsWelcome": [
			{
				"contents": "%c_cpp.contributes.viewsWelcome.contents%",
				"view": "debug",
				"when": "debugStartLanguage == cpp || debugStartLanguage == c || debugStartLanguage == cuda-cpp"
			}
		],
		"walkthroughs": [
			{
				"description": "%c_cpp.walkthrough.description%",
				"id": "cppWelcome",
				"steps": [
					{
						"description": "%c_cpp.walkthrough.activating.description%",
						"id": "awaiting.activation.mac",
						"media": {
							"markdown": "dist/walkthrough/installcompiler/install-clang-macos.md"
						},
						"title": "%c_cpp.walkthrough.set.up.title%",
						"when": "workspacePlatform == mac && cpptools.scanForCompilersDone == false"
					},
					{
						"description": "%c_cpp.walkthrough.activating.description%",
						"id": "awaiting.activation.linux",
						"media": {
							"markdown": "dist/walkthrough/installcompiler/install-gcc-linux.md"
						},
						"title": "%c_cpp.walkthrough.set.up.title%",
						"when": "workspacePlatform == linux && cpptools.scanForCompilersDone == false"
					},
					{
						"description": "%c_cpp.walkthrough.activating.description%",
						"id": "awaiting.activation.windows",
						"media": {
							"markdown": "dist/walkthrough/installcompiler/install-compiler-windows.md"
						},
						"title": "%c_cpp.walkthrough.set.up.title%",
						"when": "workspacePlatform == windows && cpptools.scanForCompilersDone == false && cpptools.windowsVersion != 10 && cpptools.windowsVersion != 11"
					},
					{
						"description": "%c_cpp.walkthrough.activating.description%",
						"id": "awaiting.activation.windows10",
						"media": {
							"markdown": "dist/walkthrough/installcompiler/install-compiler-windows10.md"
						},
						"title": "%c_cpp.walkthrough.set.up.title%",
						"when": "workspacePlatform == windows && cpptools.scanForCompilersDone == false && cpptools.windowsVersion == 10"
					},
					{
						"description": "%c_cpp.walkthrough.activating.description%",
						"id": "awaiting.activation.windows11",
						"media": {
							"markdown": "dist/walkthrough/installcompiler/install-compiler-windows11.md"
						},
						"title": "%c_cpp.walkthrough.set.up.title%",
						"when": "workspacePlatform == windows && cpptools.scanForCompilersDone == false && cpptools.windowsVersion == 11"
					},
					{
						"description": "%c_cpp.walkthrough.no.compilers.description%",
						"id": "no.compilers.found.mac",
						"media": {
							"markdown": "dist/walkthrough/installcompiler/install-clang-macos.md"
						},
						"title": "%c_cpp.walkthrough.set.up.title%",
						"when": "workspacePlatform == mac && cpptools.scanForCompilersDone == true && cpptools.scanForCompilersEmpty == true"
					},
					{
						"description": "%c_cpp.walkthrough.no.compilers.description%",
						"id": "no.compilers.found.linux",
						"media": {
							"markdown": "dist/walkthrough/installcompiler/install-gcc-linux.md"
						},
						"title": "%c_cpp.walkthrough.set.up.title%",
						"when": "workspacePlatform == linux && cpptools.scanForCompilersDone == true && cpptools.scanForCompilersEmpty == true"
					},
					{
						"description": "%c_cpp.walkthrough.no.compilers.windows.description%",
						"id": "no.compilers.found.windows",
						"media": {
							"markdown": "dist/walkthrough/installcompiler/install-compiler-windows.md"
						},
						"title": "%c_cpp.walkthrough.set.up.title%",
						"when": "workspacePlatform == windows && cpptools.scanForCompilersDone == true && cpptools.scanForCompilersEmpty == true && cpptools.windowsVersion != 10 && cpptools.windowsVersion != 11"
					},
					{
						"description": "%c_cpp.walkthrough.no.compilers.windows.description%",
						"id": "no.compilers.found.windows10",
						"media": {
							"markdown": "dist/walkthrough/installcompiler/install-compiler-windows10.md"
						},
						"title": "%c_cpp.walkthrough.set.up.title%",
						"when": "workspacePlatform == windows && cpptools.scanForCompilersDone == true && cpptools.scanForCompilersEmpty == true && cpptools.windowsVersion == 10"
					},
					{
						"description": "%c_cpp.walkthrough.no.compilers.windows.description%",
						"id": "no.compilers.found.windows11",
						"media": {
							"markdown": "dist/walkthrough/installcompiler/install-compiler-windows11.md"
						},
						"title": "%c_cpp.walkthrough.set.up.title%",
						"when": "workspacePlatform == windows && cpptools.scanForCompilersDone == true && cpptools.scanForCompilersEmpty == true && cpptools.windowsVersion == 11"
					},
					{
						"completionEvents": [
							"onContext:cpptools.trustedCompilerFound"
						],
						"description": "%c_cpp.walkthrough.compilers.found.description%",
						"id": "verify.compiler.mac",
						"media": {
							"markdown": "dist/walkthrough/installcompiler/install-clang-macos.md"
						},
						"title": "%c_cpp.walkthrough.set.up.title%",
						"when": "workspacePlatform == mac && cpptools.scanForCompilersDone == true && cpptools.scanForCompilersEmpty == false"
					},
					{
						"completionEvents": [
							"onContext:cpptools.trustedCompilerFound"
						],
						"description": "%c_cpp.walkthrough.compilers.found.description%",
						"id": "verify.compiler.linux",
						"media": {
							"markdown": "dist/walkthrough/installcompiler/install-gcc-linux.md"
						},
						"title": "%c_cpp.walkthrough.set.up.title%",
						"when": "workspacePlatform == linux && cpptools.scanForCompilersDone == true && cpptools.scanForCompilersEmpty == false"
					},
					{
						"completionEvents": [
							"onContext:cpptools.trustedCompilerFound"
						],
						"description": "%c_cpp.walkthrough.compilers.found.description%",
						"id": "verify.compiler.windows",
						"media": {
							"markdown": "dist/walkthrough/installcompiler/install-compiler-windows.md"
						},
						"title": "%c_cpp.walkthrough.set.up.title%",
						"when": "workspacePlatform == windows && cpptools.scanForCompilersDone == true && cpptools.scanForCompilersEmpty == false && cpptools.windowsVersion != 10 && cpptools.windowsVersion != 11"
					},
					{
						"completionEvents": [
							"onContext:cpptools.trustedCompilerFound"
						],
						"description": "%c_cpp.walkthrough.compilers.found.description%",
						"id": "verify.compiler.windows10",
						"media": {
							"markdown": "dist/walkthrough/installcompiler/install-compiler-windows10.md"
						},
						"title": "%c_cpp.walkthrough.set.up.title%",
						"when": "workspacePlatform == windows && cpptools.scanForCompilersDone == true && cpptools.scanForCompilersEmpty == false && cpptools.windowsVersion == 10"
					},
					{
						"completionEvents": [
							"onContext:cpptools.trustedCompilerFound"
						],
						"description": "%c_cpp.walkthrough.compilers.found.description%",
						"id": "verify.compiler.windows11",
						"media": {
							"markdown": "dist/walkthrough/installcompiler/install-compiler-windows11.md"
						},
						"title": "%c_cpp.walkthrough.set.up.title%",
						"when": "workspacePlatform == windows && cpptools.scanForCompilersDone == true && cpptools.scanForCompilersEmpty == false && cpptools.windowsVersion == 11"
					},
					{
						"description": "%c_cpp.walkthrough.create.cpp.file.description%",
						"id": "create.cpp.file",
						"media": {
							"altText": "%c_cpp.walkthrough.create.cpp.file.altText%",
							"svg": "dist/walkthrough/images/create-a-file.svg"
						},
						"title": "%c_cpp.walkthrough.create.cpp.file.title%"
					},
					{
						"completionEvents": [
							"onContext:cpptools.msvcEnvironmentFound"
						],
						"description": "%c_cpp.walkthrough.command.prompt.description%",
						"id": "relaunch.developer.command.prompt.windows",
						"media": {
							"markdown": "dist/walkthrough/devcommandprompt/open-developer-command-prompt.md"
						},
						"title": "%c_cpp.walkthrough.command.prompt.title%",
						"when": "workspacePlatform == windows"
					},
					{
						"description": "%c_cpp.walkthrough.run.debug.mac.description%",
						"id": "run.project.mac",
						"media": {
							"altText": "%c_cpp.walkthrough.run.debug.windows.altText%",
							"svg": "dist/walkthrough/images/run-and-debug.svg"
						},
						"title": "%c_cpp.walkthrough.run.debug.title%",
						"when": "workspacePlatform == mac"
					},
					{
						"description": "%c_cpp.walkthrough.run.debug.linux.description%",
						"id": "run.project.linux",
						"media": {
							"altText": "%c_cpp.walkthrough.run.debug.windows.altText%",
							"svg": "dist/walkthrough/images/run-and-debug.svg"
						},
						"title": "%c_cpp.walkthrough.run.debug.title%",
						"when": "workspacePlatform == linux"
					},
					{
						"description": "%c_cpp.walkthrough.run.debug.windows.description%",
						"id": "run.project.windows",
						"media": {
							"altText": "%c_cpp.walkthrough.run.debug.windows.altText%",
							"svg": "dist/walkthrough/images/run-and-debug.svg"
						},
						"title": "%c_cpp.walkthrough.run.debug.title%",
						"when": "workspacePlatform == windows"
					},
					{
						"description": "%c_cpp.walkthrough.customize.debugging.mac.description%",
						"id": "customize.debugging.linux",
						"media": {
							"altText": "%c_cpp.walkthrough.customize.debugging.altText%",
							"svg": "dist/walkthrough/images/customize-debugging.svg"
						},
						"title": "%c_cpp.walkthrough.customize.debugging.title%",
						"when": "workspacePlatform == linux"
					},
					{
						"description": "%c_cpp.walkthrough.customize.debugging.linux.description%",
						"id": "customize.debugging.windows",
						"media": {
							"altText": "%c_cpp.walkthrough.customize.debugging.altText%",
							"svg": "dist/walkthrough/images/customize-debugging.svg"
						},
						"title": "%c_cpp.walkthrough.customize.debugging.title%",
						"when": "workspacePlatform == windows"
					},
					{
						"description": "%c_cpp.walkthrough.customize.debugging.windows.description%",
						"id": "customize.debugging.mac",
						"media": {
							"altText": "%c_cpp.walkthrough.customize.debugging.altText%",
							"svg": "dist/walkthrough/images/customize-debugging.svg"
						},
						"title": "%c_cpp.walkthrough.customize.debugging.title%",
						"when": "workspacePlatform == mac"
					}
				],
				"title": "%c_cpp.walkthrough.title%"
			}
		]
	},
	"dependencies": {
		"chokidar": "^3.6.0",
		"comment-json": "^4.2.3",
		"escape-string-regexp": "^2.0.0",
		"glob": "^7.2.3",
		"minimatch": "^3.0.5",
		"mkdirp": "^3.0.1",
		"node-fetch": "^2.7.0",
		"node-loader": "^2.0.0",
		"node-stream-zip": "^1.15.0",
		"plist": "^3.1.0",
		"posix-getopt": "^1.2.1",
		"shell-quote": "^1.8.1",
		"ssh-config": "^4.4.4",
		"tmp": "^0.2.3",
		"which": "^2.0.2"
	},
	"description": "C/C++ IntelliSense, debugging, and code browsing.",
	"devDependencies": {
		"@octokit/rest": "^20.1.1",
		"@types/glob": "^7.2.0",
		"@types/minimatch": "^3.0.5",
		"@types/node": "^20.14.2",
		"@types/node-fetch": "^2.6.11",
		"@types/plist": "^3.0.5",
		"@types/proxyquire": "^1.3.31",
		"@types/semver": "^7.5.8",
		"@types/shell-quote": "^1.7.5",
		"@types/sinon": "^17.0.3",
		"@types/tmp": "^0.2.6",
		"@types/which": "^2.0.2",
		"@types/yauzl": "^2.10.3",
		"async-child-process": "^1.1.1",
		"await-notify": "^1.0.1",
		"event-stream": "^4.0.1",
		"fs-extra": "^11.2.0",
		"minimist": "^1.2.8",
		"parse-git-config": "^3.0.0",
		"parse5": "^7.1.2",
		"parse5-traverse": "^1.0.3",
		"proxyquire": "^2.1.3",
		"sinon": "^19.0.2",
		"ts-loader": "^9.5.1",
		"xml2js": "^0.6.2"
	},
	"displayName": "C/C++",
	"enabledApiProposals": [
		"terminalDataWriteEvent"
	],
	"icon": "LanguageCCPP_color_128x.png",
	"main": "./dist/src/main",
	"name": "cpptools",
	"qna": "https://github.com/Microsoft/vscode-cpptools/issues",
	"readme": "README.md",
	"resolutions": {
		"gulp-typescript/**/glob-parent": "^5.1.2",
		"postcss": "^8.4.31"
	},
	"scripts": {
		"build": "yarn prep:dts && echo [Building TypeScript code] && tsc --build tsconfig.json",
		"clean": "ts-node -T .scripts/clean.ts",
		"code": "yarn install && (yarn verify compiled --quiet || yarn build) && yarn verify binaries && ts-node -T .scripts/code.ts",
		"compile": "yarn install && (yarn verify prep --quiet || yarn prep) && yarn build",
		"copy-walkthrough-media": "ts-node -T ./.scripts/copyWalkthruMedia.ts",
		"generate-native-strings": "ts-node -T ./.scripts/generateNativeStrings.ts",
		"generate-options-schema": "ts-node -T ./.scripts/generateOptionsSchema.ts",
		"import-edge-strings": "ts-node -T ./.scripts/import_edge_strings.ts",
		"prep": "yarn prep:dts && yarn copy-walkthrough-media && yarn generate-native-strings && yarn translations-generate",
		"prep:dts": "yarn verify dts --quiet || (npx vscode-dts dev && npx vscode-dts main)",
		"rebuild": "yarn install && yarn clean && yarn prep && yarn build",
		"scripts": "ts-node -T .scripts/scripts.ts",
		"show": "ts-node -T .scripts/clean.ts show",
		"translations-export": "yarn install && yarn prep && yarn generate-native-strings && gulp translations-export",
		"translations-generate": "set NODE_OPTIONS=--no-experimental-fetch && gulp translations-generate",
		"translations-import": "gulp translations-import",
		"verify": "ts-node -T .scripts/verify.ts",
		"vsix-prepublish": "yarn install && yarn clean && yarn webpack",
		"webpack": "yarn install && (yarn verify prep --quiet || yarn prep) && tsc --build ui.tsconfig.json && webpack --mode production --env vscode_nls"
	}
}
